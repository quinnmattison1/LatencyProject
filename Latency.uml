<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_5b1RIGUsEe6bAesDIgR3sg" name="Latency">
    <eAnnotations xmi:id="_5fYUYGUsEe6bAesDIgR3sg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_5fYUYWUsEe6bAesDIgR3sg" source="codegen">
        <details xmi:id="_5fYUYmUsEe6bAesDIgR3sg" key="codegenDirectory" value="/cs2820-fall23/src"/>
        <details xmi:id="_7JnooGUsEe6bAesDIgR3sg" key="AssociatedSourceCode" value="/cs2820-fall23/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall23/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-fall23/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall23/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall23/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall23/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall23/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall23/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall23/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall23/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall23/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall23/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-fall23/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall23/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall23/src/edu/uiowa/cs/warp/LatencyAnalysis.java;3124260452/1;/cs2820-fall23/src/edu/uiowa/cs/warp/LatencyVisualization.java;785897799/1;/cs2820-fall23/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall23/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall23/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall23/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall23/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall23/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WorkLoadDescription.java;2732187131/1;/cs2820-fall23/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall23/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ProgramVisualization.java;1088040009/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;2919449855/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;4166646452/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall23/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall23/src/edu/uiowa/cs/warp/VisualizationImplementation.java;400555688/1;/cs2820-fall23/src/edu/uiowa/cs/warp/VisualizationObject.java;1359121486/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Warp.java;1458699109/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Program.java;2230631585/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WorkLoad.java;1720029430/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Flow.java;3142956155/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_DOKUQHLKEe6Y3e8f6FsdUw" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_DOK7UHLKEe6Y3e8f6FsdUw" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_DOK7UXLKEe6Y3e8f6FsdUw" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_DOK7UnLKEe6Y3e8f6FsdUw" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="true"/>
          <details xmi:id="_DOK7U3LKEe6Y3e8f6FsdUw" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_6BOdMGUsEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_6BOdMWUsEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_6BOdMmUsEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_6BOdM2UsEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_6BOdNGUsEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_6BOdNWUsEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_6BOdNmUsEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_6BOdN2UsEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_6BOdOGUsEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_6BC3AGUsEe6bAesDIgR3sg" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_6BC3AWUsEe6bAesDIgR3sg" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_6BC3AmUsEe6bAesDIgR3sg" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_6BDeEmUsEe6bAesDIgR3sg" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_6BTVsGUsEe6bAesDIgR3sg" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_6PwocWUsEe6bAesDIgR3sg" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_6BaDYGUsEe6bAesDIgR3sg" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_6QC8UGUsEe6bAesDIgR3sg" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_6QC8UmUsEe6bAesDIgR3sg" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_6BbRgGUsEe6bAesDIgR3sg" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_6QExgWUsEe6bAesDIgR3sg" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CXFoGUsEe6bAesDIgR3sg" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_6Rg78GUsEe6bAesDIgR3sg" general="_6PKLgGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6SmhEGUsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6SnvMGUsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbAcGUsEe6bAesDIgR3sg" name="AbstractMap" specification="_6CXssWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbAcWUsEe6bAesDIgR3sg" type="_6CXFoGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6CXssWUsEe6bAesDIgR3sg" name="AbstractMap" method="_6TbAcGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6CXssmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6CXss2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6CXstGUsEe6bAesDIgR3sg" type="_6CXFoGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CXstWUsEe6bAesDIgR3sg" name="Activations">
              <generalization xmi:id="_6PMAsGUsEe6bAesDIgR3sg" general="_6CXFoGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6SnvMWUsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6SnvMmUsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CYTwGUsEe6bAesDIgR3sg" name="BasicPoset">
              <ownedComment xmi:id="_6Tw-sGUsEe6bAesDIgR3sg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_6PPEA2UsEe6bAesDIgR3sg" general="_6DypAGUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbAcmUsEe6bAesDIgR3sg" name="BasicPoset" specification="_6PN14GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbAc2UsEe6bAesDIgR3sg" name="workload" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TbAdGUsEe6bAesDIgR3sg" type="_6CYTwGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6PN14GUsEe6bAesDIgR3sg" name="BasicPoset" visibility="package" method="_6TbAcmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PPEAGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PPEAWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6POc8GUsEe6bAesDIgR3sg" name="workload" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PPEAmUsEe6bAesDIgR3sg" type="_6CYTwGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CYTwWUsEe6bAesDIgR3sg" name="ChannelAnalysis">
              <ownedComment xmi:id="_6Tw-sWUsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6SnvM2UsEe6bAesDIgR3sg" name="program" visibility="private" type="_6DaOgGUsEe6bAesDIgR3sg" association="_6T9L8GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6SnvNWUsEe6bAesDIgR3sg" name="programTable" visibility="private" type="_6C0_sGUsEe6bAesDIgR3sg" association="_6T9zAWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6SoWQWUsEe6bAesDIgR3sg" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbAdWUsEe6bAesDIgR3sg" name="ChannelAnalysis" specification="_6PPrEGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbAdmUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TbAd2UsEe6bAesDIgR3sg" type="_6CYTwWUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbAeGUsEe6bAesDIgR3sg" name="ChannelAnalysis" specification="_6PQ5MGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbAeWUsEe6bAesDIgR3sg" name="program" type="_6DaOgGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TbAemUsEe6bAesDIgR3sg" type="_6CYTwWUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbAe2UsEe6bAesDIgR3sg" name="isChannelConflict" specification="_6CYTwmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbAfGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6CYTwmUsEe6bAesDIgR3sg" name="isChannelConflict" method="_6TbAe2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CY60GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6PPrEGUsEe6bAesDIgR3sg" name="ChannelAnalysis" visibility="package" method="_6TbAdWUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PQSIGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PQSIWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6PPrEWUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PQSImUsEe6bAesDIgR3sg" type="_6CYTwWUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PQ5MGUsEe6bAesDIgR3sg" name="ChannelAnalysis" visibility="package" method="_6TbAeGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PQ5MmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PQ5M2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6PQ5MWUsEe6bAesDIgR3sg" name="program" type="_6DaOgGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PQ5NGUsEe6bAesDIgR3sg" type="_6CYTwWUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CY60WUsEe6bAesDIgR3sg" name="ChannelVisualization">
              <ownedComment xmi:id="_6Tw-smUsEe6bAesDIgR3sg">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6PRgRWUsEe6bAesDIgR3sg" general="_6DKW4GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6SoWQ2UsEe6bAesDIgR3sg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6SoWRGUsEe6bAesDIgR3sg" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6SoWRWUsEe6bAesDIgR3sg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6SpkYGUsEe6bAesDIgR3sg" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6SpkYWUsEe6bAesDIgR3sg" name="warp" visibility="private" type="_6C7taWUsEe6bAesDIgR3sg" association="_6T9zBGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6SpkY2UsEe6bAesDIgR3sg" name="ca" visibility="private" type="_6CYTwWUsEe6bAesDIgR3sg" association="_6T-aEWUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbAfWUsEe6bAesDIgR3sg" name="ChannelVisualization" specification="_6PRgQGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbAfmUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TbAf2UsEe6bAesDIgR3sg" type="_6CY60WUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6PRgQGUsEe6bAesDIgR3sg" name="ChannelVisualization" visibility="package" method="_6TbAfWUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PRgQmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PRgQ2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6PRgQWUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PRgRGUsEe6bAesDIgR3sg" type="_6CY60WUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CZh4GUsEe6bAesDIgR3sg" name="Channels">
              <ownedComment xmi:id="_6TxlwGUsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6SqygGUsEe6bAesDIgR3sg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6SqygmUsEe6bAesDIgR3sg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6SqyhGUsEe6bAesDIgR3sg" name="channelsAvailable" visibility="package" type="_6PSHUGUsEe6bAesDIgR3sg" association="_6T-aFGUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbAhWUsEe6bAesDIgR3sg" name="Channels" specification="_6CaI9WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbAhmUsEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TbAh2UsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TbAiGUsEe6bAesDIgR3sg" type="_6CZh4GUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbAiWUsEe6bAesDIgR3sg" name="getChannelSet" specification="_6CaI-2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbAimUsEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TbAi2UsEe6bAesDIgR3sg" type="_6PSHUmUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbngGUsEe6bAesDIgR3sg" name="addNewChannelSet" specification="_6CawAWUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbngWUsEe6bAesDIgR3sg" name="isEmpty" specification="_6CawAmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbngmUsEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tbng2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbnhGUsEe6bAesDIgR3sg" name="removeChannel" specification="_6CawBWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbnhWUsEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TbnhmUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tbnh2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbniGUsEe6bAesDIgR3sg" name="addChannel" specification="_6CawCWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbniWUsEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TbnimUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tbni2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbnjGUsEe6bAesDIgR3sg" name="getNumChannels" specification="_6CawDWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbnjWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6CaI9WUsEe6bAesDIgR3sg" name="Channels" visibility="package" method="_6TbAhWUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6CaI-GUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6CaI-WUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6CaI9mUsEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CaI92UsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CaI-mUsEe6bAesDIgR3sg" type="_6CZh4GUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6CaI-2UsEe6bAesDIgR3sg" name="getChannelSet" method="_6TbAiWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CaI_GUsEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6RiKEWUsEe6bAesDIgR3sg" type="_6PSHUmUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6CawAWUsEe6bAesDIgR3sg" name="addNewChannelSet" method="_6TbngGUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6CawAmUsEe6bAesDIgR3sg" name="isEmpty" method="_6TbngWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CawA2UsEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CawBGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CawBWUsEe6bAesDIgR3sg" name="removeChannel" method="_6TbnhGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CawBmUsEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CawB2UsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CawCGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CawCWUsEe6bAesDIgR3sg" name="addChannel" method="_6TbniGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CawCmUsEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CawC2UsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CawDGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CawDWUsEe6bAesDIgR3sg" name="getNumChannels" method="_6TbnjGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CawDmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_6CZh4WUsEe6bAesDIgR3sg" name="ChannelSet" visibility="private">
                <generalization xmi:id="_6RhjAGUsEe6bAesDIgR3sg" general="_6PSHUmUsEe6bAesDIgR3sg"/>
                <ownedAttribute xmi:id="_6SqLcGUsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_6SqLcWUsEe6bAesDIgR3sg" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbAgGUsEe6bAesDIgR3sg" name="ChannelSet" specification="_6CZh4mUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TbAgWUsEe6bAesDIgR3sg" type="_6CZh4WUsEe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbAgmUsEe6bAesDIgR3sg" name="ChannelSet" specification="_6CaI8GUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TbAg2UsEe6bAesDIgR3sg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_6TbAhGUsEe6bAesDIgR3sg" type="_6CZh4WUsEe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_6CZh4mUsEe6bAesDIgR3sg" name="ChannelSet" visibility="private" method="_6TbAgGUsEe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_6CZh42UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_6CZh5GUsEe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_6CZh5WUsEe6bAesDIgR3sg" type="_6CZh4WUsEe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_6CaI8GUsEe6bAesDIgR3sg" name="ChannelSet" visibility="private" method="_6TbAgmUsEe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_6CaI8mUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_6CaI82UsEe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_6CaI8WUsEe6bAesDIgR3sg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_6CaI9GUsEe6bAesDIgR3sg" type="_6CZh4WUsEe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CbXEGUsEe6bAesDIgR3sg" name="CodeFragment">
              <ownedAttribute xmi:id="_6SsAoGUsEe6bAesDIgR3sg" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6SsAoWUsEe6bAesDIgR3sg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6SsAomUsEe6bAesDIgR3sg" name="edges" visibility="package" type="_6PSHUGUsEe6bAesDIgR3sg" association="_6T-aF2UsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6Suc4WUsEe6bAesDIgR3sg" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6SvD8WUsEe6bAesDIgR3sg" name="codeFragment" visibility="package" type="_6PSHUGUsEe6bAesDIgR3sg" association="_6T-aGmUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6SzVYWUsEe6bAesDIgR3sg" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6SzVY2UsEe6bAesDIgR3sg" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbnjmUsEe6bAesDIgR3sg" name="CodeFragment" specification="_6CbXEWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tbnj2UsEe6bAesDIgR3sg" type="_6CbXEGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbnkGUsEe6bAesDIgR3sg" name="CodeFragment" specification="_6RjYMGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbnkWUsEe6bAesDIgR3sg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TbnkmUsEe6bAesDIgR3sg" name="edges" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tbnk2UsEe6bAesDIgR3sg" name="coordinators" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TbnlGUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TbnlWUsEe6bAesDIgR3sg" type="_6CbXEGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbnlmUsEe6bAesDIgR3sg" name="getCoordinator" specification="_6Cb-IGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tbnl2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbnmGUsEe6bAesDIgR3sg" name="instructions" specification="_6Cb-ImUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbnmWUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbnmmUsEe6bAesDIgR3sg" name="size" specification="_6Cb-JGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tbnm2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbnnGUsEe6bAesDIgR3sg" name="generateCodeFragment" specification="_6Cb-JmUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TbnnWUsEe6bAesDIgR3sg" name="getBaseInstruction" specification="_6Cb-J2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TbnnmUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tbnn2UsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TbnoGUsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TbnoWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TcOkGUsEe6bAesDIgR3sg" name="push" specification="_6CclMWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TcOkWUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOkmUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOk2UsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOlGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TcOlWUsEe6bAesDIgR3sg" name="pull" specification="_6CclNmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TcOlmUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOl2UsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOmGUsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOmWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TcOmmUsEe6bAesDIgR3sg" name="ifHas" specification="_6CclO2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TcOm2UsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOnGUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOnWUsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOnmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TcOn2UsEe6bAesDIgR3sg" name="ifNotHas" specification="_6CclQGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TcOoGUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOoWUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOomUsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOo2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TcOpGUsEe6bAesDIgR3sg" name="wait" specification="_6CdMQGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TcOpWUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOpmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TcOp2UsEe6bAesDIgR3sg" name="sleep" specification="_6CdMQ2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TcOqGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TcOqWUsEe6bAesDIgR3sg" name="reportIfDifferentCoordinators" specification="_6Rj_Q2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TcOqmUsEe6bAesDIgR3sg" name="coordinators" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TcOq2UsEe6bAesDIgR3sg" name="multipleCoordinators" specification="_6RkmUmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TcOrGUsEe6bAesDIgR3sg" name="coordinators" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TcOrWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6CbXEWUsEe6bAesDIgR3sg" name="CodeFragment" visibility="package" method="_6TbnjmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6CbXEmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6CbXE2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6TxlwWUsEe6bAesDIgR3sg">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_6CbXFGUsEe6bAesDIgR3sg" type="_6CbXEGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Cb-IGUsEe6bAesDIgR3sg" name="getCoordinator" method="_6TbnlmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Txlw2UsEe6bAesDIgR3sg">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Cb-IWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Cb-ImUsEe6bAesDIgR3sg" name="instructions" method="_6TbnmGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TxlxGUsEe6bAesDIgR3sg">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Rj_QmUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Cb-JGUsEe6bAesDIgR3sg" name="size" method="_6TbnmmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TxlxWUsEe6bAesDIgR3sg">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Cb-JWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Cb-JmUsEe6bAesDIgR3sg" name="generateCodeFragment" visibility="private" method="_6TbnnGUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6Cb-J2UsEe6bAesDIgR3sg" name="getBaseInstruction" visibility="private" method="_6TbnnWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Cb-KGUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cb-KWUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cb-KmUsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CclMGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CclMWUsEe6bAesDIgR3sg" name="push" visibility="private" method="_6TcOkGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CclMmUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CclM2UsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CclNGUsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CclNWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CclNmUsEe6bAesDIgR3sg" name="pull" visibility="private" method="_6TcOlWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CclN2UsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CclOGUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CclOWUsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CclOmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CclO2UsEe6bAesDIgR3sg" name="ifHas" visibility="private" method="_6TcOmmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CclPGUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CclPWUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CclPmUsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CclP2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CclQGUsEe6bAesDIgR3sg" name="ifNotHas" visibility="private" method="_6TcOn2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CclQWUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CclQmUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CclQ2UsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CclRGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CdMQGUsEe6bAesDIgR3sg" name="wait" method="_6TcOpGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CdMQWUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CdMQmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CdMQ2UsEe6bAesDIgR3sg" name="sleep" isStatic="true" method="_6TcOp2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CdMRGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6RjYMGUsEe6bAesDIgR3sg" name="CodeFragment" visibility="package" method="_6TbnkGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6RjYNWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6RjYNmUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6TxlwmUsEe6bAesDIgR3sg">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_6RjYMWUsEe6bAesDIgR3sg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6RjYMmUsEe6bAesDIgR3sg" name="edges" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6RjYM2UsEe6bAesDIgR3sg" name="coordinators" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6RjYNGUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6RjYN2UsEe6bAesDIgR3sg" type="_6CbXEGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Rj_Q2UsEe6bAesDIgR3sg" name="reportIfDifferentCoordinators" visibility="private" method="_6TcOqWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6RkmUGUsEe6bAesDIgR3sg" name="coordinators" type="_6PSHUGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6RkmUmUsEe6bAesDIgR3sg" name="multipleCoordinators" visibility="private" method="_6TcOq2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6RkmU2UsEe6bAesDIgR3sg" name="coordinators" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6RkmVGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CeaYGUsEe6bAesDIgR3sg" name="CombinedActivation">
              <generalization xmi:id="_6PZcE2UsEe6bAesDIgR3sg" general="_6D9BEGUsEe6bAesDIgR3sg"/>
              <interfaceRealization xmi:id="_6RnpoWUsEe6bAesDIgR3sg" client="_6CeaYGUsEe6bAesDIgR3sg" supplier="_6RmbgWUsEe6bAesDIgR3sg" contract="_6RmbgWUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TcOrmUsEe6bAesDIgR3sg" name="CombinedActivation" specification="_6CeaYWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TcOr2UsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOsGUsEe6bAesDIgR3sg" type="_6CeaYGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TcOsWUsEe6bAesDIgR3sg" name="CombinedActivation" specification="_6PW_0GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TcOsmUsEe6bAesDIgR3sg" name="elem" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TcOs2UsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TcOtGUsEe6bAesDIgR3sg" type="_6CeaYGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TcOtWUsEe6bAesDIgR3sg" name="CombinedActivation" specification="_6PYN8GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TcOtmUsEe6bAesDIgR3sg" name="priorEntry" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TcOt2UsEe6bAesDIgR3sg" name="next" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TcOuGUsEe6bAesDIgR3sg" type="_6CeaYGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TcOuWUsEe6bAesDIgR3sg" name="canCombine" specification="_6PY1BWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TcOumUsEe6bAesDIgR3sg" name="a2" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TcOu2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6CeaYWUsEe6bAesDIgR3sg" name="CombinedActivation" visibility="package" method="_6TcOrmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6CeaY2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6CeaZGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6CeaYmUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CeaZWUsEe6bAesDIgR3sg" type="_6CeaYGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PW_0GUsEe6bAesDIgR3sg" name="CombinedActivation" visibility="package" method="_6TcOsWUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PW_02UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PW_1GUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6PW_0WUsEe6bAesDIgR3sg" name="elem" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PW_0mUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6PW_1WUsEe6bAesDIgR3sg" type="_6CeaYGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PYN8GUsEe6bAesDIgR3sg" name="CombinedActivation" visibility="package" method="_6TcOtWUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PY1AmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PY1A2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6PY1AGUsEe6bAesDIgR3sg" name="priorEntry" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PY1AWUsEe6bAesDIgR3sg" name="next" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PY1BGUsEe6bAesDIgR3sg" type="_6CeaYGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PY1BWUsEe6bAesDIgR3sg" name="canCombine" method="_6TcOuWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PY1BmUsEe6bAesDIgR3sg" name="a2" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PY1B2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CfBcGUsEe6bAesDIgR3sg" name="CommunicationGraph">
              <ownedComment xmi:id="_6TxlxmUsEe6bAesDIgR3sg">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6PaqNmUsEe6bAesDIgR3sg" general="_6DKW4GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6Sz8cGUsEe6bAesDIgR3sg" name="wfm" visibility="package" type="_6Cj58mUsEe6bAesDIgR3sg" association="_6T_BIWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6Sz8cmUsEe6bAesDIgR3sg" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6Sz8dGUsEe6bAesDIgR3sg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6Sz8dmUsEe6bAesDIgR3sg" name="workLoad" visibility="package" type="_6DqGIGUsEe6bAesDIgR3sg" association="_6T_BJGUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TcOvGUsEe6bAesDIgR3sg" name="CommunicationGraph" specification="_6PaDIGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TcOvWUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TcOvmUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TcOv2UsEe6bAesDIgR3sg" type="_6CfBcGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tc1oGUsEe6bAesDIgR3sg" name="CommunicationGraph" specification="_6PaDJmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tc1oWUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tc1omUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tc1o2UsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tc1pGUsEe6bAesDIgR3sg" type="_6CfBcGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tc1pWUsEe6bAesDIgR3sg" name="createHeader" specification="_6CfogGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tc1pmUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tc1p2UsEe6bAesDIgR3sg" name="createFooter" specification="_6CfohGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tc1qGUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tc1qWUsEe6bAesDIgR3sg" name="visualization" specification="_6CfoiGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tc1qmUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tc1q2UsEe6bAesDIgR3sg" name="createWarpFileContent" specification="_6CgPk2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tc1rGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6CfogGUsEe6bAesDIgR3sg" name="createHeader" method="_6Tc1pWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PaqM2UsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6CfohGUsEe6bAesDIgR3sg" name="createFooter" method="_6Tc1p2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PaqNGUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6CfoiGUsEe6bAesDIgR3sg" name="visualization" method="_6Tc1qWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PaqNWUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6CgPk2UsEe6bAesDIgR3sg" name="createWarpFileContent" method="_6Tc1q2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CgPlGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6PaDIGUsEe6bAesDIgR3sg" name="CommunicationGraph" method="_6TcOvGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PaDI2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PaDJGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6PaDIWUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PaDImUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PaDJWUsEe6bAesDIgR3sg" type="_6CfBcGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PaDJmUsEe6bAesDIgR3sg" name="CommunicationGraph" method="_6Tc1oGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PaqMGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PaqMWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6PaDJ2UsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PaDKGUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PaDKWUsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6PaqMmUsEe6bAesDIgR3sg" type="_6CfBcGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6Cg2oGUsEe6bAesDIgR3sg" name="ConnectivityPoset">
              <ownedComment xmi:id="_6Txlx2UsEe6bAesDIgR3sg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_6PbRRWUsEe6bAesDIgR3sg" general="_6DypAGUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tc1rWUsEe6bAesDIgR3sg" name="ConnectivityPoset" specification="_6PbRQGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tc1rmUsEe6bAesDIgR3sg" name="workload" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tc1r2UsEe6bAesDIgR3sg" type="_6Cg2oGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tc1sGUsEe6bAesDIgR3sg" name="findCoordinator" specification="_6RoQsGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tc1sWUsEe6bAesDIgR3sg" name="nodesInFlow" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tc1smUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6PbRQGUsEe6bAesDIgR3sg" name="ConnectivityPoset" visibility="package" method="_6Tc1rWUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PbRQmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PbRQ2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6PbRQWUsEe6bAesDIgR3sg" name="workload" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PbRRGUsEe6bAesDIgR3sg" type="_6Cg2oGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6RoQsGUsEe6bAesDIgR3sg" name="findCoordinator" visibility="protected" method="_6Tc1sGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6RoQsWUsEe6bAesDIgR3sg" name="nodesInFlow" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6RoQsmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6Cg2oWUsEe6bAesDIgR3sg" name="DeadlineComparator">
              <interfaceRealization xmi:id="_6Rpe0mUsEe6bAesDIgR3sg" client="_6Cg2oWUsEe6bAesDIgR3sg" supplier="_6PbRRmUsEe6bAesDIgR3sg" contract="_6PbRRmUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tc1s2UsEe6bAesDIgR3sg" name="compare" specification="_6RqF4mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tc1tGUsEe6bAesDIgR3sg" name="obj1" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tc1tWUsEe6bAesDIgR3sg" name="obj2" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tc1tmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6RqF4mUsEe6bAesDIgR3sg" name="compare" method="_6Tc1s2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6RqF42UsEe6bAesDIgR3sg" name="obj1" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6RqF5GUsEe6bAesDIgR3sg" name="obj2" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Rqs8GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6ChdsGUsEe6bAesDIgR3sg" name="Description">
              <ownedComment xmi:id="_6TxlyGUsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6Rqs9GUsEe6bAesDIgR3sg" general="_6PSHUGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6Sz8eGUsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6Sz8eWUsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tc1t2UsEe6bAesDIgR3sg" name="Description" specification="_6ChdsWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tc1uGUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tc1uWUsEe6bAesDIgR3sg" name="Description" specification="_6ChdtWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tc1umUsEe6bAesDIgR3sg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tc1u2UsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TdcsGUsEe6bAesDIgR3sg" name="toString" specification="_6ChdumUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TdcsWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6ChdsWUsEe6bAesDIgR3sg" name="Description" method="_6Tc1t2UsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6ChdsmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6Chds2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6ChdtGUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6ChdtWUsEe6bAesDIgR3sg" name="Description" method="_6Tc1uWUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6Chdt2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6ChduGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6ChdtmUsEe6bAesDIgR3sg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ChduWUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6ChdumUsEe6bAesDIgR3sg" name="toString" method="_6TdcsGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CiEwGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CiExGUsEe6bAesDIgR3sg" name="Edge">
              <generalization xmi:id="_6PdtgmUsEe6bAesDIgR3sg" general="_6DTg0GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S0jgGUsEe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S0jgWUsEe6bAesDIgR3sg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S0jgmUsEe6bAesDIgR3sg" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S0jg2UsEe6bAesDIgR3sg" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S0jhGUsEe6bAesDIgR3sg" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S0jhWUsEe6bAesDIgR3sg" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S0jhmUsEe6bAesDIgR3sg" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S1KkGUsEe6bAesDIgR3sg" name="state" type="_6Cir0GUsEe6bAesDIgR3sg" association="_6TxlyWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S1KkWUsEe6bAesDIgR3sg" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_6RrUAGUsEe6bAesDIgR3sg" client="_6CiExGUsEe6bAesDIgR3sg" supplier="_6RmbgWUsEe6bAesDIgR3sg" contract="_6RmbgWUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TdcsmUsEe6bAesDIgR3sg" name="Edge" specification="_6Cir1WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tdcs2UsEe6bAesDIgR3sg" type="_6CiExGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TdctGUsEe6bAesDIgR3sg" name="Edge" specification="_6Cir2WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TdctWUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TdctmUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tdct2UsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TdcuGUsEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TdcuWUsEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TdcumUsEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tdcu2UsEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TdcvGUsEe6bAesDIgR3sg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TdcvWUsEe6bAesDIgR3sg" type="_6CiExGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TdcvmUsEe6bAesDIgR3sg" name="compareTo" specification="_6PdGcGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tdcv2UsEe6bAesDIgR3sg" name="edge" type="_6CiExGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TdcwGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TdcwWUsEe6bAesDIgR3sg" name="toString" specification="_6CjS42UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TdcwmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tdcw2UsEe6bAesDIgR3sg" name="print" specification="_6CjS6GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TdcxGUsEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TdcxWUsEe6bAesDIgR3sg" name="print" specification="_6CjS7WUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6Cir1WUsEe6bAesDIgR3sg" name="Edge" visibility="package" method="_6TdcsmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6Cir1mUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6Cir12UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6Cir2GUsEe6bAesDIgR3sg" type="_6CiExGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Cir2WUsEe6bAesDIgR3sg" name="Edge" visibility="package" method="_6TdctGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6CjS4GUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6CjS4WUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6Cir2mUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cir22UsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cir3GUsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cir3WUsEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cir3mUsEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cir32UsEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cir4GUsEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cir4WUsEe6bAesDIgR3sg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CjS4mUsEe6bAesDIgR3sg" type="_6CiExGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6CjS42UsEe6bAesDIgR3sg" name="toString" method="_6TdcwWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CjS5GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CjS6GUsEe6bAesDIgR3sg" name="print" method="_6Tdcw2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CjS6WUsEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CjS7WUsEe6bAesDIgR3sg" name="print" method="_6TdcxWUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6PdGcGUsEe6bAesDIgR3sg" name="compareTo" method="_6TdcvmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PdGcWUsEe6bAesDIgR3sg" name="edge" type="_6CiExGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PdGcmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_6Cir0GUsEe6bAesDIgR3sg" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_6Cir0mUsEe6bAesDIgR3sg" name="RELEASED"/>
                <ownedLiteral xmi:id="_6Cir02UsEe6bAesDIgR3sg" name="EXECUTING"/>
                <ownedLiteral xmi:id="_6Cir1GUsEe6bAesDIgR3sg" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6Cj58mUsEe6bAesDIgR3sg" name="FileManager">
              <ownedComment xmi:id="_6Txly2UsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6S1KkmUsEe6bAesDIgR3sg" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S1Kk2UsEe6bAesDIgR3sg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TdcxmUsEe6bAesDIgR3sg" name="FileManager" specification="_6CkhAGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tdcx2UsEe6bAesDIgR3sg" type="_6Cj58mUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TdcyGUsEe6bAesDIgR3sg" name="FileManager" specification="_6CkhBGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TdcyWUsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TdcymUsEe6bAesDIgR3sg" type="_6Cj58mUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tdcy2UsEe6bAesDIgR3sg" name="getDocumentsDirectory" specification="_6CkhCWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TdczGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TdczWUsEe6bAesDIgR3sg" name="getCurrentDirectory" specification="_6CkhC2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TdczmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tdcz2UsEe6bAesDIgR3sg" name="createFile" specification="_6CkhDWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tdc0GUsEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tdc0WUsEe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tdc0mUsEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tdc02UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tdc1GUsEe6bAesDIgR3sg" name="createFile" specification="_6ClIEWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tdc1WUsEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tdc1mUsEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tdc12UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeDwGUsEe6bAesDIgR3sg" name="createDirectory" specification="_6ClIFWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeDwWUsEe6bAesDIgR3sg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TeDwmUsEe6bAesDIgR3sg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TeDw2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeDxGUsEe6bAesDIgR3sg" name="writeFile" specification="_6ClIGWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeDxWUsEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TeDxmUsEe6bAesDIgR3sg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeDx2UsEe6bAesDIgR3sg" name="readFile" specification="_6ClIHGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeDyGUsEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TeDyWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6CkhAGUsEe6bAesDIgR3sg" name="FileManager" method="_6TdcxmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6CkhAWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6CkhAmUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6TxlzGUsEe6bAesDIgR3sg">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_6CkhA2UsEe6bAesDIgR3sg" type="_6Cj58mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6CkhBGUsEe6bAesDIgR3sg" name="FileManager" method="_6TdcyGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6CkhBmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6CkhB2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6CkhBWUsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CkhCGUsEe6bAesDIgR3sg" type="_6Cj58mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6CkhCWUsEe6bAesDIgR3sg" name="getDocumentsDirectory" method="_6Tdcy2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CkhCmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CkhC2UsEe6bAesDIgR3sg" name="getCurrentDirectory" method="_6TdczWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CkhDGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CkhDWUsEe6bAesDIgR3sg" name="createFile" method="_6Tdcz2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TxlzWUsEe6bAesDIgR3sg">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_6CkhDmUsEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CkhD2UsEe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CkhEGUsEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ClIEGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6ClIEWUsEe6bAesDIgR3sg" name="createFile" method="_6Tdc1GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ClIEmUsEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ClIE2UsEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ClIFGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6ClIFWUsEe6bAesDIgR3sg" name="createDirectory" method="_6TeDwGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ClIFmUsEe6bAesDIgR3sg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ClIF2UsEe6bAesDIgR3sg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ClIGGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6ClIGWUsEe6bAesDIgR3sg" name="writeFile" method="_6TeDxGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ClIGmUsEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ClIG2UsEe6bAesDIgR3sg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6ClIHGUsEe6bAesDIgR3sg" name="readFile" method="_6TeDx2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ClIHWUsEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ClIHmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6ClvIGUsEe6bAesDIgR3sg" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_6TxlzmUsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6RsiIGUsEe6bAesDIgR3sg" general="_6PimAGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S1xoWUsEe6bAesDIgR3sg" name="workLoad" visibility="package" type="_6DqGIGUsEe6bAesDIgR3sg" association="_6T_BJ2UsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S1xo2UsEe6bAesDIgR3sg" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeDymUsEe6bAesDIgR3sg" name="WorkLoadListener" specification="_6PjNEWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeDy2UsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TeDzGUsEe6bAesDIgR3sg" type="_6ClvIGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeDzWUsEe6bAesDIgR3sg" name="buildNodesAndFlows" specification="_6PjNFmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeDzmUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeDz2UsEe6bAesDIgR3sg" name="testPrintStdOut" specification="_6ClvIWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeD0GUsEe6bAesDIgR3sg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeD0WUsEe6bAesDIgR3sg" name="enterWarpName" specification="_6Pj0ImUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeD0mUsEe6bAesDIgR3sg" name="ctx" type="_6Pj0IGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeD02UsEe6bAesDIgR3sg" name="enterFlowName" specification="_6PkbNGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeD1GUsEe6bAesDIgR3sg" name="ctx" type="_6PkbMmUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeD1WUsEe6bAesDIgR3sg" name="exitPriority" specification="_6PlCQWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeD1mUsEe6bAesDIgR3sg" name="ctx" type="_6PkbOWUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeD12UsEe6bAesDIgR3sg" name="exitPeriod" specification="_6PlpUGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeD2GUsEe6bAesDIgR3sg" name="ctx" type="_6PlCRmUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeD2WUsEe6bAesDIgR3sg" name="exitDeadline" specification="_6PlpV2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeD2mUsEe6bAesDIgR3sg" name="ctx" type="_6PlpVWUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeD22UsEe6bAesDIgR3sg" name="exitPhase" specification="_6PmQZGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeD3GUsEe6bAesDIgR3sg" name="ctx" type="_6PmQYmUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeD3WUsEe6bAesDIgR3sg" name="exitSrcNode" specification="_6Pm3dWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeD3mUsEe6bAesDIgR3sg" name="ctx" type="_6Pm3c2UsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeD32UsEe6bAesDIgR3sg" name="exitSnkNode" specification="_6PnegmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeD4GUsEe6bAesDIgR3sg" name="ctx" type="_6PnegGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TeD4WUsEe6bAesDIgR3sg" name="exitFlow" specification="_6PneiWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TeD4mUsEe6bAesDIgR3sg" name="ctx" type="_6Pneh2UsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6ClvIWUsEe6bAesDIgR3sg" name="testPrintStdOut" method="_6TeDz2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ClvImUsEe6bAesDIgR3sg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6PjNEWUsEe6bAesDIgR3sg" name="WorkLoadListener" visibility="private" method="_6TeDymUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PjNE2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PjNFGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6PjNEmUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PjNFWUsEe6bAesDIgR3sg" type="_6ClvIGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PjNFmUsEe6bAesDIgR3sg" name="buildNodesAndFlows" isStatic="true" method="_6TeDzWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PjNF2UsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Pj0ImUsEe6bAesDIgR3sg" name="enterWarpName" method="_6TeD0WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Pj0I2UsEe6bAesDIgR3sg" name="ctx" type="_6Pj0IGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PkbNGUsEe6bAesDIgR3sg" name="enterFlowName" method="_6TeD02UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PkbNWUsEe6bAesDIgR3sg" name="ctx" type="_6PkbMmUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PlCQWUsEe6bAesDIgR3sg" name="exitPriority" method="_6TeD1WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PlCQmUsEe6bAesDIgR3sg" name="ctx" type="_6PkbOWUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PlpUGUsEe6bAesDIgR3sg" name="exitPeriod" method="_6TeD12UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PlpUWUsEe6bAesDIgR3sg" name="ctx" type="_6PlCRmUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PlpV2UsEe6bAesDIgR3sg" name="exitDeadline" method="_6TeD2WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PlpWGUsEe6bAesDIgR3sg" name="ctx" type="_6PlpVWUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PmQZGUsEe6bAesDIgR3sg" name="exitPhase" method="_6TeD22UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PmQZWUsEe6bAesDIgR3sg" name="ctx" type="_6PmQYmUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Pm3dWUsEe6bAesDIgR3sg" name="exitSrcNode" method="_6TeD3WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Pm3dmUsEe6bAesDIgR3sg" name="ctx" type="_6Pm3c2UsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PnegmUsEe6bAesDIgR3sg" name="exitSnkNode" method="_6TeD32UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Pneg2UsEe6bAesDIgR3sg" name="ctx" type="_6PnegGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PneiWUsEe6bAesDIgR3sg" name="exitFlow" method="_6TeD4WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PoFkGUsEe6bAesDIgR3sg" name="ctx" type="_6Pneh2UsEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CmWMGUsEe6bAesDIgR3sg" name="FlowMap">
              <ownedComment xmi:id="_6Txlz2UsEe6bAesDIgR3sg">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6PoFlGUsEe6bAesDIgR3sg" general="_6CXFoGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S2YsWUsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S2YsmUsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CmWMWUsEe6bAesDIgR3sg" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_6Txl0GUsEe6bAesDIgR3sg">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6PosoWUsEe6bAesDIgR3sg" general="_6CXFoGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S2Ys2UsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S2YtGUsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6Cm9QGUsEe6bAesDIgR3sg" name="GraphViz">
              <ownedComment xmi:id="_6Txl0WUsEe6bAesDIgR3sg">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6Pqh0WUsEe6bAesDIgR3sg" general="_6DKW4GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S2YtWUsEe6bAesDIgR3sg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S2YtmUsEe6bAesDIgR3sg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S2Yt2UsEe6bAesDIgR3sg" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S2YuGUsEe6bAesDIgR3sg" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S2_wGUsEe6bAesDIgR3sg" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S2_wmUsEe6bAesDIgR3sg" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S2_xGUsEe6bAesDIgR3sg" name="wfm" visibility="package" type="_6Cj58mUsEe6bAesDIgR3sg" association="_6T_BKmUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S2_xmUsEe6bAesDIgR3sg" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S3m0WUsEe6bAesDIgR3sg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S3m02UsEe6bAesDIgR3sg" name="gv" visibility="package" type="_6Cm9QGUsEe6bAesDIgR3sg" association="_6T_oMGUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq0GUsEe6bAesDIgR3sg" name="GraphViz" specification="_6Pp6wGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Teq0WUsEe6bAesDIgR3sg" name="wfm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Teq0mUsEe6bAesDIgR3sg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Teq02UsEe6bAesDIgR3sg" type="_6Cm9QGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq1GUsEe6bAesDIgR3sg" name="GraphViz" specification="_6Pp6xmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Teq1WUsEe6bAesDIgR3sg" name="wfm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Teq1mUsEe6bAesDIgR3sg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Teq12UsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Teq2GUsEe6bAesDIgR3sg" type="_6Cm9QGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq2WUsEe6bAesDIgR3sg" name="visualization" specification="_6Cm9QWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Teq2mUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq22UsEe6bAesDIgR3sg" name="initializeGraphVizContent" specification="_6CnkUmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Teq3GUsEe6bAesDIgR3sg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq3WUsEe6bAesDIgR3sg" name="finalizeGraphVizContent" specification="_6CoLYWUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq3mUsEe6bAesDIgR3sg" name="getGraphVizContent" specification="_6CoLYmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Teq32UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq4GUsEe6bAesDIgR3sg" name="createGraphVizContent" specification="_6CoLZGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Teq4WUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq4mUsEe6bAesDIgR3sg" name="addFlowToGraphViz" specification="_6CoLZmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Teq42UsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq5GUsEe6bAesDIgR3sg" name="addSrcNodeToGraphViz" specification="_6CoLaGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Teq5WUsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq5mUsEe6bAesDIgR3sg" name="addSnkNodeToGraphViz" specification="_6CoLamUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Teq52UsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq6GUsEe6bAesDIgR3sg" name="finalizeCurrentFlowInGraphViz" specification="_6CoLbGUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq6WUsEe6bAesDIgR3sg" name="addNodeName" specification="_6CoLbWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Teq6mUsEe6bAesDIgR3sg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Teq62UsEe6bAesDIgR3sg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6Cm9QWUsEe6bAesDIgR3sg" name="visualization" method="_6Teq2WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Pqh0GUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6CnkUmUsEe6bAesDIgR3sg" name="initializeGraphVizContent" method="_6Teq22UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CoLYGUsEe6bAesDIgR3sg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CoLYWUsEe6bAesDIgR3sg" name="finalizeGraphVizContent" method="_6Teq3WUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6CoLYmUsEe6bAesDIgR3sg" name="getGraphVizContent" method="_6Teq3mUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TyM0GUsEe6bAesDIgR3sg">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_6CoLY2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CoLZGUsEe6bAesDIgR3sg" name="createGraphVizContent" method="_6Teq4GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CoLZWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CoLZmUsEe6bAesDIgR3sg" name="addFlowToGraphViz" method="_6Teq4mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CoLZ2UsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CoLaGUsEe6bAesDIgR3sg" name="addSrcNodeToGraphViz" method="_6Teq5GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CoLaWUsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CoLamUsEe6bAesDIgR3sg" name="addSnkNodeToGraphViz" method="_6Teq5mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CoLa2UsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CoLbGUsEe6bAesDIgR3sg" name="finalizeCurrentFlowInGraphViz" method="_6Teq6GUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6CoLbWUsEe6bAesDIgR3sg" name="addNodeName" visibility="private" method="_6Teq6WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CoLbmUsEe6bAesDIgR3sg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CoLb2UsEe6bAesDIgR3sg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Pp6wGUsEe6bAesDIgR3sg" name="GraphViz" visibility="package" method="_6Teq0GUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6Pp6w2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6Pp6xGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6Pp6wWUsEe6bAesDIgR3sg" name="wfm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Pp6wmUsEe6bAesDIgR3sg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Pp6xWUsEe6bAesDIgR3sg" type="_6Cm9QGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Pp6xmUsEe6bAesDIgR3sg" name="GraphViz" visibility="package" method="_6Teq1GUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6Pp6ymUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6Pp6y2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6Pp6x2UsEe6bAesDIgR3sg" name="wfm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Pp6yGUsEe6bAesDIgR3sg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Pp6yWUsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Pp6zGUsEe6bAesDIgR3sg" type="_6Cm9QGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CoycGUsEe6bAesDIgR3sg" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_6TyM0WUsEe6bAesDIgR3sg">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_6RtJMGUsEe6bAesDIgR3sg" general="_6PimAGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S4N4GUsEe6bAesDIgR3sg" name="gv" visibility="package" type="_6Cm9QGUsEe6bAesDIgR3sg" association="_6T_oM2UsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq7GUsEe6bAesDIgR3sg" name="GraphVizListener" specification="_6PrI4GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Teq7WUsEe6bAesDIgR3sg" name="gv" type="_6Cm9QGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Teq7mUsEe6bAesDIgR3sg" type="_6CoycGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Teq72UsEe6bAesDIgR3sg" name="buildGraphViz" specification="_6PrI5WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Teq8GUsEe6bAesDIgR3sg" name="gv" type="_6Cm9QGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfR4GUsEe6bAesDIgR3sg" name="enterWarpName" specification="_6PrI52UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfR4WUsEe6bAesDIgR3sg" name="ctx" type="_6Pj0IGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfR4mUsEe6bAesDIgR3sg" name="exitWarp" specification="_6Prv82UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfR42UsEe6bAesDIgR3sg" name="ctx" type="_6Prv8WUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfR5GUsEe6bAesDIgR3sg" name="enterFlowName" specification="_6Prv-GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfR5WUsEe6bAesDIgR3sg" name="ctx" type="_6PkbMmUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfR5mUsEe6bAesDIgR3sg" name="exitSrcNode" specification="_6PsXA2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfR52UsEe6bAesDIgR3sg" name="ctx" type="_6Pm3c2UsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfR6GUsEe6bAesDIgR3sg" name="exitSnkNode" specification="_6PsXCGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfR6WUsEe6bAesDIgR3sg" name="ctx" type="_6PnegGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfR6mUsEe6bAesDIgR3sg" name="exitFlow" specification="_6Ps-EmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfR62UsEe6bAesDIgR3sg" name="ctx" type="_6Pneh2UsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6PrI4GUsEe6bAesDIgR3sg" name="GraphVizListener" visibility="private" method="_6Teq7GUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PrI4mUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PrI42UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6PrI4WUsEe6bAesDIgR3sg" name="gv" type="_6Cm9QGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PrI5GUsEe6bAesDIgR3sg" type="_6CoycGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PrI5WUsEe6bAesDIgR3sg" name="buildGraphViz" isStatic="true" method="_6Teq72UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PrI5mUsEe6bAesDIgR3sg" name="gv" type="_6Cm9QGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PrI52UsEe6bAesDIgR3sg" name="enterWarpName" method="_6TfR4GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PrI6GUsEe6bAesDIgR3sg" name="ctx" type="_6Pj0IGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Prv82UsEe6bAesDIgR3sg" name="exitWarp" method="_6TfR4mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Prv9GUsEe6bAesDIgR3sg" name="ctx" type="_6Prv8WUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Prv-GUsEe6bAesDIgR3sg" name="enterFlowName" method="_6TfR5GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Prv-WUsEe6bAesDIgR3sg" name="ctx" type="_6PkbMmUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PsXA2UsEe6bAesDIgR3sg" name="exitSrcNode" method="_6TfR5mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PsXBGUsEe6bAesDIgR3sg" name="ctx" type="_6Pm3c2UsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PsXCGUsEe6bAesDIgR3sg" name="exitSnkNode" method="_6TfR6GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6PsXCWUsEe6bAesDIgR3sg" name="ctx" type="_6PnegGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Ps-EmUsEe6bAesDIgR3sg" name="exitFlow" method="_6TfR6mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Ps-E2UsEe6bAesDIgR3sg" name="ctx" type="_6Pneh2UsEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CpZgGUsEe6bAesDIgR3sg" name="GuiVisualization">
              <ownedComment xmi:id="_6TyM0mUsEe6bAesDIgR3sg">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6S4N4mUsEe6bAesDIgR3sg" name="frame" visibility="package" type="_6PtlImUsEe6bAesDIgR3sg" association="_6T_oNmUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S4N5GUsEe6bAesDIgR3sg" name="jtable" visibility="package" type="_6PuMMmUsEe6bAesDIgR3sg" association="_6T_oOWUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfR7GUsEe6bAesDIgR3sg" name="GuiVisualization" specification="_6CqAkGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfR7WUsEe6bAesDIgR3sg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TfR7mUsEe6bAesDIgR3sg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TfR72UsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TfR8GUsEe6bAesDIgR3sg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TfR8WUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TfR8mUsEe6bAesDIgR3sg" type="_6CpZgGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfR82UsEe6bAesDIgR3sg" name="setVisible" specification="_6CqAmmUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfR9GUsEe6bAesDIgR3sg" name="resizeColumnWidth" specification="_6RtJMWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfR9WUsEe6bAesDIgR3sg" name="table" type="_6PuMMmUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6CqAkGUsEe6bAesDIgR3sg" name="GuiVisualization" method="_6TfR7GUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6CqAlGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6CqAlWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6TyM02UsEe6bAesDIgR3sg">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_6CqAkWUsEe6bAesDIgR3sg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CqAkmUsEe6bAesDIgR3sg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6CqAl2UsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CqAk2UsEe6bAesDIgR3sg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6CqAmGUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CqAlmUsEe6bAesDIgR3sg" type="_6CpZgGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6CqAmmUsEe6bAesDIgR3sg" name="setVisible" method="_6TfR82UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TyM1GUsEe6bAesDIgR3sg">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_6RtJMWUsEe6bAesDIgR3sg" name="resizeColumnWidth" visibility="private" method="_6TfR9GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6RtJMmUsEe6bAesDIgR3sg" name="table" type="_6PuMMmUsEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CqnoGUsEe6bAesDIgR3sg" name="InputGraphFile">
              <ownedComment xmi:id="_6TyM1WUsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6S408WUsEe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S408mUsEe6bAesDIgR3sg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S4082UsEe6bAesDIgR3sg" name="wfm" visibility="private" type="_6Cj58mUsEe6bAesDIgR3sg" association="_6T_oPGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S409WUsEe6bAesDIgR3sg" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S409mUsEe6bAesDIgR3sg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S5cAWUsEe6bAesDIgR3sg" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S5cAmUsEe6bAesDIgR3sg" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfR9mUsEe6bAesDIgR3sg" name="InputGraphFile" specification="_6PvaU2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfR92UsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TfR-GUsEe6bAesDIgR3sg" type="_6CqnoGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfR-WUsEe6bAesDIgR3sg" name="InputGraphFile" specification="_6PwBYGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfR-mUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TfR-2UsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TfR_GUsEe6bAesDIgR3sg" type="_6CqnoGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfR_WUsEe6bAesDIgR3sg" name="setGraphFileName" specification="_6CqnoWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfR_mUsEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfR_2UsEe6bAesDIgR3sg" name="verifyGraphFileName" specification="_6Cqno2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfSAGUsEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfSAWUsEe6bAesDIgR3sg" name="readGraphFile" specification="_6CrOsGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfSAmUsEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TfSA2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TfSBGUsEe6bAesDIgR3sg" name="getInputGraphFileName" specification="_6CrOs2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TfSBWUsEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TfSBmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tf48GUsEe6bAesDIgR3sg" name="readGraphFileContents" specification="_6CrOtmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tf48WUsEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tf48mUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tf482UsEe6bAesDIgR3sg" name="printVerboseMessage" specification="_6CrOuWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tf49GUsEe6bAesDIgR3sg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tf49WUsEe6bAesDIgR3sg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tf49mUsEe6bAesDIgR3sg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6CqnoWUsEe6bAesDIgR3sg" name="setGraphFileName" visibility="private" method="_6TfR_WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CqnomUsEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Cqno2UsEe6bAesDIgR3sg" name="verifyGraphFileName" visibility="private" method="_6TfR_2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CqnpGUsEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CrOsGUsEe6bAesDIgR3sg" name="readGraphFile" method="_6TfSAWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CrOsWUsEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CrOsmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CrOs2UsEe6bAesDIgR3sg" name="getInputGraphFileName" visibility="private" method="_6TfSBGUsEe6bAesDIgR3sg" raisedException="_6RtwQGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CrOtGUsEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CrOtWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CrOtmUsEe6bAesDIgR3sg" name="readGraphFileContents" visibility="private" method="_6Tf48GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CrOt2UsEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CrOuGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CrOuWUsEe6bAesDIgR3sg" name="printVerboseMessage" visibility="private" method="_6Tf482UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CrOumUsEe6bAesDIgR3sg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CrOu2UsEe6bAesDIgR3sg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CrOvGUsEe6bAesDIgR3sg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6PvaU2UsEe6bAesDIgR3sg" name="InputGraphFile" method="_6TfR9mUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PvaVWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PvaVmUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6PvaVGUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PvaV2UsEe6bAesDIgR3sg" type="_6CqnoGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PwBYGUsEe6bAesDIgR3sg" name="InputGraphFile" method="_6TfR-WUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PwBY2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PwBZGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6PwBYWUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PwBYmUsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6PwBZWUsEe6bAesDIgR3sg" type="_6CqnoGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6Cr1wGUsEe6bAesDIgR3sg" name="InstructionTimeSlot">
              <generalization xmi:id="_6PwBZmUsEe6bAesDIgR3sg" general="_6C6fRGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S5cBGUsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S5cBWUsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tf492UsEe6bAesDIgR3sg" name="InstructionTimeSlot" specification="_6Cr1wWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tf4-GUsEe6bAesDIgR3sg" type="_6Cr1wGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tf4-WUsEe6bAesDIgR3sg" name="InstructionTimeSlot" specification="_6Cr1xWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tf4-mUsEe6bAesDIgR3sg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tf4-2UsEe6bAesDIgR3sg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tf4_GUsEe6bAesDIgR3sg" type="_6Cr1wGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tf4_WUsEe6bAesDIgR3sg" name="InstructionTimeSlot" specification="_6Csc0GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tf4_mUsEe6bAesDIgR3sg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6Tf4_2UsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tf5AGUsEe6bAesDIgR3sg" type="_6Cr1wGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6Cr1wWUsEe6bAesDIgR3sg" name="InstructionTimeSlot" method="_6Tf492UsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6Cr1wmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6Cr1w2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6Cr1xGUsEe6bAesDIgR3sg" type="_6Cr1wGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Cr1xWUsEe6bAesDIgR3sg" name="InstructionTimeSlot" visibility="package" method="_6Tf4-WUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6Cr1yGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6Cr1yWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6Cr1xmUsEe6bAesDIgR3sg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cr1x2UsEe6bAesDIgR3sg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cr1ymUsEe6bAesDIgR3sg" type="_6Cr1wGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Csc0GUsEe6bAesDIgR3sg" name="InstructionTimeSlot" visibility="package" method="_6Tf4_WUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6Csc0mUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6Csc02UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6Csc0WUsEe6bAesDIgR3sg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6Csc1WUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Csc1GUsEe6bAesDIgR3sg" type="_6Cr1wGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6Csc1mUsEe6bAesDIgR3sg" name="LatencyAnalysis">
              <ownedComment xmi:id="__moKQH9pEe6F645s24XfkQ">
                <body>@author sgoddard&#xD;
@author srgoddard (for java doc comments/refactor buildLatencyReport())&#xD;
@version 1.6</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6S6DEGUsEe6bAesDIgR3sg" name="DEADLINE_MISS" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S6DEmUsEe6bAesDIgR3sg" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S7RMGUsEe6bAesDIgR3sg" name="FLOW_SEPARATOR" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S7RMWUsEe6bAesDIgR3sg" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S8fUGUsEe6bAesDIgR3sg" name="latencyReport" visibility="private" type="_6ChdsGUsEe6bAesDIgR3sg" association="_6UA2UWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S8fUmUsEe6bAesDIgR3sg" name="program" visibility="private" type="_6DaOgGUsEe6bAesDIgR3sg" association="_6UA2VGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S9GYWUsEe6bAesDIgR3sg" name="workload" visibility="private" type="_6DqGIGUsEe6bAesDIgR3sg" association="_6UA2V2UsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S9GY2UsEe6bAesDIgR3sg" name="programTable" visibility="private" type="_6C0_sGUsEe6bAesDIgR3sg" association="_6UBdYWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S9GZWUsEe6bAesDIgR3sg" name="nodeIndex" visibility="private" type="_6PKLgGUsEe6bAesDIgR3sg" association="_6UBdZGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_DnxuIHLKEe6Y3e8f6FsdUw" name="time" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DnzjUHLKEe6Y3e8f6FsdUw" name="instance" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dn0KYXLKEe6Y3e8f6FsdUw" name="numTxRequired" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dn0xcHLKEe6Y3e8f6FsdUw" name="numTxProcessed" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dn0xcnLKEe6Y3e8f6FsdUw" name="dsl" visibility="private" type="_6DPPYGUsEe6bAesDIgR3sg" association="_Dn5C4HLKEe6Y3e8f6FsdUw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tf5AWUsEe6bAesDIgR3sg" name="LatencyAnalysis" specification="_6PxPgGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tf5AmUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tf5A2UsEe6bAesDIgR3sg" type="_6Csc1mUsEe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this(warp.toProgram());&#xD;
 //this.program = warp.toProgram();&#xD;
 //this.workload = warp.toWorkload();&#xD;
 //this.programTable = program.getSchedule();&#xD;
 //this.nodeIndex = program.getNodeMapIndex();&#xD;
 //buildLatencyReport();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tf5BGUsEe6bAesDIgR3sg" name="LatencyAnalysis" specification="_6PxPhWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tf5BWUsEe6bAesDIgR3sg" name="program" type="_6DaOgGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tf5BmUsEe6bAesDIgR3sg" type="_6Csc1mUsEe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
 dsl = new WarpDSL();&#xD;
 buildLatencyReport();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tf5B2UsEe6bAesDIgR3sg" name="latencyReport" specification="_6Csc12UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tf5CGUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return latencyReport;&#xD;
	  &#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tf5CWUsEe6bAesDIgR3sg" name="numMatchingTx" specification="_6CtD4GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tf5CmUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tf5C2UsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tf5DGUsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tf5DWUsEe6bAesDIgR3sg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tf5DmUsEe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7TNawGUyEe6bAesDIgR3sg" name="getLatencyTable" specification="_i6zh8GUxEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_7TNawWUyEe6bAesDIgR3sg" type="_6C0_sGUsEe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO implement this operation&#xD;
	return programTable;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dn1_kHLKEe6Y3e8f6FsdUw" name="buildLatencyReport" specification="_DnmH8HLKEe6Y3e8f6FsdUw">
                <language>java</language>
                <body>/*&#xD;
  * &#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
	latencyReport = new Description();  &#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {	&#xD;
 	helperBuildLatency(flowName);			&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dn1_kXLKEe6Y3e8f6FsdUw" name="helperBuildLatency" specification="_DnrAcHLKEe6Y3e8f6FsdUw">
                <ownedParameter xmi:id="_Dn1_knLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>time = 0;&#xD;
  	/* get snk and src from helper function getSnk() and getSrc()*/&#xD;
 String snk = getSnk(flowName);&#xD;
 String src = getSrc(flowName);&#xD;
 /* get (column) indexes into programTable of these nodes */&#xD;
 var snkIndex = nodeIndex.get(snk);   &#xD;
 var srcIndex = nodeIndex.get(src);	&#xD;
 /* get the number of transmission required for the last link in the flow */&#xD;
 getNumTxRequired(flowName);&#xD;
 numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
 instance = 0;&#xD;
 while (time &lt; workload.getHyperPeriod()) {&#xD;
 	calculateReleaseTime(src, snk, srcIndex, snkIndex, flowName);&#xD;
    }&#xD;
    String flowSeparator = FLOW_SEPARATOR;&#xD;
    latencyReport.add(flowSeparator);				&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dn2moHLKEe6Y3e8f6FsdUw" name="getSnk" specification="_Dns1oHLKEe6Y3e8f6FsdUw">
                <ownedParameter xmi:id="_Dn2moXLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn2monLKEe6Y3e8f6FsdUw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   return nodes[flowSnkIndex];&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dn2mo3LKEe6Y3e8f6FsdUw" name="getSrc" specification="_Dns1o3LKEe6Y3e8f6FsdUw">
                <ownedParameter xmi:id="_Dn2mpHLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn2mpXLKEe6Y3e8f6FsdUw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   return nodes[flowSnkIndex - 1];&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dn2mpnLKEe6Y3e8f6FsdUw" name="getNumTxRequired" specification="_DntcsXLKEe6Y3e8f6FsdUw">
                <ownedParameter xmi:id="_Dn2mp3LKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
	  numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dn2mqHLKEe6Y3e8f6FsdUw" name="calculateReleaseTime" specification="_DnuDwHLKEe6Y3e8f6FsdUw">
                <ownedParameter xmi:id="_Dn2mqXLKEe6Y3e8f6FsdUw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn2mqnLKEe6Y3e8f6FsdUw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn2mq3LKEe6Y3e8f6FsdUw" name="srcIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn2mrHLKEe6Y3e8f6FsdUw" name="snkIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn2mrXLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
	  var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
	  var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
	  time = releaseTime;&#xD;
	  numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
	  while (time &lt; nextReleaseTime) {&#xD;
		  calculateNumTxProcessed(srcIndex, snkIndex, flowName, src, snk, deadline, releaseTime, &#xD;
				  nextReleaseTime);&#xD;
		  /* get instruction strings at these to locations */&#xD;
	  }&#xD;
	  if (numTxProcessed &lt; numTxRequired) {&#xD;
		  /*&#xD;
		   * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
		   * printed with the schedulers built&#xD;
		   */&#xD;
		  recordLatencyMessage(flowName);&#xD;
	  }&#xD;
	  instance++;	&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dn2mrnLKEe6Y3e8f6FsdUw" name="calculateNumTxProcessed" specification="_Dnuq0HLKEe6Y3e8f6FsdUw">
                <ownedParameter xmi:id="_Dn2mr3LKEe6Y3e8f6FsdUw" name="srcIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn2msHLKEe6Y3e8f6FsdUw" name="snkIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn2msXLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn2msnLKEe6Y3e8f6FsdUw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn2ms3LKEe6Y3e8f6FsdUw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn2mtHLKEe6Y3e8f6FsdUw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn2mtXLKEe6Y3e8f6FsdUw" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn2mtnLKEe6Y3e8f6FsdUw" name="nextReleaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>String instr1 = programTable.get(time, srcIndex);&#xD;
	  String instr2 = programTable.get(time, snkIndex);&#xD;
	  numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
	  numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
	  if (numTxProcessed == numTxRequired) {&#xD;
		  /*&#xD;
		   * all required Tx attempts have been made compute and record latency&#xD;
		   */&#xD;
		  var latency = time - releaseTime + 1;&#xD;
		  // record and report latency message via constructLatencyMessage()&#xD;
		  constructLatencyMessage(flowName, deadline, latency);&#xD;
		  time = nextReleaseTime;&#xD;
		} else {&#xD;
			time++;&#xD;
		}&#xD;
	  &#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dn3NsHLKEe6Y3e8f6FsdUw" name="constructLatencyMessage" specification="_DnvR4HLKEe6Y3e8f6FsdUw">
                <ownedParameter xmi:id="_Dn3NsXLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn3NsnLKEe6Y3e8f6FsdUw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dn3Ns3LKEe6Y3e8f6FsdUw" name="latency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>String latencyMsg = &#xD;
 		String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
 if (latency > deadline) {&#xD;
 /* deadline missed, so color the text red */&#xD;
 	 latencyMsg += DEADLINE_MISS;&#xD;
 }&#xD;
  	latencyMsg += &quot;\n&quot;;&#xD;
  	latencyReport.add(latencyMsg);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dn3NtHLKEe6Y3e8f6FsdUw" name="recordLatencyMessage" specification="_DnvR5HLKEe6Y3e8f6FsdUw">
                <ownedParameter xmi:id="_Dn3NtXLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String latencyMsg =&#xD;
				String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
						flowName, instance);&#xD;
		latencyReport.add(latencyMsg);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6Csc12UsEe6bAesDIgR3sg" name="latencyReport" method="_6Tf5B2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="__moKQ39pEe6F645s24XfkQ">
                  <body>latencyReport() now returns latencyReport instead of building the report&#xD;
   * @return latencyReport</body>
                </ownedComment>
                <ownedParameter xmi:id="_6PxPimUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6CtD4GUsEe6bAesDIgR3sg" name="numMatchingTx" method="_6Tf5CWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="__moxV39pEe6F645s24XfkQ">
                  <body>@return numTX counts the numbers of Tx attempts made successfully&#xD;
 	* @param dsl is used as a mediator to establish new WarpDSL()&#xD;
 	* @param instructionParametersArray is used to obtain instruction parameters from the dsl.getInstructionParameters(instr)&#xD;
 	* This method is used to obtain the number of successful Tx attempts if flowName equals flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_6CtD4WUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CtD4mUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CtD42UsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CtD5GUsEe6bAesDIgR3sg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CtD5WUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6PxPgGUsEe6bAesDIgR3sg" name="LatencyAnalysis" visibility="package" method="_6Tf5AWUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PxPgmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PxPg2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="__moKQX9pEe6F645s24XfkQ">
                  <body>This object holds the toWorkload()/getSchedule()/NodeMapIndex()/and toProgram()&#xD;
   * Has since been refactored with the LatencyAnalysis(Program program) constructor.</body>
                </ownedComment>
                <ownedParameter xmi:id="_6PxPgWUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PxPhGUsEe6bAesDIgR3sg" type="_6Csc1mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6PxPhWUsEe6bAesDIgR3sg" name="LatencyAnalysis" visibility="package" method="_6Tf5BGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PxPh2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6PxPiGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="__moKQn9pEe6F645s24XfkQ">
                  <body>This contains the program side of the nodes. Including toWorkload()/getSchedule()/getNodeMapIndex()&#xD;
   * We refactored the latencyAnalysis(WarpInterface Warp) with LatencyAnalysis(Program program). This&#xD;
   * removes code duplication making it easier to follow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_6PxPhmUsEe6bAesDIgR3sg" name="program" type="_6DaOgGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PxPiWUsEe6bAesDIgR3sg" type="_6Csc1mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_i6zh8GUxEe6bAesDIgR3sg" name="getLatencyTable" method="_7TNawGUyEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_i6zh8WUxEe6bAesDIgR3sg" type="_6C0_sGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DnmH8HLKEe6Y3e8f6FsdUw" name="buildLatencyReport" method="_Dn1_kHLKEe6Y3e8f6FsdUw"/>
              <ownedOperation xmi:id="_DnrAcHLKEe6Y3e8f6FsdUw" name="helperBuildLatency" method="_Dn1_kXLKEe6Y3e8f6FsdUw">
                <ownedComment xmi:id="__moKRH9pEe6F645s24XfkQ">
                  <body>Helps build latency report by dividing up the loops&#xD;
   * @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_DnrAcXLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dns1oHLKEe6Y3e8f6FsdUw" name="getSnk" method="_Dn2moHLKEe6Y3e8f6FsdUw">
                <ownedComment xmi:id="__moxUH9pEe6F645s24XfkQ">
                  <body>Gets snk of last link in the flow, which is also the Flow snk node &#xD;
   * @param flowName&#xD;
   * @return nodes[flowSnkIndex]</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dns1oXLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dns1onLKEe6Y3e8f6FsdUw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dns1o3LKEe6Y3e8f6FsdUw" name="getSrc" method="_Dn2mo3LKEe6Y3e8f6FsdUw">
                <ownedComment xmi:id="__moxUX9pEe6F645s24XfkQ">
                  <body>Gets the src of last link in the flow &#xD;
   * @param flowName&#xD;
   * @return nodes[flowSnkIndex - 1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dns1pHLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DntcsHLKEe6Y3e8f6FsdUw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DntcsXLKEe6Y3e8f6FsdUw" name="getNumTxRequired" method="_Dn2mpnLKEe6Y3e8f6FsdUw">
                <ownedComment xmi:id="__moxUn9pEe6F645s24XfkQ">
                  <body>&#xD;
   * @param flowName&#xD;
   * @return Integer from array #of Tx Attempts Per Link</body>
                </ownedComment>
                <ownedParameter xmi:id="_DntcsnLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DnuDwHLKEe6Y3e8f6FsdUw" name="calculateReleaseTime" method="_Dn2mqHLKEe6Y3e8f6FsdUw">
                <ownedComment xmi:id="__moxU39pEe6F645s24XfkQ">
                  <body>get next release time and absolute deadline of the flow&#xD;
   * @param numTxRequired&#xD;
   * @param src&#xD;
   * @param snk&#xD;
   * @param srcIndex&#xD;
   * @param snkIndex&#xD;
   * @param numTxProcessed&#xD;
   * @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_DnuDwXLKEe6Y3e8f6FsdUw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DnuDwnLKEe6Y3e8f6FsdUw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DnuDw3LKEe6Y3e8f6FsdUw" name="srcIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DnuDxHLKEe6Y3e8f6FsdUw" name="snkIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DnuDxXLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dnuq0HLKEe6Y3e8f6FsdUw" name="calculateNumTxProcessed" method="_Dn2mrnLKEe6Y3e8f6FsdUw">
                <ownedComment xmi:id="__moxVH9pEe6F645s24XfkQ">
                  <body>Calculates numTxProcessed&#xD;
   * @param srcIndex&#xD;
   * @param snkIndex&#xD;
   * @param flowName&#xD;
   * @param src&#xD;
   * @param snk&#xD;
   * @param deadline&#xD;
   * @param releaseTime&#xD;
   * @param nextReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dnuq0XLKEe6Y3e8f6FsdUw" name="srcIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dnuq0nLKEe6Y3e8f6FsdUw" name="snkIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dnuq03LKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dnuq1HLKEe6Y3e8f6FsdUw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dnuq1XLKEe6Y3e8f6FsdUw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dnuq1nLKEe6Y3e8f6FsdUw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dnuq13LKEe6Y3e8f6FsdUw" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dnuq2HLKEe6Y3e8f6FsdUw" name="nextReleaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DnvR4HLKEe6Y3e8f6FsdUw" name="constructLatencyMessage" method="_Dn3NsHLKEe6Y3e8f6FsdUw">
                <ownedComment xmi:id="__moxVX9pEe6F645s24XfkQ">
                  <body>This method is to combine flowName, instance, and latency in a message.&#xD;
   * As well as include a message if a deadline is missed.&#xD;
   * @param flowName&#xD;
   * @param instance&#xD;
   * @param deadline&#xD;
   * @param latency&#xD;
   * @return latencyMsg</body>
                </ownedComment>
                <ownedParameter xmi:id="_DnvR4XLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DnvR4nLKEe6Y3e8f6FsdUw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DnvR43LKEe6Y3e8f6FsdUw" name="latency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DnvR5HLKEe6Y3e8f6FsdUw" name="recordLatencyMessage" method="_Dn3NtHLKEe6Y3e8f6FsdUw">
                <ownedComment xmi:id="__moxVn9pEe6F645s24XfkQ">
                  <body>Records unknown latency message for latency Report&#xD;
   * @param flowName&#xD;
   * @param instance</body>
                </ownedComment>
                <ownedParameter xmi:id="_DnvR5XLKEe6Y3e8f6FsdUw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CtD5mUsEe6bAesDIgR3sg" name="LatencyVisualization">
              <ownedComment xmi:id="_6TyM2mUsEe6bAesDIgR3sg">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2023 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.6&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6PydpWUsEe6bAesDIgR3sg" general="_6DKW4GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S9tcmUsEe6bAesDIgR3sg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S9tc2UsEe6bAesDIgR3sg" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S9tdGUsEe6bAesDIgR3sg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S9tdWUsEe6bAesDIgR3sg" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S9tdmUsEe6bAesDIgR3sg" name="warp" visibility="private" type="_6C7taWUsEe6bAesDIgR3sg" association="_6UBdZ2UsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S9teGUsEe6bAesDIgR3sg" name="la" visibility="private" type="_6Csc1mUsEe6bAesDIgR3sg" association="_6UBdamUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TggAGUsEe6bAesDIgR3sg" name="LatencyVisualization" specification="_6PydoGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TggAWUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TggAmUsEe6bAesDIgR3sg" type="_6CtD5mUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6PydoGUsEe6bAesDIgR3sg" name="LatencyVisualization" visibility="package" method="_6TggAGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6PydomUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6Pydo2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6PydoWUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6PydpGUsEe6bAesDIgR3sg" type="_6CtD5mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6Ctq8GUsEe6bAesDIgR3sg" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_6RuXUGUsEe6bAesDIgR3sg" client="_6Ctq8GUsEe6bAesDIgR3sg" supplier="_6PbRRmUsEe6bAesDIgR3sg" contract="_6PbRRmUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TggA2UsEe6bAesDIgR3sg" name="compare" specification="_6RwMgGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TggBGUsEe6bAesDIgR3sg" name="obj1" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TggBWUsEe6bAesDIgR3sg" name="obj2" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TggBmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6RwMgGUsEe6bAesDIgR3sg" name="compare" method="_6TggA2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6RwMgWUsEe6bAesDIgR3sg" name="obj1" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6RwMgmUsEe6bAesDIgR3sg" name="obj2" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6RwMg2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CuSAGUsEe6bAesDIgR3sg" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_6Rwzk2UsEe6bAesDIgR3sg" client="_6CuSAGUsEe6bAesDIgR3sg" supplier="_6PbRRmUsEe6bAesDIgR3sg" contract="_6PbRRmUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TggB2UsEe6bAesDIgR3sg" name="compare" specification="_6RxaoWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TggCGUsEe6bAesDIgR3sg" name="obj1" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TggCWUsEe6bAesDIgR3sg" name="obj2" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TggCmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6RxaoWUsEe6bAesDIgR3sg" name="compare" method="_6TggB2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6RxaomUsEe6bAesDIgR3sg" name="obj1" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Rxao2UsEe6bAesDIgR3sg" name="obj2" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6RxapGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CuSAmUsEe6bAesDIgR3sg" name="Node">
              <generalization xmi:id="_6P1g9GUsEe6bAesDIgR3sg" general="_6DTg0GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S-UgWUsEe6bAesDIgR3sg" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S-UgmUsEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S-Ug2UsEe6bAesDIgR3sg" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S-UhGUsEe6bAesDIgR3sg" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S-UhWUsEe6bAesDIgR3sg" name="edges" type="_6PSHUGUsEe6bAesDIgR3sg" isReadOnly="true" association="_6UBdbWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S-7kGUsEe6bAesDIgR3sg" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6S-7kWUsEe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_6RyBsmUsEe6bAesDIgR3sg" client="_6CuSAmUsEe6bAesDIgR3sg" supplier="_6RmbgWUsEe6bAesDIgR3sg" contract="_6RmbgWUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TggC2UsEe6bAesDIgR3sg" name="Node" specification="_6Cu5EGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TggDGUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TggDWUsEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TggDmUsEe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TggD2UsEe6bAesDIgR3sg" type="_6CuSAmUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TggEGUsEe6bAesDIgR3sg" name="compareTo" specification="_6P054GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TggEWUsEe6bAesDIgR3sg" name="node" type="_6CuSAmUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TggEmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TggE2UsEe6bAesDIgR3sg" name="toString" specification="_6Cu5F2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TggFGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TggFWUsEe6bAesDIgR3sg" name="addEdge" specification="_6P1g8mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TggFmUsEe6bAesDIgR3sg" name="edge" type="_6CiExGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TggF2UsEe6bAesDIgR3sg" name="addConflict" specification="_6CvgIGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TggGGUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TggGWUsEe6bAesDIgR3sg" name="numEdges" specification="_6CvgImUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TggGmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TggG2UsEe6bAesDIgR3sg" name="print" specification="_6CvgJGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TggHGUsEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TggHWUsEe6bAesDIgR3sg" name="print" specification="_6CvgKWUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6Cu5EGUsEe6bAesDIgR3sg" name="Node" visibility="package" method="_6TggC2UsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6Cu5FGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6Cu5FWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6Cu5EWUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cu5EmUsEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cu5E2UsEe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cu5FmUsEe6bAesDIgR3sg" type="_6CuSAmUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Cu5F2UsEe6bAesDIgR3sg" name="toString" method="_6TggE2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Cu5GGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CvgIGUsEe6bAesDIgR3sg" name="addConflict" method="_6TggF2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CvgIWUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CvgImUsEe6bAesDIgR3sg" name="numEdges" method="_6TggGWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CvgI2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CvgJGUsEe6bAesDIgR3sg" name="print" method="_6TggG2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CvgJWUsEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CvgKWUsEe6bAesDIgR3sg" name="print" method="_6TggHWUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6P054GUsEe6bAesDIgR3sg" name="compareTo" method="_6TggEGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P054WUsEe6bAesDIgR3sg" name="node" type="_6CuSAmUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P054mUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6P1g8mUsEe6bAesDIgR3sg" name="addEdge" method="_6TggFWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P1g82UsEe6bAesDIgR3sg" name="edge" type="_6CiExGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CwHMGUsEe6bAesDIgR3sg" name="NodeMap">
              <ownedComment xmi:id="_6TyM22UsEe6bAesDIgR3sg">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6P2IAGUsEe6bAesDIgR3sg" general="_6CXFoGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S-7kmUsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S-7k2UsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CwHMWUsEe6bAesDIgR3sg" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_6TyM3GUsEe6bAesDIgR3sg">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6P2vF2UsEe6bAesDIgR3sg" general="_6DE3VGUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TggHmUsEe6bAesDIgR3sg" name="NonPreemptiveSchedule" specification="_6P2vEWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TggH2UsEe6bAesDIgR3sg" name="poset" type="_6DypAGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TggIGUsEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TggIWUsEe6bAesDIgR3sg" type="_6CwHMWUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6P2vEWUsEe6bAesDIgR3sg" name="NonPreemptiveSchedule" visibility="package" method="_6TggHmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6P2vFGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6P2vFWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6P2vEmUsEe6bAesDIgR3sg" name="poset" type="_6DypAGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P2vE2UsEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6P2vFmUsEe6bAesDIgR3sg" type="_6CwHMWUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CwHMmUsEe6bAesDIgR3sg" name="NotImplentedVisualization">
              <generalization xmi:id="_6P3WIGUsEe6bAesDIgR3sg" general="_6DKW4GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S-7lGUsEe6bAesDIgR3sg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S-7lWUsEe6bAesDIgR3sg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S-7lmUsEe6bAesDIgR3sg" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S-7l2UsEe6bAesDIgR3sg" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S_ioGUsEe6bAesDIgR3sg" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S_ioWUsEe6bAesDIgR3sg" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThHEGUsEe6bAesDIgR3sg" name="NotImplentedVisualization" specification="_6CwuQGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThHEWUsEe6bAesDIgR3sg" type="_6CwHMmUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThHEmUsEe6bAesDIgR3sg" name="NotImplentedVisualization" specification="_6CwuRGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThHE2UsEe6bAesDIgR3sg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThHFGUsEe6bAesDIgR3sg" type="_6CwHMmUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThHFWUsEe6bAesDIgR3sg" name="visualization" specification="_6CwuSWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThHFmUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6CwuQGUsEe6bAesDIgR3sg" name="NotImplentedVisualization" visibility="package" method="_6ThHEGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6CwuQWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6CwuQmUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6CwuQ2UsEe6bAesDIgR3sg" type="_6CwHMmUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6CwuRGUsEe6bAesDIgR3sg" name="NotImplentedVisualization" visibility="package" method="_6ThHEmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6CwuRmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6CwuR2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6CwuRWUsEe6bAesDIgR3sg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6CwuSGUsEe6bAesDIgR3sg" type="_6CwHMmUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6CwuSWUsEe6bAesDIgR3sg" name="visualization" method="_6ThHFWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P2vGGUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CxVUGUsEe6bAesDIgR3sg" name="PeriodComparator">
              <interfaceRealization xmi:id="_6RyowGUsEe6bAesDIgR3sg" client="_6CxVUGUsEe6bAesDIgR3sg" supplier="_6PbRRmUsEe6bAesDIgR3sg" contract="_6PbRRmUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThHF2UsEe6bAesDIgR3sg" name="compare" specification="_6RzP0GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThHGGUsEe6bAesDIgR3sg" name="obj1" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6ThHGWUsEe6bAesDIgR3sg" name="obj2" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6ThHGmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6RzP0GUsEe6bAesDIgR3sg" name="compare" method="_6ThHF2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6RzP0WUsEe6bAesDIgR3sg" name="obj1" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6RzP0mUsEe6bAesDIgR3sg" name="obj2" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6RzP02UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CxVUmUsEe6bAesDIgR3sg" name="WorkLoadDescription">
              <ownedComment xmi:id="_6TyM3WUsEe6bAesDIgR3sg">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
Modified by srgoddard&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_6P39MmUsEe6bAesDIgR3sg" general="_6DKW4GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S_iomUsEe6bAesDIgR3sg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S_io2UsEe6bAesDIgR3sg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S_ipGUsEe6bAesDIgR3sg" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6S_ipWUsEe6bAesDIgR3sg" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S_ipmUsEe6bAesDIgR3sg" name="description" visibility="private" type="_6ChdsGUsEe6bAesDIgR3sg" association="_6UCEcWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6S_iqGUsEe6bAesDIgR3sg" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6S_iqmUsEe6bAesDIgR3sg" name="fm" visibility="private" type="_6Cj58mUsEe6bAesDIgR3sg" association="_6UCEdGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TAJsWUsEe6bAesDIgR3sg" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThHG2UsEe6bAesDIgR3sg" name="WorkLoadDescription" specification="_6Cx8YGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThHHGUsEe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThHHWUsEe6bAesDIgR3sg" type="_6CxVUmUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThHHmUsEe6bAesDIgR3sg" name="visualization" specification="_6Cx8ZWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThHH2UsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThHIGUsEe6bAesDIgR3sg" name="fileVisualization" specification="_6Cx8aWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThHIWUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThHImUsEe6bAesDIgR3sg" name="toString" specification="_6Cx8bWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThHI2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThHJGUsEe6bAesDIgR3sg" name="initialize" specification="_6CyjdGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThHJWUsEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThHJmUsEe6bAesDIgR3sg" name="main" specification="_6CyjdmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThHJ2UsEe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6ThHKGUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoadDescription test = new WorkLoadDescription(&quot;stresstest.txt&quot;);&#xD;
	String [] arr = new String [20];//Primary storage of information&#xD;
	String temp = new String(); //A temporary string to use for information transfer&#xD;
	int trackArraySize = 0; //Used to track the positions in an Array that has information stored.&#xD;
	//This is where the information is put into an array.&#xD;
	Scanner input = new Scanner(test.toString());//Used to process information from test to arr&#xD;
	while (input.hasNextLine()) {&#xD;
		temp = input.nextLine();&#xD;
		temp = temp.replace(&quot;}&quot;, &quot; &quot;);&#xD;
		temp = temp.replace(&quot;{&quot;, &quot; &quot;);&#xD;
		arr[trackArraySize]= temp;&#xD;
		trackArraySize++;&#xD;
	}&#xD;
	input.close();&#xD;
	//The following is where the information is sorted reverse alphabetically.&#xD;
	for(int i=1; i&lt;trackArraySize;i++) {&#xD;
		for(int j=i+1; j&lt;trackArraySize; j++) {&#xD;
			if(arr[j].compareTo(arr[i]) > 0) {&#xD;
				temp = arr[i];&#xD;
				arr[i] = arr[j];&#xD;
				arr[j] = temp;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
	//The following is to print out the sorted array&#xD;
	System.out.println(arr[0]);&#xD;
	for(int i=1; i&lt;trackArraySize-1; i++) {&#xD;
		System.out.println(&quot;Flow &quot; + i + &quot;: &quot; + arr[i]);&#xD;
	}&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6Cx8YGUsEe6bAesDIgR3sg" name="WorkLoadDescription" visibility="package" method="_6ThHG2UsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6Cx8YmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6Cx8Y2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6Cx8YWUsEe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Cx8ZGUsEe6bAesDIgR3sg" type="_6CxVUmUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Cx8ZWUsEe6bAesDIgR3sg" name="visualization" method="_6ThHHmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P39MGUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Cx8aWUsEe6bAesDIgR3sg" name="fileVisualization" method="_6ThHIGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P39MWUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Cx8bWUsEe6bAesDIgR3sg" name="toString" method="_6ThHImUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CyjcGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CyjdGUsEe6bAesDIgR3sg" name="initialize" visibility="private" method="_6ThHJGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6CyjdWUsEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6CyjdmUsEe6bAesDIgR3sg" name="main" isStatic="true" method="_6ThHJmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Cyjd2UsEe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6CyjeGUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6CzKgGUsEe6bAesDIgR3sg" name="PreemptiveSchedule">
              <ownedComment xmi:id="_6TyM3mUsEe6bAesDIgR3sg">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6P6Zc2UsEe6bAesDIgR3sg" general="_6DE3VGUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThuIGUsEe6bAesDIgR3sg" name="PreemptiveSchedule" specification="_6P39M2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThuIWUsEe6bAesDIgR3sg" name="poset" type="_6DypAGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6ThuImUsEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThuI2UsEe6bAesDIgR3sg" type="_6CzKgGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThuJGUsEe6bAesDIgR3sg" name="continueSearch" specification="_6P4kRGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThuJWUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThuJmUsEe6bAesDIgR3sg" name="activation" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6ThuJ2UsEe6bAesDIgR3sg" type="_6RzP12UsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThuKGUsEe6bAesDIgR3sg" name="toProgram" specification="_6CzKgWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThuKWUsEe6bAesDIgR3sg" type="_6C0_sGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThuKmUsEe6bAesDIgR3sg" name="findPreeptiveChannelAndTime" specification="_6P5LUGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThuK2UsEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThuLGUsEe6bAesDIgR3sg" name="schedulableObject" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6ThuLWUsEe6bAesDIgR3sg" type="_6RzP12UsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThuLmUsEe6bAesDIgR3sg" name="findAdditionalTime" specification="_6P5LU2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThuL2UsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThuMGUsEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThuMWUsEe6bAesDIgR3sg" name="a1" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6ThuMmUsEe6bAesDIgR3sg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThuM2UsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThuNGUsEe6bAesDIgR3sg" name="findMaxTimeAvailable" specification="_6P5LWWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThuNWUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThuNmUsEe6bAesDIgR3sg" name="schedulableObject" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6ThuN2UsEe6bAesDIgR3sg" type="_6RzP12UsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThuOGUsEe6bAesDIgR3sg" name="availableTime" specification="_6P5yYmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThuOWUsEe6bAesDIgR3sg" name="a1" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6ThuOmUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThuO2UsEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThuPGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThuPWUsEe6bAesDIgR3sg" name="addToSchedule" specification="_6P5yZ2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThuPmUsEe6bAesDIgR3sg" name="next" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6ThuP2UsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThuQGUsEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThuQWUsEe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6ThuQmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThuQ2UsEe6bAesDIgR3sg" name="addToSchedule" specification="_6P5ybWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThuRGUsEe6bAesDIgR3sg" name="next" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6ThuRWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6CzKgWUsEe6bAesDIgR3sg" name="toProgram" method="_6ThuKGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P4kSmUsEe6bAesDIgR3sg" type="_6C0_sGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6P39M2UsEe6bAesDIgR3sg" name="PreemptiveSchedule" visibility="package" method="_6ThuIGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6P4kQWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6P4kQmUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6P39NGUsEe6bAesDIgR3sg" name="poset" type="_6DypAGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P4kQGUsEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6P4kQ2UsEe6bAesDIgR3sg" type="_6CzKgGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6P4kRGUsEe6bAesDIgR3sg" name="continueSearch" visibility="protected" method="_6ThuJGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P4kRWUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6P4kRmUsEe6bAesDIgR3sg" name="activation" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Rz24WUsEe6bAesDIgR3sg" type="_6RzP12UsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6P5LUGUsEe6bAesDIgR3sg" name="findPreeptiveChannelAndTime" visibility="private" method="_6ThuKmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P5LUWUsEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6P5LUmUsEe6bAesDIgR3sg" name="schedulableObject" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Rz24mUsEe6bAesDIgR3sg" type="_6RzP12UsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6P5LU2UsEe6bAesDIgR3sg" name="findAdditionalTime" visibility="private" method="_6ThuLmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P5LVGUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6P5LVWUsEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6P5LVmUsEe6bAesDIgR3sg" name="a1" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P5LV2UsEe6bAesDIgR3sg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Rz242UsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6P5LWWUsEe6bAesDIgR3sg" name="findMaxTimeAvailable" visibility="private" method="_6ThuNGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P5yYGUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6P5yYWUsEe6bAesDIgR3sg" name="schedulableObject" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Rz25GUsEe6bAesDIgR3sg" type="_6RzP12UsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6P5yYmUsEe6bAesDIgR3sg" name="availableTime" visibility="private" method="_6ThuOGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P5yY2UsEe6bAesDIgR3sg" name="a1" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P5yZGUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6P5yZWUsEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6P5yZmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6P5yZ2UsEe6bAesDIgR3sg" name="addToSchedule" visibility="private" method="_6ThuPWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P5yaGUsEe6bAesDIgR3sg" name="next" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P5yaWUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6P5yamUsEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6P5ya2UsEe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6P5ybGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6P5ybWUsEe6bAesDIgR3sg" name="addToSchedule" visibility="protected" method="_6ThuQ2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P5ybmUsEe6bAesDIgR3sg" name="next" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P5yb2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C0YoGUsEe6bAesDIgR3sg" name="PriorityComparator">
              <interfaceRealization xmi:id="_6Rz25WUsEe6bAesDIgR3sg" client="_6C0YoGUsEe6bAesDIgR3sg" supplier="_6PbRRmUsEe6bAesDIgR3sg" contract="_6PbRRmUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6ThuRmUsEe6bAesDIgR3sg" name="compare" specification="_6R0d8WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ThuR2UsEe6bAesDIgR3sg" name="obj1" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6ThuSGUsEe6bAesDIgR3sg" name="obj2" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6ThuSWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6R0d8WUsEe6bAesDIgR3sg" name="compare" method="_6ThuRmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6R0d8mUsEe6bAesDIgR3sg" name="obj1" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6R0d82UsEe6bAesDIgR3sg" name="obj2" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6R0d9GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C0YomUsEe6bAesDIgR3sg" name="WarpPoset">
              <ownedComment xmi:id="_6TyM32UsEe6bAesDIgR3sg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_6P7AhWUsEe6bAesDIgR3sg" general="_6DypAGUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TiVMGUsEe6bAesDIgR3sg" name="WarpPoset" specification="_6P7AgGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TiVMWUsEe6bAesDIgR3sg" name="workload" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TiVMmUsEe6bAesDIgR3sg" type="_6C0YomUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TiVM2UsEe6bAesDIgR3sg" name="findCoordinator" specification="_6R1FAGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TiVNGUsEe6bAesDIgR3sg" name="nodesInFlow" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TiVNWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6P7AgGUsEe6bAesDIgR3sg" name="WarpPoset" visibility="package" method="_6TiVMGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6P7AgmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6P7Ag2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6P7AgWUsEe6bAesDIgR3sg" name="workload" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P7AhGUsEe6bAesDIgR3sg" type="_6C0YomUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6R1FAGUsEe6bAesDIgR3sg" name="findCoordinator" visibility="protected" method="_6TiVM2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6R1FAWUsEe6bAesDIgR3sg" name="nodesInFlow" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6R1FAmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C0_sGUsEe6bAesDIgR3sg" name="ProgramSchedule">
              <generalization xmi:id="_6P7AhmUsEe6bAesDIgR3sg" general="_6DDCIGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TAJsmUsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TAJs2UsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TiVNmUsEe6bAesDIgR3sg" name="ProgramSchedule" specification="_6C0_sWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TiVN2UsEe6bAesDIgR3sg" type="_6C0_sGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TiVOGUsEe6bAesDIgR3sg" name="ProgramSchedule" specification="_6C0_tWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TiVOWUsEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TiVOmUsEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TiVO2UsEe6bAesDIgR3sg" type="_6C0_sGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6C0_sWUsEe6bAesDIgR3sg" name="ProgramSchedule" method="_6TiVNmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6C0_smUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6C0_s2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6C0_tGUsEe6bAesDIgR3sg" type="_6C0_sGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C0_tWUsEe6bAesDIgR3sg" name="ProgramSchedule" visibility="package" method="_6TiVOGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6C0_uGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6C0_uWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6C0_tmUsEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6C0_t2UsEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6C0_umUsEe6bAesDIgR3sg" type="_6C0_sGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C1mwGUsEe6bAesDIgR3sg" name="ProgramVisualization">
              <ownedComment xmi:id="_6TyM4GUsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6P81sWUsEe6bAesDIgR3sg" general="_6DKW4GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TAJtGUsEe6bAesDIgR3sg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TAJtWUsEe6bAesDIgR3sg" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TAJtmUsEe6bAesDIgR3sg" name="sourceCode" visibility="private" type="_6C0_sGUsEe6bAesDIgR3sg" association="_6UCEd2UsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TAJuGUsEe6bAesDIgR3sg" name="program" visibility="private" type="_6DaOgGUsEe6bAesDIgR3sg" association="_6UCEemUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TAwwWUsEe6bAesDIgR3sg" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TiVPGUsEe6bAesDIgR3sg" name="ProgramVisualization" specification="_6P7nkWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TiVPWUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TiVPmUsEe6bAesDIgR3sg" type="_6C1mwGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TiVP2UsEe6bAesDIgR3sg" name="displayVisualization" specification="_6C1mwWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TiVQGUsEe6bAesDIgR3sg" type="_6CpZgGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TiVQWUsEe6bAesDIgR3sg" name="createHeader" specification="_6C1mxWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TiVQmUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TiVQ2UsEe6bAesDIgR3sg" name="createFooter" specification="_6C1myWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TiVRGUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TiVRWUsEe6bAesDIgR3sg" name="createColumnHeader" specification="_6C2N02UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TiVRmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TiVR2UsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TiVSGUsEe6bAesDIgR3sg" name="createVisualizationData" specification="_6C2N2mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TiVSWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TiVSmUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TiVS2UsEe6bAesDIgR3sg" name="createTitle" specification="_6C2N4WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TiVTGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6C1mwWUsEe6bAesDIgR3sg" name="displayVisualization" method="_6TiVP2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P8OpGUsEe6bAesDIgR3sg" type="_6CpZgGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C1mxWUsEe6bAesDIgR3sg" name="createHeader" visibility="protected" method="_6TiVQWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P8OpWUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C1myWUsEe6bAesDIgR3sg" name="createFooter" visibility="protected" method="_6TiVQ2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P81sGUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C2N02UsEe6bAesDIgR3sg" name="createColumnHeader" visibility="protected" method="_6TiVRWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6C2N1GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6C2N1WUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6C2N2mUsEe6bAesDIgR3sg" name="createVisualizationData" visibility="protected" method="_6TiVSGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6C2N22UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6C2N3GUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6C2N4WUsEe6bAesDIgR3sg" name="createTitle" visibility="private" method="_6TiVS2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6C2N4mUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6P7nkWUsEe6bAesDIgR3sg" name="ProgramVisualization" visibility="package" method="_6TiVPGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6P8OoWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6P8OomUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6P8OoGUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P8Oo2UsEe6bAesDIgR3sg" type="_6C1mwGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C204GUsEe6bAesDIgR3sg" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_6R1sEGUsEe6bAesDIgR3sg" client="_6C204GUsEe6bAesDIgR3sg" supplier="_6PbRRmUsEe6bAesDIgR3sg" contract="_6PbRRmUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TiVTWUsEe6bAesDIgR3sg" name="compare" specification="_6R1sEmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TiVTmUsEe6bAesDIgR3sg" name="obj1" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TiVT2UsEe6bAesDIgR3sg" name="obj2" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TiVUGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6R1sEmUsEe6bAesDIgR3sg" name="compare" method="_6TiVTWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6R1sE2UsEe6bAesDIgR3sg" name="obj1" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6R1sFGUsEe6bAesDIgR3sg" name="obj2" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6R1sFWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C3b8GUsEe6bAesDIgR3sg" name="ReleaseTimeQueue">
              <generalization xmi:id="_6C4DAWUsEe6bAesDIgR3sg" general="_6C3b9mUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TAww2UsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TAwxGUsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TiVUWUsEe6bAesDIgR3sg" name="ReleaseTimeQueue" specification="_6C3b8mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TiVUmUsEe6bAesDIgR3sg" type="_6C3b8GUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Ti8QGUsEe6bAesDIgR3sg" name="ReleaseTimeQueue" specification="_6P9cwmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Ti8QWUsEe6bAesDIgR3sg" name="schedulableObjects" type="_6P9cwGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Ti8QmUsEe6bAesDIgR3sg" type="_6C3b8GUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6C3b8mUsEe6bAesDIgR3sg" name="ReleaseTimeQueue" visibility="package" method="_6TiVUWUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6C3b82UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6C3b9GUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6C3b9WUsEe6bAesDIgR3sg" type="_6C3b8GUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6P9cwmUsEe6bAesDIgR3sg" name="ReleaseTimeQueue" visibility="package" method="_6Ti8QGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6P9cxGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6P9cxWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6P9cw2UsEe6bAesDIgR3sg" name="schedulableObjects" type="_6P9cwGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P9cxmUsEe6bAesDIgR3sg" type="_6C3b8GUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C4DA2UsEe6bAesDIgR3sg" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_6TyM4WUsEe6bAesDIgR3sg">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Ti8Q2UsEe6bAesDIgR3sg" name="ReliabilityAnalysis" specification="_6P-D0WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Ti8RGUsEe6bAesDIgR3sg" name="program" type="_6DaOgGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Ti8RWUsEe6bAesDIgR3sg" type="_6C4DA2UsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Ti8RmUsEe6bAesDIgR3sg" name="verifyReliabilities" specification="_6C4DBGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Ti8R2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6C4DBGUsEe6bAesDIgR3sg" name="verifyReliabilities" method="_6Ti8RmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6C4DBWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6P-D0WUsEe6bAesDIgR3sg" name="ReliabilityAnalysis" method="_6Ti8Q2UsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6P-D02UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6P-D1GUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6P-D0mUsEe6bAesDIgR3sg" name="program" type="_6DaOgGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P-D1WUsEe6bAesDIgR3sg" type="_6C4DA2UsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_6C4DBmUsEe6bAesDIgR3sg" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_6TyM4mUsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6C4qEGUsEe6bAesDIgR3sg" name="minPacketReceptionRate" type="_6R3hQGUsEe6bAesDIgR3sg" isReadOnly="true"/>
              <ownedAttribute xmi:id="_6C4qEWUsEe6bAesDIgR3sg" name="e2e" type="_6R3hQGUsEe6bAesDIgR3sg" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C4qEmUsEe6bAesDIgR3sg" name="ReliabilityRow">
              <generalization xmi:id="_6P-D1mUsEe6bAesDIgR3sg" general="_6C6fRGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TAwxWUsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TAwxmUsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Ti8SGUsEe6bAesDIgR3sg" name="ReliabilityRow" specification="_6C4qE2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Ti8SWUsEe6bAesDIgR3sg" type="_6C4qEmUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Ti8SmUsEe6bAesDIgR3sg" name="ReliabilityRow" specification="_6R4IUWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Ti8S2UsEe6bAesDIgR3sg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Ti8TGUsEe6bAesDIgR3sg" name="element" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Ti8TWUsEe6bAesDIgR3sg" type="_6C4qEmUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Ti8TmUsEe6bAesDIgR3sg" name="ReliabilityRow" specification="_6R4vZGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Ti8T2UsEe6bAesDIgR3sg" name="rowArray" type="_6R3hQGUsEe6bAesDIgR3sg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6Ti8UGUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Ti8UWUsEe6bAesDIgR3sg" type="_6C4qEmUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6C4qE2UsEe6bAesDIgR3sg" name="ReliabilityRow" method="_6Ti8SGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6C4qFGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6C4qFWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6C4qFmUsEe6bAesDIgR3sg" type="_6C4qEmUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6R4IUWUsEe6bAesDIgR3sg" name="ReliabilityRow" visibility="package" method="_6Ti8SmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6R4vYWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6R4vYmUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6R4IUmUsEe6bAesDIgR3sg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6R4vYGUsEe6bAesDIgR3sg" name="element" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6R4vY2UsEe6bAesDIgR3sg" type="_6C4qEmUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6R4vZGUsEe6bAesDIgR3sg" name="ReliabilityRow" visibility="package" method="_6Ti8TmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6R4vZmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6R4vZ2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6R4vZWUsEe6bAesDIgR3sg" name="rowArray" type="_6R3hQGUsEe6bAesDIgR3sg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6R4vaWUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6R4vaGUsEe6bAesDIgR3sg" type="_6C4qEmUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C5RIGUsEe6bAesDIgR3sg" name="ReliabilityTable">
              <generalization xmi:id="_6P-q4WUsEe6bAesDIgR3sg" general="_6DDCIGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TAwx2UsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TAwyGUsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Ti8UmUsEe6bAesDIgR3sg" name="ReliabilityTable" specification="_6C5RIWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Ti8U2UsEe6bAesDIgR3sg" type="_6C5RIGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Ti8VGUsEe6bAesDIgR3sg" name="ReliabilityTable" specification="_6C5RJWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Ti8VWUsEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Ti8VmUsEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Ti8V2UsEe6bAesDIgR3sg" type="_6C5RIGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6C5RIWUsEe6bAesDIgR3sg" name="ReliabilityTable" method="_6Ti8UmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6C5RImUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6C5RI2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6C5RJGUsEe6bAesDIgR3sg" type="_6C5RIGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C5RJWUsEe6bAesDIgR3sg" name="ReliabilityTable" visibility="package" method="_6Ti8VGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6C5RKGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6C5RKWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6C5RJmUsEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6C5RJ2UsEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6C5RKmUsEe6bAesDIgR3sg" type="_6C5RIGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C5RK2UsEe6bAesDIgR3sg" name="ReliabilityVisualization">
              <ownedComment xmi:id="_6TyM42UsEe6bAesDIgR3sg">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6P_R9WUsEe6bAesDIgR3sg" general="_6DKW4GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TBX0GUsEe6bAesDIgR3sg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TBX0WUsEe6bAesDIgR3sg" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TBX0mUsEe6bAesDIgR3sg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TBX02UsEe6bAesDIgR3sg" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TBX1GUsEe6bAesDIgR3sg" name="warp" visibility="private" type="_6C7taWUsEe6bAesDIgR3sg" association="_6UCEfWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TBX1mUsEe6bAesDIgR3sg" name="ra" visibility="private" type="_6C4DA2UsEe6bAesDIgR3sg" association="_6UCEgGUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Ti8WGUsEe6bAesDIgR3sg" name="ReliabilityVisualization" specification="_6P_R8GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Ti8WWUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Ti8WmUsEe6bAesDIgR3sg" type="_6C5RK2UsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6P_R8GUsEe6bAesDIgR3sg" name="ReliabilityVisualization" visibility="package" method="_6Ti8WGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6P_R8mUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6P_R82UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6P_R8WUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P_R9GUsEe6bAesDIgR3sg" type="_6C5RK2UsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C54MGUsEe6bAesDIgR3sg" name="ReportVisualization">
              <generalization xmi:id="_6P_5CGUsEe6bAesDIgR3sg" general="_6DKW4GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TBX2GUsEe6bAesDIgR3sg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TBX2WUsEe6bAesDIgR3sg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TBX2mUsEe6bAesDIgR3sg" name="content" visibility="private" type="_6ChdsGUsEe6bAesDIgR3sg" association="_6UCrgWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TB-4GUsEe6bAesDIgR3sg" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TjjUGUsEe6bAesDIgR3sg" name="ReportVisualization" specification="_6P_R9mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TjjUWUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TjjUmUsEe6bAesDIgR3sg" name="warp" type="_6DBM8mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TjjU2UsEe6bAesDIgR3sg" name="content" type="_6ChdsGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TjjVGUsEe6bAesDIgR3sg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TjjVWUsEe6bAesDIgR3sg" type="_6C54MGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TjjVmUsEe6bAesDIgR3sg" name="visualization" specification="_6C54MWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TjjV2UsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TjjWGUsEe6bAesDIgR3sg" name="createReport" specification="_6C6fQ2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TjjWWUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6C54MWUsEe6bAesDIgR3sg" name="visualization" method="_6TjjVmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P_5BmUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C6fQ2UsEe6bAesDIgR3sg" name="createReport" visibility="private" method="_6TjjWGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6P_5B2UsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6P_R9mUsEe6bAesDIgR3sg" name="ReportVisualization" visibility="package" method="_6TjjUGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6P_5A2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6P_5BGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6P_R92UsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P_5AGUsEe6bAesDIgR3sg" name="warp" type="_6DBM8mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P_5AWUsEe6bAesDIgR3sg" name="content" type="_6ChdsGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6P_5AmUsEe6bAesDIgR3sg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6P_5BWUsEe6bAesDIgR3sg" type="_6C54MGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C6fRGUsEe6bAesDIgR3sg" name="Row">
              <generalization xmi:id="_6R7LpGUsEe6bAesDIgR3sg" general="_6PSHUGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TB-4mUsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TB-42UsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TjjWmUsEe6bAesDIgR3sg" name="Row" specification="_6C7tYGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TjjW2UsEe6bAesDIgR3sg" type="_6C6fRGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TjjXGUsEe6bAesDIgR3sg" name="Row" specification="_6R6kkGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TjjXWUsEe6bAesDIgR3sg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TjjXmUsEe6bAesDIgR3sg" name="element" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TjjX2UsEe6bAesDIgR3sg" type="_6C6fRGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TjjYGUsEe6bAesDIgR3sg" name="Row" specification="_6R6klmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TjjYWUsEe6bAesDIgR3sg" name="rowArray" type="_6RqF4GUsEe6bAesDIgR3sg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TjjYmUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TjjY2UsEe6bAesDIgR3sg" type="_6C6fRGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TjjZGUsEe6bAesDIgR3sg" name="Row" specification="_6C7tZGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TjjZWUsEe6bAesDIgR3sg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TjjZmUsEe6bAesDIgR3sg" type="_6C6fRGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6C7tYGUsEe6bAesDIgR3sg" name="Row" method="_6TjjWmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6C7tYWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6C7tYmUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6C7tY2UsEe6bAesDIgR3sg" type="_6C6fRGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C7tZGUsEe6bAesDIgR3sg" name="Row" visibility="package" method="_6TjjZGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6C7tZmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6C7tZ2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6C7tZWUsEe6bAesDIgR3sg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6C7taGUsEe6bAesDIgR3sg" type="_6C6fRGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6R6kkGUsEe6bAesDIgR3sg" name="Row" visibility="package" method="_6TjjXGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6R6kk2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6R6klGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6R6kkWUsEe6bAesDIgR3sg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6R6kkmUsEe6bAesDIgR3sg" name="element" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6R6klWUsEe6bAesDIgR3sg" type="_6C6fRGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6R6klmUsEe6bAesDIgR3sg" name="Row" visibility="package" method="_6TjjYGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6R7LoGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6R7LoWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6R6kl2UsEe6bAesDIgR3sg" name="rowArray" type="_6RqF4GUsEe6bAesDIgR3sg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6R7Lo2UsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6R7LomUsEe6bAesDIgR3sg" type="_6C6fRGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_6C7taWUsEe6bAesDIgR3sg" name="WarpInterface">
              <ownedComment xmi:id="_6TyM5GUsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_6QAgEGUsEe6bAesDIgR3sg" general="_6DBM8mUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6C87gGUsEe6bAesDIgR3sg" name="toWorkload">
                <ownedParameter xmi:id="_6QAgEWUsEe6bAesDIgR3sg" type="_6DqGIGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C87gWUsEe6bAesDIgR3sg" name="toProgram">
                <ownedParameter xmi:id="_6QAgEmUsEe6bAesDIgR3sg" type="_6DaOgGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C87gmUsEe6bAesDIgR3sg" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_6QAgE2UsEe6bAesDIgR3sg" type="_6C4DA2UsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C87g2UsEe6bAesDIgR3sg" name="toSimulator">
                <ownedParameter xmi:id="_6QAgFGUsEe6bAesDIgR3sg" type="_6C_-1mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C9ikGUsEe6bAesDIgR3sg" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_6QAgFWUsEe6bAesDIgR3sg" type="_6Csc1mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C9ikWUsEe6bAesDIgR3sg" name="toChannelAnalysis">
                <ownedParameter xmi:id="_6QAgFmUsEe6bAesDIgR3sg" type="_6CYTwWUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C9ikmUsEe6bAesDIgR3sg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_6C9ik2UsEe6bAesDIgR3sg" name="reliabilitiesMet">
                <ownedParameter xmi:id="_6C9ilGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6C9ilWUsEe6bAesDIgR3sg" name="deadlinesMet">
                <ownedParameter xmi:id="_6C9ilmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C9il2UsEe6bAesDIgR3sg" name="SchedulableObjectQueue">
              <generalization xmi:id="_6C-JoWUsEe6bAesDIgR3sg" general="_6C3b9mUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TB-5GUsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TB-5WUsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TjjZ2UsEe6bAesDIgR3sg" name="SchedulableObjectQueue" specification="_6R7ysGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TjjaGUsEe6bAesDIgR3sg" name="comparitor" type="_6PbRRmUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TjjaWUsEe6bAesDIgR3sg" type="_6C9il2UsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TjjamUsEe6bAesDIgR3sg" name="SchedulableObjectQueue" specification="_6R9A0WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tjja2UsEe6bAesDIgR3sg" name="comparitor" type="_6PbRRmUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TjjbGUsEe6bAesDIgR3sg" name="schedulableObjects" type="_6P9cwGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TjjbWUsEe6bAesDIgR3sg" type="_6C9il2UsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6R7ysGUsEe6bAesDIgR3sg" name="SchedulableObjectQueue" visibility="package" method="_6TjjZ2UsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6R7ysmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6R7ys2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6R7ysWUsEe6bAesDIgR3sg" name="comparitor" type="_6PbRRmUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6R7ytGUsEe6bAesDIgR3sg" type="_6C9il2UsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6R9A0WUsEe6bAesDIgR3sg" name="SchedulableObjectQueue" visibility="package" method="_6TjjamUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6R9n4GUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6R9n4WUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6R9A0mUsEe6bAesDIgR3sg" name="comparitor" type="_6PbRRmUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6R9A02UsEe6bAesDIgR3sg" name="schedulableObjects" type="_6P9cwGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6R9n4mUsEe6bAesDIgR3sg" type="_6C9il2UsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C-wsWUsEe6bAesDIgR3sg" name="VisualizationFactory">
              <ownedComment xmi:id="_6TyM5WUsEe6bAesDIgR3sg">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TjjbmUsEe6bAesDIgR3sg" name="createProgramVisualization" specification="_6QDjYGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tjjb2UsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TjjcGUsEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TjjcWUsEe6bAesDIgR3sg" name="choice" type="_6DEQQWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TjjcmUsEe6bAesDIgR3sg" type="_6DEQQGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tjjc2UsEe6bAesDIgR3sg" name="createWorkLoadVisualization" specification="_6QDjZWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TjjdGUsEe6bAesDIgR3sg" name="workload" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TjjdWUsEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TjjdmUsEe6bAesDIgR3sg" name="choice" type="_6DEQSmUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tjjd2UsEe6bAesDIgR3sg" type="_6DEQQGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6QDjYGUsEe6bAesDIgR3sg" name="createProgramVisualization" isStatic="true" method="_6TjjbmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QDjYWUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QDjYmUsEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QDjY2UsEe6bAesDIgR3sg" name="choice" type="_6DEQQWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QDjZGUsEe6bAesDIgR3sg" type="_6DEQQGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QDjZWUsEe6bAesDIgR3sg" name="createWorkLoadVisualization" isStatic="true" method="_6Tjjc2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QDjZmUsEe6bAesDIgR3sg" name="workload" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QDjZ2UsEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QDjaGUsEe6bAesDIgR3sg" name="choice" type="_6DEQSmUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QDjaWUsEe6bAesDIgR3sg" type="_6DEQQGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C_XwGUsEe6bAesDIgR3sg" name="ScheduleTable">
              <generalization xmi:id="_6QDjamUsEe6bAesDIgR3sg" general="_6DDCIGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TB-5mUsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TB-52UsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TjjeGUsEe6bAesDIgR3sg" name="ScheduleTable" specification="_6C_XwWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TjjeWUsEe6bAesDIgR3sg" type="_6C_XwGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TjjemUsEe6bAesDIgR3sg" name="ScheduleTable" specification="_6C_XxWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tjje2UsEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TjjfGUsEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TjjfWUsEe6bAesDIgR3sg" type="_6C_XwGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6C_XwWUsEe6bAesDIgR3sg" name="ScheduleTable" visibility="package" method="_6TjjeGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6C_XwmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6C_Xw2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6C_XxGUsEe6bAesDIgR3sg" type="_6C_XwGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6C_XxWUsEe6bAesDIgR3sg" name="ScheduleTable" visibility="package" method="_6TjjemUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6C_XyGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6C_XyWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6C_XxmUsEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6C_Xx2UsEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6C_XymUsEe6bAesDIgR3sg" type="_6C_XwGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C_Xy2UsEe6bAesDIgR3sg" name="ScheduleTime">
              <ownedAttribute xmi:id="_6TB-6GUsEe6bAesDIgR3sg" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TCl8GUsEe6bAesDIgR3sg" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TjjfmUsEe6bAesDIgR3sg" name="ScheduleTime" specification="_6C_-0GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tjjf2UsEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TjjgGUsEe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TjjgWUsEe6bAesDIgR3sg" type="_6C_Xy2UsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6C_-0GUsEe6bAesDIgR3sg" name="ScheduleTime" visibility="package" method="_6TjjfmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6C_-02UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6C_-1GUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6C_-0WUsEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6C_-0mUsEe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6C_-1WUsEe6bAesDIgR3sg" type="_6C_Xy2UsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C_-1mUsEe6bAesDIgR3sg" name="SimulatorInput">
              <ownedComment xmi:id="_6Tyz4GUsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6C_-12UsEe6bAesDIgR3sg" name="SortedPeriodQueue">
              <generalization xmi:id="_6DBM8GUsEe6bAesDIgR3sg" general="_6C3b9mUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TCl8WUsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TCl8mUsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKYGUsEe6bAesDIgR3sg" name="SortedPeriodQueue" specification="_6DAl4GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkKYWUsEe6bAesDIgR3sg" type="_6C_-12UsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKYmUsEe6bAesDIgR3sg" name="SortedPeriodQueue" specification="_6QEKcWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkKY2UsEe6bAesDIgR3sg" name="schedulableObjects" type="_6P9cwGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TkKZGUsEe6bAesDIgR3sg" type="_6C_-12UsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6DAl4GUsEe6bAesDIgR3sg" name="SortedPeriodQueue" visibility="package" method="_6TkKYGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6DAl4WUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6DAl4mUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6DAl42UsEe6bAesDIgR3sg" type="_6C_-12UsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QEKcWUsEe6bAesDIgR3sg" name="SortedPeriodQueue" visibility="package" method="_6TkKYmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6QEKc2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6QEKdGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6QEKcmUsEe6bAesDIgR3sg" name="schedulableObjects" type="_6P9cwGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QEKdWUsEe6bAesDIgR3sg" type="_6C_-12UsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_6DBM8mUsEe6bAesDIgR3sg" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_6QExgGUsEe6bAesDIgR3sg" general="_6C4DBmUsEe6bAesDIgR3sg"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_6DBM82UsEe6bAesDIgR3sg" name="ScheduleChoices">
                <ownedLiteral xmi:id="_6DB0AWUsEe6bAesDIgR3sg" name="PRIORITY"/>
                <ownedLiteral xmi:id="_6DB0AmUsEe6bAesDIgR3sg" name="RM"/>
                <ownedLiteral xmi:id="_6DB0A2UsEe6bAesDIgR3sg" name="DM"/>
                <ownedLiteral xmi:id="_6DB0BGUsEe6bAesDIgR3sg" name="RTHART"/>
                <ownedLiteral xmi:id="_6DB0BWUsEe6bAesDIgR3sg" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_6DB0BmUsEe6bAesDIgR3sg" name="POSET_RM"/>
                <ownedLiteral xmi:id="_6DB0B2UsEe6bAesDIgR3sg" name="POSET_DM"/>
                <ownedLiteral xmi:id="_6DB0CGUsEe6bAesDIgR3sg" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_6DB0CWUsEe6bAesDIgR3sg" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_6DB0CmUsEe6bAesDIgR3sg" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_6DB0C2UsEe6bAesDIgR3sg" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_6DB0DGUsEe6bAesDIgR3sg" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_6DB0DWUsEe6bAesDIgR3sg" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_6DB0DmUsEe6bAesDIgR3sg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6DB0D2UsEe6bAesDIgR3sg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6DB0EGUsEe6bAesDIgR3sg" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6DB0EWUsEe6bAesDIgR3sg" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6DB0EmUsEe6bAesDIgR3sg" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6DCbEGUsEe6bAesDIgR3sg" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6DCbEWUsEe6bAesDIgR3sg" name="SystemFactory">
              <ownedComment xmi:id="_6Tyz4WUsEe6bAesDIgR3sg">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKZWUsEe6bAesDIgR3sg" name="create" specification="_6QExg2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkKZmUsEe6bAesDIgR3sg" name="workload" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TkKZ2UsEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkKaGUsEe6bAesDIgR3sg" name="choice" type="_6DBM82UsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TkKaWUsEe6bAesDIgR3sg" type="_6C7taWUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6QExg2UsEe6bAesDIgR3sg" name="create" isStatic="true" method="_6TkKZWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QExhGUsEe6bAesDIgR3sg" name="workload" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QExhWUsEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QExhmUsEe6bAesDIgR3sg" name="choice" type="_6DBM82UsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QExh2UsEe6bAesDIgR3sg" type="_6C7taWUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6DDCIGUsEe6bAesDIgR3sg" name="Table">
              <generalization xmi:id="_6SDHcWUsEe6bAesDIgR3sg" general="_6PSHUGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TCl82UsEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TCl9GUsEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKamUsEe6bAesDIgR3sg" name="Table" specification="_6DDCImUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkKa2UsEe6bAesDIgR3sg" type="_6DDCIGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKbGUsEe6bAesDIgR3sg" name="Table" specification="_6DDpMGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkKbWUsEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkKbmUsEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkKb2UsEe6bAesDIgR3sg" type="_6DDCIGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKcGUsEe6bAesDIgR3sg" name="getNumRows" specification="_6DDpNmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkKcWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKcmUsEe6bAesDIgR3sg" name="getNumColumns" specification="_6DDpOGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkKc2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKdGUsEe6bAesDIgR3sg" name="set" specification="_6SCgYGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkKdWUsEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkKdmUsEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkKd2UsEe6bAesDIgR3sg" name="element" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKeGUsEe6bAesDIgR3sg" name="get" specification="_6DDpOmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkKeWUsEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkKemUsEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkKe2UsEe6bAesDIgR3sg" type="_6RqF4GUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6DDCImUsEe6bAesDIgR3sg" name="Table" method="_6TkKamUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6DDCI2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6DDCJGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6DDCJWUsEe6bAesDIgR3sg" type="_6DDCIGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DDpMGUsEe6bAesDIgR3sg" name="Table" method="_6TkKbGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6DDpM2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6DDpNGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6DDpMWUsEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DDpMmUsEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DDpNWUsEe6bAesDIgR3sg" type="_6DDCIGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DDpNmUsEe6bAesDIgR3sg" name="getNumRows" method="_6TkKcGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DDpN2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DDpOGUsEe6bAesDIgR3sg" name="getNumColumns" method="_6TkKcmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DDpOWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DDpOmUsEe6bAesDIgR3sg" name="get" method="_6TkKeGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DDpO2UsEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DDpPGUsEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SDHcGUsEe6bAesDIgR3sg" type="_6RqF4GUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SCgYGUsEe6bAesDIgR3sg" name="set" method="_6TkKdGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SCgYWUsEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SCgYmUsEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SCgY2UsEe6bAesDIgR3sg" name="element" type="_6RqF4GUsEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_6DEQQGUsEe6bAesDIgR3sg" name="Visualization">
              <ownedComment xmi:id="_6Tyz4mUsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_6DEQQWUsEe6bAesDIgR3sg" name="SystemChoices">
                <ownedLiteral xmi:id="_6DEQQ2UsEe6bAesDIgR3sg" name="SOURCE"/>
                <ownedLiteral xmi:id="_6DEQRGUsEe6bAesDIgR3sg" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_6DEQRWUsEe6bAesDIgR3sg" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_6DEQRmUsEe6bAesDIgR3sg" name="LATENCY"/>
                <ownedLiteral xmi:id="_6DEQR2UsEe6bAesDIgR3sg" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_6DEQSGUsEe6bAesDIgR3sg" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_6DEQSWUsEe6bAesDIgR3sg" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_6DEQSmUsEe6bAesDIgR3sg" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_6DEQTGUsEe6bAesDIgR3sg" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_6DEQTWUsEe6bAesDIgR3sg" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_6DEQTmUsEe6bAesDIgR3sg" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_6DE3UGUsEe6bAesDIgR3sg" name="toDisplay"/>
              <ownedOperation xmi:id="_6DE3UWUsEe6bAesDIgR3sg" name="toFile"/>
              <ownedOperation xmi:id="_6DE3UmUsEe6bAesDIgR3sg" name="toString">
                <ownedParameter xmi:id="_6DE3U2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6DE3VGUsEe6bAesDIgR3sg" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_6Tyz42UsEe6bAesDIgR3sg">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6TCl9WUsEe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TCl9mUsEe6bAesDIgR3sg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TCl92UsEe6bAesDIgR3sg" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TCl-WUsEe6bAesDIgR3sg" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TDNAWUsEe6bAesDIgR3sg" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TDNAmUsEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TDNBGUsEe6bAesDIgR3sg" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TDNBmUsEe6bAesDIgR3sg" name="schedule" visibility="protected" type="_6C_XwGUsEe6bAesDIgR3sg" association="_6UCrhGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TDNCGUsEe6bAesDIgR3sg" name="poset" visibility="protected" type="_6DypAGUsEe6bAesDIgR3sg" association="_6UCrh2UsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKfGUsEe6bAesDIgR3sg" name="Schedule" specification="_6QF_oGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkKfWUsEe6bAesDIgR3sg" name="poset" type="_6DypAGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TkKfmUsEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkKf2UsEe6bAesDIgR3sg" type="_6DE3VGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkxcGUsEe6bAesDIgR3sg" name="getSchedule" specification="_6DFeamUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkxcWUsEe6bAesDIgR3sg" type="_6C_XwGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkxcmUsEe6bAesDIgR3sg" name="buildSchedule" specification="_6DFea2UsEe6bAesDIgR3sg">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tkxc2UsEe6bAesDIgR3sg" name="toProgram" specification="_6DFebGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkxdGUsEe6bAesDIgR3sg" type="_6C0_sGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkxdWUsEe6bAesDIgR3sg" name="replaceNullWithSleep" specification="_6QGmt2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkxdmUsEe6bAesDIgR3sg" name="program" type="_6C0_sGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tkxd2UsEe6bAesDIgR3sg" name="fakeSchedulingToTestRest" specification="_6QHNwGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkxeGUsEe6bAesDIgR3sg" name="next" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkxeWUsEe6bAesDIgR3sg" name="getChannelAndSetStartTime" specification="_6QHNwmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkxemUsEe6bAesDIgR3sg" name="schedulableObject" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tkxe2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkxfGUsEe6bAesDIgR3sg" name="findChannelAndTime" specification="_6QHNxWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkxfWUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkxfmUsEe6bAesDIgR3sg" name="schedulableObject" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tkxf2UsEe6bAesDIgR3sg" type="_6DE3VWUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkxgGUsEe6bAesDIgR3sg" name="continueSearch" specification="_6QH00GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkxgWUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkxgmUsEe6bAesDIgR3sg" name="activation" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tkxg2UsEe6bAesDIgR3sg" type="_6DE3VWUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkxhGUsEe6bAesDIgR3sg" name="noOtherChannelConflicts" specification="_6QH01GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkxhWUsEe6bAesDIgR3sg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkxhmUsEe6bAesDIgR3sg" name="schedulableObject" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tkxh2UsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkxiGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkxiWUsEe6bAesDIgR3sg" name="conflictsExist" specification="_6QH02WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TkximUsEe6bAesDIgR3sg" name="obj" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tkxi2UsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkxjGUsEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkxjWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkxjmUsEe6bAesDIgR3sg" name="freeOfCoordinatorConflicts" specification="_6QIb4mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tkxj2UsEe6bAesDIgR3sg" name="obj" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TkxkGUsEe6bAesDIgR3sg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkxkWUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TkxkmUsEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tkxk2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TlYgGUsEe6bAesDIgR3sg" name="isAvailable" specification="_6QIb6GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TlYgWUsEe6bAesDIgR3sg" name="a1" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TlYgmUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TlYg2UsEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TlYhGUsEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TlYhWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TlYhmUsEe6bAesDIgR3sg" name="isAvailable" specification="_6QJC8WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TlYh2UsEe6bAesDIgR3sg" name="a1" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TlYiGUsEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TlYiWUsEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TlYimUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TlYi2UsEe6bAesDIgR3sg" name="timeRemaining" specification="_6DGsgGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TlYjGUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TlYjWUsEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TlYjmUsEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TlYj2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TlYkGUsEe6bAesDIgR3sg" name="canCombineEntriesInPlace" specification="_6QJC9mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TlYkWUsEe6bAesDIgR3sg" name="a1" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TlYkmUsEe6bAesDIgR3sg" name="a2" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TlYk2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TlYlGUsEe6bAesDIgR3sg" name="combinedEntriesInPlace" specification="_6QJqAGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TlYlWUsEe6bAesDIgR3sg" name="a1" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TlYlmUsEe6bAesDIgR3sg" name="a2" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TlYl2UsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TlYmGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TlYmWUsEe6bAesDIgR3sg" name="addToSchedule" specification="_6QJqBWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TlYmmUsEe6bAesDIgR3sg" name="next" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TlYm2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TlYnGUsEe6bAesDIgR3sg" name="reportNotSchedulable" specification="_6QJqCGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TlYnWUsEe6bAesDIgR3sg" name="object" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TlYnmUsEe6bAesDIgR3sg" name="printVerbose" specification="_6DGshWUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TlYn2UsEe6bAesDIgR3sg" name="print" specification="_6DGshmUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6DFeamUsEe6bAesDIgR3sg" name="getSchedule" method="_6TkxcGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz5mUsEe6bAesDIgR3sg">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QGmtWUsEe6bAesDIgR3sg" type="_6C_XwGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DFea2UsEe6bAesDIgR3sg" name="buildSchedule" visibility="private" method="_6TkxcmUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6DFebGUsEe6bAesDIgR3sg" name="toProgram" method="_6Tkxc2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QGmtmUsEe6bAesDIgR3sg" type="_6C0_sGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DGsgGUsEe6bAesDIgR3sg" name="timeRemaining" visibility="protected" method="_6TlYi2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz7GUsEe6bAesDIgR3sg">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DGsgWUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DGsgmUsEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DGsg2UsEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DGshGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DGshWUsEe6bAesDIgR3sg" name="printVerbose" method="_6TlYnmUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6DGshmUsEe6bAesDIgR3sg" name="print" method="_6TlYn2UsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6QF_oGUsEe6bAesDIgR3sg" name="Schedule" visibility="package" method="_6TkKfGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6QGmsmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6QGms2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6QGmsGUsEe6bAesDIgR3sg" name="poset" type="_6DypAGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QGmsWUsEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QGmtGUsEe6bAesDIgR3sg" type="_6DE3VGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QGmt2UsEe6bAesDIgR3sg" name="replaceNullWithSleep" visibility="private" method="_6TkxdWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz52UsEe6bAesDIgR3sg">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QGmuGUsEe6bAesDIgR3sg" name="program" type="_6C0_sGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QHNwGUsEe6bAesDIgR3sg" name="fakeSchedulingToTestRest" visibility="private" method="_6Tkxd2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QHNwWUsEe6bAesDIgR3sg" name="next" type="_6D9BEGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QHNwmUsEe6bAesDIgR3sg" name="getChannelAndSetStartTime" visibility="protected" method="_6TkxeWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz6GUsEe6bAesDIgR3sg">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QHNw2UsEe6bAesDIgR3sg" name="schedulableObject" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QHNxGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QHNxWUsEe6bAesDIgR3sg" name="findChannelAndTime" visibility="protected" method="_6TkxfGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QHNxmUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QHNx2UsEe6bAesDIgR3sg" name="schedulableObject" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QHNyGUsEe6bAesDIgR3sg" type="_6DE3VWUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QH00GUsEe6bAesDIgR3sg" name="continueSearch" visibility="protected" method="_6TkxgGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz6WUsEe6bAesDIgR3sg">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QH00WUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QH00mUsEe6bAesDIgR3sg" name="activation" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QH002UsEe6bAesDIgR3sg" type="_6DE3VWUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QH01GUsEe6bAesDIgR3sg" name="noOtherChannelConflicts" visibility="protected" method="_6TkxhGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QH01WUsEe6bAesDIgR3sg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QH01mUsEe6bAesDIgR3sg" name="schedulableObject" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QH012UsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QH02GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QH02WUsEe6bAesDIgR3sg" name="conflictsExist" visibility="protected" method="_6TkxiWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QH02mUsEe6bAesDIgR3sg" name="obj" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QH022UsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QIb4GUsEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QIb4WUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QIb4mUsEe6bAesDIgR3sg" name="freeOfCoordinatorConflicts" visibility="protected" method="_6TkxjmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QIb42UsEe6bAesDIgR3sg" name="obj" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QIb5GUsEe6bAesDIgR3sg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QIb5WUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QIb5mUsEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QIb52UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QIb6GUsEe6bAesDIgR3sg" name="isAvailable" visibility="protected" method="_6TlYgGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz6mUsEe6bAesDIgR3sg">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QIb6WUsEe6bAesDIgR3sg" name="a1" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QIb6mUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QIb62UsEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QIb7GUsEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QJC8GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QJC8WUsEe6bAesDIgR3sg" name="isAvailable" visibility="protected" method="_6TlYhmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz62UsEe6bAesDIgR3sg">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QJC8mUsEe6bAesDIgR3sg" name="a1" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QJC82UsEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QJC9GUsEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QJC9WUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QJC9mUsEe6bAesDIgR3sg" name="canCombineEntriesInPlace" visibility="private" method="_6TlYkGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QJC92UsEe6bAesDIgR3sg" name="a1" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QJC-GUsEe6bAesDIgR3sg" name="a2" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QJC-WUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QJqAGUsEe6bAesDIgR3sg" name="combinedEntriesInPlace" visibility="private" method="_6TlYlGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QJqAWUsEe6bAesDIgR3sg" name="a1" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QJqAmUsEe6bAesDIgR3sg" name="a2" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QJqA2UsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QJqBGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QJqBWUsEe6bAesDIgR3sg" name="addToSchedule" visibility="protected" method="_6TlYmWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QJqBmUsEe6bAesDIgR3sg" name="next" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QJqB2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QJqCGUsEe6bAesDIgR3sg" name="reportNotSchedulable" visibility="private" method="_6TlYnGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QKREGUsEe6bAesDIgR3sg" name="object" type="_6D9BEGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_6DE3VWUsEe6bAesDIgR3sg" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_6TDNCmUsEe6bAesDIgR3sg" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_6TD0EWUsEe6bAesDIgR3sg" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKgGUsEe6bAesDIgR3sg" name="ScheduleLocation" specification="_6DE3VmUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TkKgWUsEe6bAesDIgR3sg" type="_6DE3VWUsEe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKgmUsEe6bAesDIgR3sg" name="ScheduleLocation" specification="_6DFeYGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TkKg2UsEe6bAesDIgR3sg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_6TkKhGUsEe6bAesDIgR3sg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_6TkKhWUsEe6bAesDIgR3sg" type="_6DE3VWUsEe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKhmUsEe6bAesDIgR3sg" name="getChannel" specification="_6DFeZmUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TkKh2UsEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TkKiGUsEe6bAesDIgR3sg" name="getTime" specification="_6DFeaGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TkKiWUsEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_6DE3VmUsEe6bAesDIgR3sg" name="ScheduleLocation" visibility="package" method="_6TkKgGUsEe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_6DE3V2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_6DE3WGUsEe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_6DE3WWUsEe6bAesDIgR3sg" type="_6DE3VWUsEe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_6DFeYGUsEe6bAesDIgR3sg" name="ScheduleLocation" visibility="package" method="_6TkKgmUsEe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_6DFeY2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_6DFeZGUsEe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_6DFeYWUsEe6bAesDIgR3sg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_6DFeYmUsEe6bAesDIgR3sg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_6DFeZWUsEe6bAesDIgR3sg" type="_6DE3VWUsEe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_6DFeZmUsEe6bAesDIgR3sg" name="getChannel" visibility="protected" method="_6TkKhmUsEe6bAesDIgR3sg">
                  <ownedComment xmi:id="_6Tyz5GUsEe6bAesDIgR3sg">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_6DFeZ2UsEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_6DFeaGUsEe6bAesDIgR3sg" name="getTime" visibility="protected" method="_6TkKiGUsEe6bAesDIgR3sg">
                  <ownedComment xmi:id="_6Tyz5WUsEe6bAesDIgR3sg">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_6DFeaWUsEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6DH6oGUsEe6bAesDIgR3sg" name="VisualizationImplementation">
              <ownedComment xmi:id="_6Tyz7WUsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@author Frank Forliano (for java doc comments)&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6TD0E2UsEe6bAesDIgR3sg" name="visualization" visibility="private" type="_6ChdsGUsEe6bAesDIgR3sg" association="_6UCrimUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TD0FWUsEe6bAesDIgR3sg" name="fileContent" visibility="private" type="_6ChdsGUsEe6bAesDIgR3sg" association="_6UCrjWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TEbIWUsEe6bAesDIgR3sg" name="window" visibility="private" type="_6CpZgGUsEe6bAesDIgR3sg" association="_6UDSkWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TEbI2UsEe6bAesDIgR3sg" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TEbJWUsEe6bAesDIgR3sg" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TEbJ2UsEe6bAesDIgR3sg" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TEbKWUsEe6bAesDIgR3sg" name="fm" visibility="private" type="_6Cj58mUsEe6bAesDIgR3sg" association="_6UDSlGUsEe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TEbKmUsEe6bAesDIgR3sg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TFCMGUsEe6bAesDIgR3sg" name="warp" visibility="private" type="_6C7taWUsEe6bAesDIgR3sg" association="_6UDSl2UsEe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TFCMWUsEe6bAesDIgR3sg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TFCM2UsEe6bAesDIgR3sg" name="workLoad" visibility="private" type="_6DqGIGUsEe6bAesDIgR3sg" association="_6UDSmmUsEe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TFCNGUsEe6bAesDIgR3sg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TFCNmUsEe6bAesDIgR3sg" name="visualizationObject" visibility="private" type="_6DKW4GUsEe6bAesDIgR3sg" association="_6UDSnWUsEe6bAesDIgR3sg"/>
              <interfaceRealization xmi:id="_6QMGQGUsEe6bAesDIgR3sg" client="_6DH6oGUsEe6bAesDIgR3sg" supplier="_6DEQQGUsEe6bAesDIgR3sg" contract="_6DEQQGUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TlYoGUsEe6bAesDIgR3sg" name="VisualizationImplementation" specification="_6SE8oWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TlYoWUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TlYomUsEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TlYo2UsEe6bAesDIgR3sg" name="choice" type="_6SEVkGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TlYpGUsEe6bAesDIgR3sg" type="_6DH6oGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TlYpWUsEe6bAesDIgR3sg" name="VisualizationImplementation" specification="_6SGKwWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TlYpmUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TlYp2UsEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TlYqGUsEe6bAesDIgR3sg" name="choice" type="_6SFjsWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TlYqWUsEe6bAesDIgR3sg" type="_6DH6oGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TlYqmUsEe6bAesDIgR3sg" name="toDisplay" specification="_6DIhsGUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TlYq2UsEe6bAesDIgR3sg" name="toFile" specification="_6DJIwmUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tl_kGUsEe6bAesDIgR3sg" name="toString" specification="_6DJIxmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tl_kWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tl_kmUsEe6bAesDIgR3sg" name="createVisualization" specification="_6SHY4mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tl_k2UsEe6bAesDIgR3sg" name="choice" type="_6SEVkGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tl_lGUsEe6bAesDIgR3sg" name="createVisualization" specification="_6SH_8GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tl_lWUsEe6bAesDIgR3sg" name="choice" type="_6SFjsWUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tl_lmUsEe6bAesDIgR3sg" name="createVisualization" specification="_6SH_8mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tl_l2UsEe6bAesDIgR3sg" name="obj" type="_6RqF4GUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tl_mGUsEe6bAesDIgR3sg" name="createFileNameTemplate" specification="_6DJIy2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tl_mWUsEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tl_mmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6DIhsGUsEe6bAesDIgR3sg" name="toDisplay" method="_6TlYqmUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6DJIwmUsEe6bAesDIgR3sg" name="toFile" method="_6TlYq2UsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6DJIxmUsEe6bAesDIgR3sg" name="toString" method="_6Tl_kGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DJIx2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DJIy2UsEe6bAesDIgR3sg" name="createFileNameTemplate" visibility="private" method="_6Tl_mGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz8mUsEe6bAesDIgR3sg">
                  <body>&#xD;
   * Creates a file name template based on the outputDirectory and FileName. &#xD;
   * @param outputDirectory&#xD;
   * @return fileNameTemplate</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DJIzGUsEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DJIzWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6SE8oWUsEe6bAesDIgR3sg" name="VisualizationImplementation" method="_6TlYoGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6SE8pWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6SE8pmUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6Tyz7mUsEe6bAesDIgR3sg">
                  <body>@param warp&#xD;
@param outputDirectory&#xD;
@param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SE8omUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SE8o2UsEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SE8pGUsEe6bAesDIgR3sg" name="choice" type="_6SEVkGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SFjsGUsEe6bAesDIgR3sg" type="_6DH6oGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SGKwWUsEe6bAesDIgR3sg" name="VisualizationImplementation" method="_6TlYpWUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6SGKxWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6SHY4GUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6Tyz72UsEe6bAesDIgR3sg">
                  <body>@param WorkLoad&#xD;
@param outputDirectory&#xD;
@param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SGKwmUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SGKw2UsEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SGKxGUsEe6bAesDIgR3sg" name="choice" type="_6SFjsWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SHY4WUsEe6bAesDIgR3sg" type="_6DH6oGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SHY4mUsEe6bAesDIgR3sg" name="createVisualization" visibility="private" method="_6Tl_kmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz8GUsEe6bAesDIgR3sg">
                  <body>Create visualizations based on SystemChoices.&#xD;
   * The visualization is created by enumerating the SystemChoices.&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SHY42UsEe6bAesDIgR3sg" name="choice" type="_6SEVkGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SH_8GUsEe6bAesDIgR3sg" name="createVisualization" visibility="private" method="_6Tl_lGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz8WUsEe6bAesDIgR3sg">
                  <body>Create visualization based off WorkLoadChoices.&#xD;
  * &#xD;
  * @param The choice of the visualization for the workload.</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SH_8WUsEe6bAesDIgR3sg" name="choice" type="_6SFjsWUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SH_8mUsEe6bAesDIgR3sg" name="createVisualization" visibility="private" method="_6Tl_lmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SH_82UsEe6bAesDIgR3sg" name="obj" type="_6RqF4GUsEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6DKW4GUsEe6bAesDIgR3sg" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_6Tyz82UsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@author srgoddard (for java doc comments)&#xD;
@version 1.5&#xD;
 *&#xD;
 *Visualizes the information of the node into a readable name with the needed information.&#xD;
 *Includes faults and schedule name.&#xD;
 *Contains:&#xD;
 *nameExtension()&#xD;
 *displayVisualization()&#xD;
 *fileVisualization()&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6TFpQGUsEe6bAesDIgR3sg" name="fm" visibility="private" type="_6Cj58mUsEe6bAesDIgR3sg" association="_6UD5oWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TFpQmUsEe6bAesDIgR3sg" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TFpRGUsEe6bAesDIgR3sg" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TFpRmUsEe6bAesDIgR3sg" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TFpR2UsEe6bAesDIgR3sg" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TFpSGUsEe6bAesDIgR3sg" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TFpSWUsEe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tl_m2UsEe6bAesDIgR3sg" name="VisualizationObject" specification="_6QOigGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tl_nGUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tl_nWUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tl_nmUsEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tl_n2UsEe6bAesDIgR3sg" type="_6DKW4GUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tl_oGUsEe6bAesDIgR3sg" name="VisualizationObject" specification="_6QPJlWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tl_oWUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tl_omUsEe6bAesDIgR3sg" name="warp" type="_6DBM8mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tl_o2UsEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tl_pGUsEe6bAesDIgR3sg" type="_6DKW4GUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tl_pWUsEe6bAesDIgR3sg" name="VisualizationObject" specification="_6QPwomUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tl_pmUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tl_p2UsEe6bAesDIgR3sg" name="warp" type="_6DBM8mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tl_qGUsEe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tl_qWUsEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tl_qmUsEe6bAesDIgR3sg" type="_6DKW4GUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tl_q2UsEe6bAesDIgR3sg" name="VisualizationObject" specification="_6QQXsGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tl_rGUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tl_rWUsEe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tl_rmUsEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tl_r2UsEe6bAesDIgR3sg" type="_6DKW4GUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tl_sGUsEe6bAesDIgR3sg" name="nameExtension" specification="_6SJ1IGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tl_sWUsEe6bAesDIgR3sg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tl_smUsEe6bAesDIgR3sg" name="m" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tl_s2UsEe6bAesDIgR3sg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tl_tGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tl_tWUsEe6bAesDIgR3sg" name="nameExtension" specification="_6DK98GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tl_tmUsEe6bAesDIgR3sg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tl_t2UsEe6bAesDIgR3sg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tl_uGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tl_uWUsEe6bAesDIgR3sg" name="getFileManager" specification="_6DK99GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tl_umUsEe6bAesDIgR3sg" type="_6Cj58mUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TmmoGUsEe6bAesDIgR3sg" name="visualization" specification="_6DK99WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TmmoWUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TmmomUsEe6bAesDIgR3sg" name="createFile" specification="_6DK99mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tmmo2UsEe6bAesDIgR3sg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TmmpGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TmmpWUsEe6bAesDIgR3sg" name="fileVisualization" specification="_6DK9-WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TmmpmUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tmmp2UsEe6bAesDIgR3sg" name="displayVisualization" specification="_6DK9-mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TmmqGUsEe6bAesDIgR3sg" type="_6CpZgGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TmmqWUsEe6bAesDIgR3sg" name="createHeader" specification="_6DLlAGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TmmqmUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tmmq2UsEe6bAesDIgR3sg" name="createFooter" specification="_6DLlAWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TmmrGUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TmmrWUsEe6bAesDIgR3sg" name="createColumnHeader" specification="_6DLlAmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TmmrmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6Tmmr2UsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TmmsGUsEe6bAesDIgR3sg" name="createVisualizationData" specification="_6DLlBmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TmmsWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TmmsmUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6DK98GUsEe6bAesDIgR3sg" name="nameExtension" visibility="private" method="_6Tl_tWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz-WUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * This method is used to attach the faults of each node to the name of the same node.&#xD;
  * @param extension formats the input data into a readable format</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DK98WUsEe6bAesDIgR3sg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DK98mUsEe6bAesDIgR3sg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DK982UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DK99GUsEe6bAesDIgR3sg" name="getFileManager" method="_6Tl_uWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz-mUsEe6bAesDIgR3sg">
                  <body>&#xD;
   * @return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QQXt2UsEe6bAesDIgR3sg" type="_6Cj58mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DK99WUsEe6bAesDIgR3sg" name="visualization" method="_6TmmoGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz-2UsEe6bAesDIgR3sg">
                  <body>&#xD;
  * This method is the initial step to visualize the data in a readible format.&#xD;
  * @param content is created to be used as a description to hold the new ColumnHeader() and data&#xD;
  * @param data is used to hold NULL through the createVisualizationData() method which returns NULL&#xD;
  * @return content</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QQXuGUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DK99mUsEe6bAesDIgR3sg" name="createFile" method="_6TmmomUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz_GUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * Method creates the file name by adding the extension and suffix.&#xD;
  * @return fm.createFile() which calls itself to create the file as a fileNameTemplate</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DK992UsEe6bAesDIgR3sg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DK9-GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DK9-WUsEe6bAesDIgR3sg" name="fileVisualization" method="_6TmmpWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz_WUsEe6bAesDIgR3sg">
                  <body>*&#xD;
  * Method is the final step to combine the header/data and footer together and returns fileContent.&#xD;
  * @param fileContent is created to contain all the data for nodes into a readible format</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QQXuWUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DK9-mUsEe6bAesDIgR3sg" name="displayVisualization" method="_6Tmmp2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz_mUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * @return null</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QQXumUsEe6bAesDIgR3sg" type="_6CpZgGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DLlAGUsEe6bAesDIgR3sg" name="createHeader" visibility="protected" method="_6TmmqWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz_2UsEe6bAesDIgR3sg">
                  <body>&#xD;
  * @return new Description header</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QQXu2UsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DLlAWUsEe6bAesDIgR3sg" name="createFooter" visibility="protected" method="_6Tmmq2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Ty0AGUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * @return new Description footer</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QQXvGUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DLlAmUsEe6bAesDIgR3sg" name="createColumnHeader" visibility="protected" method="_6TmmrWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Ty0AWUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * @return NOT_IMPLEMENTED</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DLlA2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6DLlBGUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DLlBmUsEe6bAesDIgR3sg" name="createVisualizationData" visibility="protected" method="_6TmmsGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Ty0AmUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * @return visualizationData which is not implemented and returns null</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DLlB2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6DLlCGUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QOigGUsEe6bAesDIgR3sg" name="VisualizationObject" visibility="package" method="_6Tl_m2UsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6QPJkmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6QPJk2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6Tyz9GUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * Class Object that links together the filemanager with the workload and suffix.&#xD;
  * @param nameExtension is the string variable to be added onto the name of the node&#xD;
  * @param suffix is the&#xD;
  *</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QOigWUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QPJkGUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QPJkWUsEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QPJlGUsEe6bAesDIgR3sg" type="_6DKW4GUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QPJlWUsEe6bAesDIgR3sg" name="VisualizationObject" visibility="package" method="_6Tl_oGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6QPJmWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6QPwoGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6Tyz9WUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * Class object that links together the filemanager to the specific node warp attributes and suffix.</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QPJlmUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QPJl2UsEe6bAesDIgR3sg" name="warp" type="_6DBM8mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QPJmGUsEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QPwoWUsEe6bAesDIgR3sg" type="_6DKW4GUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QPwomUsEe6bAesDIgR3sg" name="VisualizationObject" visibility="package" method="_6Tl_pWUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6QPwp2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6QPwqGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6Tyz9mUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * Class object to manage any faults that are attached to the nodes.</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QPwo2UsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QPwpGUsEe6bAesDIgR3sg" name="warp" type="_6DBM8mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QPwpWUsEe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QPwpmUsEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QPwqWUsEe6bAesDIgR3sg" type="_6DKW4GUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QQXsGUsEe6bAesDIgR3sg" name="VisualizationObject" visibility="package" method="_6Tl_q2UsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6QQXtGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6QQXtWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6Tyz92UsEe6bAesDIgR3sg">
                  <body>*&#xD;
  * Class object of managing the file for each node</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QQXsWUsEe6bAesDIgR3sg" name="fm" type="_6Cj58mUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QQXsmUsEe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QQXs2UsEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QQXtmUsEe6bAesDIgR3sg" type="_6DKW4GUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SJ1IGUsEe6bAesDIgR3sg" name="nameExtension" visibility="private" method="_6Tl_sGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tyz-GUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * This method is used to attach the data of the node to the schedule name of the nodes.</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SJ1IWUsEe6bAesDIgR3sg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SJ1ImUsEe6bAesDIgR3sg" name="m" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SJ1I2UsEe6bAesDIgR3sg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SJ1JGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6DMzIGUsEe6bAesDIgR3sg" name="Warp">
              <ownedComment xmi:id="_6Ty0A2UsEe6bAesDIgR3sg">
                <body>&#xD;
@author Frank Forliano (of java doc comments)&#xD;
@author Steve Goddard&#xD;
@version 1.5&#xD;
&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6TGQUGUsEe6bAesDIgR3sg" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TGQUWUsEe6bAesDIgR3sg" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TGQUmUsEe6bAesDIgR3sg" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_6R3hQGUsEe6bAesDIgR3sg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TGQU2UsEe6bAesDIgR3sg" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TGQVGUsEe6bAesDIgR3sg" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_6R3hQGUsEe6bAesDIgR3sg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TGQVWUsEe6bAesDIgR3sg" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TGQVmUsEe6bAesDIgR3sg" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TGQV2UsEe6bAesDIgR3sg" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TGQWGUsEe6bAesDIgR3sg" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_6DBM82UsEe6bAesDIgR3sg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TGQWWUsEe6bAesDIgR3sg" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TGQWmUsEe6bAesDIgR3sg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TGQW2UsEe6bAesDIgR3sg" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TGQXGUsEe6bAesDIgR3sg" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TG3YWUsEe6bAesDIgR3sg" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TG3Y2UsEe6bAesDIgR3sg" name="minLQ" visibility="private" isStatic="true" type="_6R3hQGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TG3ZWUsEe6bAesDIgR3sg" name="e2e" visibility="private" isStatic="true" type="_6R3hQGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TG3Z2UsEe6bAesDIgR3sg" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TG3aWUsEe6bAesDIgR3sg" name="guiRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TG3a2UsEe6bAesDIgR3sg" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6THecWUsEe6bAesDIgR3sg" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6THec2UsEe6bAesDIgR3sg" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6THedWUsEe6bAesDIgR3sg" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6THed2UsEe6bAesDIgR3sg" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6THeeWUsEe6bAesDIgR3sg" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6THee2UsEe6bAesDIgR3sg" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TIFgWUsEe6bAesDIgR3sg" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TIFg2UsEe6bAesDIgR3sg" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TIFhGUsEe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TIFhmUsEe6bAesDIgR3sg" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TIFiGUsEe6bAesDIgR3sg" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TIFimUsEe6bAesDIgR3sg" name="schedulerSelected" visibility="private" isStatic="true" type="_6DBM82UsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tmms2UsEe6bAesDIgR3sg" name="main" specification="_6DNaMGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TmmtGUsEe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TmmtWUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TmmtmUsEe6bAesDIgR3sg" name="visualize" specification="_6QSz8GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tmmt2UsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TmmuGUsEe6bAesDIgR3sg" name="choice" type="_6DEQSmUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TmmuWUsEe6bAesDIgR3sg" name="visualize" specification="_6QSz82UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TmmumUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tmmu2UsEe6bAesDIgR3sg" name="choice" type="_6DEQQWUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TmmvGUsEe6bAesDIgR3sg" name="verifyPerformanceRequirements" specification="_6QTbAGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TmmvWUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TmmvmUsEe6bAesDIgR3sg" name="verifyReliabilities" specification="_6QTbAmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tmmv2UsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNsGUsEe6bAesDIgR3sg" name="verifyDeadlines" specification="_6QTbBGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TnNsWUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNsmUsEe6bAesDIgR3sg" name="verifyNoChannelConflicts" specification="_6QTbBmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TnNs2UsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNtGUsEe6bAesDIgR3sg" name="setWarpParameters" specification="_6DNaM2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TnNtWUsEe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TnNtmUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNt2UsEe6bAesDIgR3sg" name="printWarpParameters" specification="_6DNaN2UsEe6bAesDIgR3sg">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6DNaMGUsEe6bAesDIgR3sg" name="main" isStatic="true" method="_6Tmms2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DNaMWUsEe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6DNaMmUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DNaM2UsEe6bAesDIgR3sg" name="setWarpParameters" visibility="private" isStatic="true" method="_6TnNtGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DNaNGUsEe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6DNaNWUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DNaN2UsEe6bAesDIgR3sg" name="printWarpParameters" visibility="private" isStatic="true" method="_6TnNt2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tza9mUsEe6bAesDIgR3sg">
                  <body>Print parameters of the Warp System.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_6QSz8GUsEe6bAesDIgR3sg" name="visualize" visibility="private" isStatic="true" method="_6TmmtmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tza8GUsEe6bAesDIgR3sg">
                  <body>Visualizes the given workload choice.&#xD;
   * &#xD;
   * @param workLoad The workload to visualize&#xD;
   * @param choice The choice of visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QSz8WUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QSz8mUsEe6bAesDIgR3sg" name="choice" type="_6DEQSmUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QSz82UsEe6bAesDIgR3sg" name="visualize" visibility="private" isStatic="true" method="_6TmmuWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tza8WUsEe6bAesDIgR3sg">
                  <body>Visualizes the data from the warp network flow.&#xD;
   * @param warp&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QSz9GUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QSz9WUsEe6bAesDIgR3sg" name="choice" type="_6DEQQWUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QTbAGUsEe6bAesDIgR3sg" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_6TmmvGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tza8mUsEe6bAesDIgR3sg">
                  <body>Verifies performance requirements of the warp system&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QTbAWUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QTbAmUsEe6bAesDIgR3sg" name="verifyReliabilities" visibility="private" isStatic="true" method="_6TmmvmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tza82UsEe6bAesDIgR3sg">
                  <body>Verifies the reliabilities of the WARP module&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QTbA2UsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QTbBGUsEe6bAesDIgR3sg" name="verifyDeadlines" visibility="private" isStatic="true" method="_6TnNsGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tza9GUsEe6bAesDIgR3sg">
                  <body>Verify the deadlines of the given warp system&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QTbBWUsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QTbBmUsEe6bAesDIgR3sg" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_6TnNsmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tza9WUsEe6bAesDIgR3sg">
                  <body>Verify if there is not any channel conflicts&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QTbB2UsEe6bAesDIgR3sg" name="warp" type="_6C7taWUsEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6DPPYGUsEe6bAesDIgR3sg" name="WarpDSL">
              <ownedComment xmi:id="_6Tza92UsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6TIskGUsEe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TIskWUsEe6bAesDIgR3sg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TIskmUsEe6bAesDIgR3sg" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TIsk2UsEe6bAesDIgR3sg" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TIslGUsEe6bAesDIgR3sg" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TIslWUsEe6bAesDIgR3sg" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNyGUsEe6bAesDIgR3sg" name="getInstructionParameters" specification="_6DREkWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TnNyWUsEe6bAesDIgR3sg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TnNymUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6DREkWUsEe6bAesDIgR3sg" name="getInstructionParameters" method="_6TnNyGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DREkmUsEe6bAesDIgR3sg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SLqUGUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_6DP2cGUsEe6bAesDIgR3sg" name="InstructionParameters">
                <ownedAttribute xmi:id="_6TIslmUsEe6bAesDIgR3sg" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TIsl2UsEe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_6TIsmGUsEe6bAesDIgR3sg" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TIsmWUsEe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_6TIsmmUsEe6bAesDIgR3sg" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TIsm2UsEe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_6TIsnGUsEe6bAesDIgR3sg" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TIsnWUsEe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_6TJToGUsEe6bAesDIgR3sg" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TJToWUsEe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_6TJTomUsEe6bAesDIgR3sg" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TJTo2UsEe6bAesDIgR3sg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_6TJTpWUsEe6bAesDIgR3sg" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TJTpmUsEe6bAesDIgR3sg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNuGUsEe6bAesDIgR3sg" name="getCoordinator" specification="_6DQdgGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TnNuWUsEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNumUsEe6bAesDIgR3sg" name="setCoordinator" specification="_6DQdgmUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TnNu2UsEe6bAesDIgR3sg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNvGUsEe6bAesDIgR3sg" name="setName" specification="_6DQdhGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TnNvWUsEe6bAesDIgR3sg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNvmUsEe6bAesDIgR3sg" name="setFlow" specification="_6DQdhmUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TnNv2UsEe6bAesDIgR3sg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNwGUsEe6bAesDIgR3sg" name="setSrc" specification="_6DQdiGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TnNwWUsEe6bAesDIgR3sg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNwmUsEe6bAesDIgR3sg" name="setSnk" specification="_6DQdimUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TnNw2UsEe6bAesDIgR3sg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNxGUsEe6bAesDIgR3sg" name="setChannel" specification="_6DQdjGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TnNxWUsEe6bAesDIgR3sg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNxmUsEe6bAesDIgR3sg" name="unused" specification="_6DQdjmUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TnNx2UsEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_6DQdgGUsEe6bAesDIgR3sg" name="getCoordinator" method="_6TnNuGUsEe6bAesDIgR3sg">
                  <ownedComment xmi:id="_6Tza-GUsEe6bAesDIgR3sg">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_6DQdgWUsEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_6DQdgmUsEe6bAesDIgR3sg" name="setCoordinator" method="_6TnNumUsEe6bAesDIgR3sg">
                  <ownedComment xmi:id="_6Tza-WUsEe6bAesDIgR3sg">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_6DQdg2UsEe6bAesDIgR3sg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_6DQdhGUsEe6bAesDIgR3sg" name="setName" visibility="private" method="_6TnNvGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6DQdhWUsEe6bAesDIgR3sg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_6DQdhmUsEe6bAesDIgR3sg" name="setFlow" visibility="private" method="_6TnNvmUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6DQdh2UsEe6bAesDIgR3sg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_6DQdiGUsEe6bAesDIgR3sg" name="setSrc" visibility="private" method="_6TnNwGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6DQdiWUsEe6bAesDIgR3sg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_6DQdimUsEe6bAesDIgR3sg" name="setSnk" visibility="private" method="_6TnNwmUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6DQdi2UsEe6bAesDIgR3sg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_6DQdjGUsEe6bAesDIgR3sg" name="setChannel" visibility="private" method="_6TnNxGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6DQdjWUsEe6bAesDIgR3sg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_6DQdjmUsEe6bAesDIgR3sg" name="unused" method="_6TnNxmUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6DREkGUsEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_6DRElGUsEe6bAesDIgR3sg" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_6SMRYmUsEe6bAesDIgR3sg" general="_6SLqUWUsEe6bAesDIgR3sg"/>
                <ownedAttribute xmi:id="_6TJTp2UsEe6bAesDIgR3sg" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_6TJTqWUsEe6bAesDIgR3sg" name="instructionParametersArrayList" visibility="package" type="_6PSHUGUsEe6bAesDIgR3sg" association="_6UD5pGUsEe6bAesDIgR3sg"/>
                <ownedAttribute xmi:id="_6TJ6smUsEe6bAesDIgR3sg" name="instructionParameters" visibility="package" type="_6DP2cGUsEe6bAesDIgR3sg" association="_6UD5p2UsEe6bAesDIgR3sg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNy2UsEe6bAesDIgR3sg" name="ListenerDsl" specification="_6DRroGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TnNzGUsEe6bAesDIgR3sg" type="_6DRElGUsEe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TnNzWUsEe6bAesDIgR3sg" name="getInstructionParameters" specification="_6DRrpGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6TnNzmUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tn0wGUsEe6bAesDIgR3sg" name="enterAction" specification="_6QVQMmUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6Tn0wWUsEe6bAesDIgR3sg" name="ctx" type="_6QVQMGUsEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tn0wmUsEe6bAesDIgR3sg" name="exitAction" specification="_6QV3QGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6Tn0w2UsEe6bAesDIgR3sg" name="ctx" type="_6QVQMGUsEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tn0xGUsEe6bAesDIgR3sg" name="exitFlowName" specification="_6QV3R2UsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6Tn0xWUsEe6bAesDIgR3sg" name="ctx" type="_6QV3RWUsEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tn0xmUsEe6bAesDIgR3sg" name="exitCmd" specification="_6QWeVGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6Tn0x2UsEe6bAesDIgR3sg" name="ctx" type="_6QWeUmUsEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tn0yGUsEe6bAesDIgR3sg" name="exitSrcNode" specification="_6QXFYWUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6Tn0yWUsEe6bAesDIgR3sg" name="ctx" type="_6QWeWWUsEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tn0ymUsEe6bAesDIgR3sg" name="exitSnkNode" specification="_6QXFaGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6Tn0y2UsEe6bAesDIgR3sg" name="ctx" type="_6QXFZmUsEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tn0zGUsEe6bAesDIgR3sg" name="exitChannel" specification="_6QXsdWUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6Tn0zWUsEe6bAesDIgR3sg" name="ctx" type="_6QXsc2UsEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_6DRroGUsEe6bAesDIgR3sg" name="ListenerDsl" visibility="package" method="_6TnNy2UsEe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_6DRroWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_6DRromUsEe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_6DRro2UsEe6bAesDIgR3sg" type="_6DRElGUsEe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_6DRrpGUsEe6bAesDIgR3sg" name="getInstructionParameters" method="_6TnNzWUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6SMRYWUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_6QVQMmUsEe6bAesDIgR3sg" name="enterAction" method="_6Tn0wGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6QVQM2UsEe6bAesDIgR3sg" name="ctx" type="_6QVQMGUsEe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_6QV3QGUsEe6bAesDIgR3sg" name="exitAction" method="_6Tn0wmUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6QV3QWUsEe6bAesDIgR3sg" name="ctx" type="_6QVQMGUsEe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_6QV3R2UsEe6bAesDIgR3sg" name="exitFlowName" method="_6Tn0xGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6QV3SGUsEe6bAesDIgR3sg" name="ctx" type="_6QV3RWUsEe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_6QWeVGUsEe6bAesDIgR3sg" name="exitCmd" method="_6Tn0xmUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6QWeVWUsEe6bAesDIgR3sg" name="ctx" type="_6QWeUmUsEe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_6QXFYWUsEe6bAesDIgR3sg" name="exitSrcNode" method="_6Tn0yGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6QXFYmUsEe6bAesDIgR3sg" name="ctx" type="_6QWeWWUsEe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_6QXFaGUsEe6bAesDIgR3sg" name="exitSnkNode" method="_6Tn0ymUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6QXFaWUsEe6bAesDIgR3sg" name="ctx" type="_6QXFZmUsEe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_6QXsdWUsEe6bAesDIgR3sg" name="exitChannel" method="_6Tn0zGUsEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_6QXsdmUsEe6bAesDIgR3sg" name="ctx" type="_6QXsc2UsEe6bAesDIgR3sg"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6DTg0GUsEe6bAesDIgR3sg" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_6TKhwGUsEe6bAesDIgR3sg" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TKhwWUsEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TKhwmUsEe6bAesDIgR3sg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TKhw2UsEe6bAesDIgR3sg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TKhxGUsEe6bAesDIgR3sg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TKhxWUsEe6bAesDIgR3sg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TKhxmUsEe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TKhx2UsEe6bAesDIgR3sg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TKhyGUsEe6bAesDIgR3sg" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TKhyWUsEe6bAesDIgR3sg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TKhymUsEe6bAesDIgR3sg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TKhzGUsEe6bAesDIgR3sg" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TKhzWUsEe6bAesDIgR3sg" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TLI0GUsEe6bAesDIgR3sg" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TLI0WUsEe6bAesDIgR3sg" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TLI02UsEe6bAesDIgR3sg" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TLI1WUsEe6bAesDIgR3sg" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TLI12UsEe6bAesDIgR3sg" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TLI2GUsEe6bAesDIgR3sg" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TLI2WUsEe6bAesDIgR3sg" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TLI2mUsEe6bAesDIgR3sg" name="predecessor" type="_6DTg0GUsEe6bAesDIgR3sg" association="_6Tza-mUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TLv4GUsEe6bAesDIgR3sg" name="endTimes" visibility="private" type="_6C3b9mUsEe6bAesDIgR3sg" association="_6UD5qmUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TLv42UsEe6bAesDIgR3sg" name="subObjects" type="_6QbW0GUsEe6bAesDIgR3sg" isReadOnly="true" association="_6UD5rWUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tn0zmUsEe6bAesDIgR3sg" name="SchedulableObject" specification="_6DUH4GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tn0z2UsEe6bAesDIgR3sg" type="_6DTg0GUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tn00GUsEe6bAesDIgR3sg" name="SchedulableObject" specification="_6Qck8GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tn00WUsEe6bAesDIgR3sg" name="obj" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tn00mUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tn002UsEe6bAesDIgR3sg" type="_6DTg0GUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tn01GUsEe6bAesDIgR3sg" name="SchedulableObject" specification="_6DUH5GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tn01WUsEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tn01mUsEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tn012UsEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tn02GUsEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tn02WUsEe6bAesDIgR3sg" type="_6DTg0GUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tn02mUsEe6bAesDIgR3sg" name="SchedulableObject" specification="_6DUu8GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tn022UsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tn03GUsEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tn03WUsEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tn03mUsEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tn032UsEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tn04GUsEe6bAesDIgR3sg" type="_6DTg0GUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob0GUsEe6bAesDIgR3sg" name="setDefaultParameters" specification="_6DUu-WUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob0WUsEe6bAesDIgR3sg" name="getAllEndTimes" specification="_6DUu-mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob0mUsEe6bAesDIgR3sg" type="_6C3b9mUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob02UsEe6bAesDIgR3sg" name="addToEndTimes" specification="_6DUu_GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob1GUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob1WUsEe6bAesDIgR3sg" name="peekEndTimes" specification="_6DVWAGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob1mUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob12UsEe6bAesDIgR3sg" name="pollEndTimes" specification="_6DVWAmUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob2GUsEe6bAesDIgR3sg" name="addSubObject" specification="_6Qck92UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob2WUsEe6bAesDIgR3sg" name="obj" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob2mUsEe6bAesDIgR3sg" name="getName" specification="_6DVWA2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob22UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob3GUsEe6bAesDIgR3sg" name="setName" specification="_6DVWBWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob3WUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob3mUsEe6bAesDIgR3sg" name="getReleaseTime" specification="_6DVWB2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob32UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob4GUsEe6bAesDIgR3sg" name="getPhase" specification="_6DVWCWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob4WUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob4mUsEe6bAesDIgR3sg" name="getStartTime" specification="_6DVWC2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob42UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob5GUsEe6bAesDIgR3sg" name="setEndTime" specification="_6DVWDWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob5WUsEe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob5mUsEe6bAesDIgR3sg" name="setStartTime" specification="_6DV9EGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob52UsEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob6GUsEe6bAesDIgR3sg" name="setReleaseTime" specification="_6DV9EmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob6WUsEe6bAesDIgR3sg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob6mUsEe6bAesDIgR3sg" name="setPeriod" specification="_6DV9FGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob62UsEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob7GUsEe6bAesDIgR3sg" name="setPhase" specification="_6DV9FmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob7WUsEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob7mUsEe6bAesDIgR3sg" name="setNextReleaseTime" specification="_6DV9GGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob72UsEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob8GUsEe6bAesDIgR3sg" name="maxPhaseComparison" specification="_6QdMAGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob8WUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tob8mUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob82UsEe6bAesDIgR3sg" name="maxPhaseComparison" specification="_6QdMA2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob9GUsEe6bAesDIgR3sg" name="obj1" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tob9WUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tob9mUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob92UsEe6bAesDIgR3sg" name="deadlineComparison" specification="_6QdMB2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob-GUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tob-WUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob-mUsEe6bAesDIgR3sg" name="deadlineComparison" specification="_6QdzEWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob-2UsEe6bAesDIgR3sg" name="obj1" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tob_GUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tob_WUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tob_mUsEe6bAesDIgR3sg" name="periodComparison" specification="_6QdzFWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tob_2UsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TocAGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpC4GUsEe6bAesDIgR3sg" name="periodComparison" specification="_6QdzGGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpC4WUsEe6bAesDIgR3sg" name="obj1" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TpC4mUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TpC42UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpC5GUsEe6bAesDIgR3sg" name="priorityComparison" specification="_6QeaI2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpC5WUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TpC5mUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpC52UsEe6bAesDIgR3sg" name="priorityComparison" specification="_6QeaJmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpC6GUsEe6bAesDIgR3sg" name="obj1" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TpC6WUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TpC6mUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpC62UsEe6bAesDIgR3sg" name="releaseTimeComparison" specification="_6QfBMGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpC7GUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TpC7WUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpC7mUsEe6bAesDIgR3sg" name="releaseTimeComparison" specification="_6QfBM2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpC72UsEe6bAesDIgR3sg" name="obj1" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TpC8GUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TpC8WUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpC8mUsEe6bAesDIgR3sg" name="LatestReleaseTimeComparison" specification="_6QfBN2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpC82UsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TpC9GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpC9WUsEe6bAesDIgR3sg" name="LatestReleaseTimeComparison" specification="_6QfoQGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpC9mUsEe6bAesDIgR3sg" name="obj1" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TpC92UsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TpC-GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpC-WUsEe6bAesDIgR3sg" name="compareAscendingOrder" specification="_6DWkIGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpC-mUsEe6bAesDIgR3sg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpC-2UsEe6bAesDIgR3sg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpC_GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpC_WUsEe6bAesDIgR3sg" name="compareDescendingOrder" specification="_6DWkJGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpC_mUsEe6bAesDIgR3sg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpC_2UsEe6bAesDIgR3sg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpDAGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpDAWUsEe6bAesDIgR3sg" name="print" specification="_6DWkKGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpDAmUsEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpDA2UsEe6bAesDIgR3sg" name="print" specification="_6DXLMGUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6DUH4GUsEe6bAesDIgR3sg" name="SchedulableObject" visibility="package" method="_6Tn0zmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6DUH4WUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6DUH4mUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6DUH42UsEe6bAesDIgR3sg" type="_6DTg0GUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DUH5GUsEe6bAesDIgR3sg" name="SchedulableObject" visibility="package" method="_6Tn01GUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6DUH6WUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6DUH6mUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6DUH5WUsEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DUH5mUsEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DUH52UsEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DUH6GUsEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DUH62UsEe6bAesDIgR3sg" type="_6DTg0GUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DUu8GUsEe6bAesDIgR3sg" name="SchedulableObject" visibility="package" method="_6Tn02mUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6DUu9mUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6DUu92UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6DUu8WUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DUu8mUsEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DUu82UsEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DUu9GUsEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DUu9WUsEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DUu-GUsEe6bAesDIgR3sg" type="_6DTg0GUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DUu-WUsEe6bAesDIgR3sg" name="setDefaultParameters" visibility="private" method="_6Tob0GUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6DUu-mUsEe6bAesDIgR3sg" name="getAllEndTimes" method="_6Tob0WUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tza_WUsEe6bAesDIgR3sg">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Qck9mUsEe6bAesDIgR3sg" type="_6C3b9mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DUu_GUsEe6bAesDIgR3sg" name="addToEndTimes" method="_6Tob02UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DUu_WUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DVWAGUsEe6bAesDIgR3sg" name="peekEndTimes" method="_6Tob1WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DVWAWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DVWAmUsEe6bAesDIgR3sg" name="pollEndTimes" method="_6Tob12UsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6DVWA2UsEe6bAesDIgR3sg" name="getName" method="_6Tob2mUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tza_mUsEe6bAesDIgR3sg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DVWBGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DVWBWUsEe6bAesDIgR3sg" name="setName" method="_6Tob3GUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6Tza_2UsEe6bAesDIgR3sg">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DVWBmUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DVWB2UsEe6bAesDIgR3sg" name="getReleaseTime" method="_6Tob3mUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TzbAGUsEe6bAesDIgR3sg">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DVWCGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DVWCWUsEe6bAesDIgR3sg" name="getPhase" method="_6Tob4GUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TzbAWUsEe6bAesDIgR3sg">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DVWCmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DVWC2UsEe6bAesDIgR3sg" name="getStartTime" method="_6Tob4mUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TzbAmUsEe6bAesDIgR3sg">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DVWDGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DVWDWUsEe6bAesDIgR3sg" name="setEndTime" method="_6Tob5GUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TzbA2UsEe6bAesDIgR3sg">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DVWDmUsEe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DV9EGUsEe6bAesDIgR3sg" name="setStartTime" method="_6Tob5mUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TzbBGUsEe6bAesDIgR3sg">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DV9EWUsEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DV9EmUsEe6bAesDIgR3sg" name="setReleaseTime" method="_6Tob6GUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TzbBWUsEe6bAesDIgR3sg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DV9E2UsEe6bAesDIgR3sg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DV9FGUsEe6bAesDIgR3sg" name="setPeriod" method="_6Tob6mUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TzbBmUsEe6bAesDIgR3sg">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DV9FWUsEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DV9FmUsEe6bAesDIgR3sg" name="setPhase" method="_6Tob7GUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TzbB2UsEe6bAesDIgR3sg">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DV9F2UsEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DV9GGUsEe6bAesDIgR3sg" name="setNextReleaseTime" method="_6Tob7mUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6TzbCGUsEe6bAesDIgR3sg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DV9GWUsEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DWkIGUsEe6bAesDIgR3sg" name="compareAscendingOrder" method="_6TpC-WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DWkIWUsEe6bAesDIgR3sg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DWkImUsEe6bAesDIgR3sg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DWkI2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DWkJGUsEe6bAesDIgR3sg" name="compareDescendingOrder" method="_6TpC_WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DWkJWUsEe6bAesDIgR3sg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DWkJmUsEe6bAesDIgR3sg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DWkJ2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DWkKGUsEe6bAesDIgR3sg" name="print" method="_6TpDAWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DWkKWUsEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DXLMGUsEe6bAesDIgR3sg" name="print" method="_6TpDA2UsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6Qck8GUsEe6bAesDIgR3sg" name="SchedulableObject" visibility="package" method="_6Tn00GUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6Qck82UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6Qck9GUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6Tza_GUsEe6bAesDIgR3sg">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Qck8WUsEe6bAesDIgR3sg" name="obj" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Qck8mUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Qck9WUsEe6bAesDIgR3sg" type="_6DTg0GUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Qck92UsEe6bAesDIgR3sg" name="addSubObject" method="_6Tob2GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Qck-GUsEe6bAesDIgR3sg" name="obj" type="_6DTg0GUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QdMAGUsEe6bAesDIgR3sg" name="maxPhaseComparison" method="_6Tob8GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QdMAWUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QdMAmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QdMA2UsEe6bAesDIgR3sg" name="maxPhaseComparison" method="_6Tob82UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QdMBGUsEe6bAesDIgR3sg" name="obj1" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QdMBWUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QdMBmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QdMB2UsEe6bAesDIgR3sg" name="deadlineComparison" method="_6Tob92UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QdMCGUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QdzEGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QdzEWUsEe6bAesDIgR3sg" name="deadlineComparison" method="_6Tob-mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QdzEmUsEe6bAesDIgR3sg" name="obj1" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QdzE2UsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QdzFGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QdzFWUsEe6bAesDIgR3sg" name="periodComparison" method="_6Tob_mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QdzFmUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QdzF2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QdzGGUsEe6bAesDIgR3sg" name="periodComparison" method="_6TpC4GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QeaIGUsEe6bAesDIgR3sg" name="obj1" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QeaIWUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QeaImUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QeaI2UsEe6bAesDIgR3sg" name="priorityComparison" method="_6TpC5GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QeaJGUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QeaJWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QeaJmUsEe6bAesDIgR3sg" name="priorityComparison" method="_6TpC52UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QeaJ2UsEe6bAesDIgR3sg" name="obj1" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QeaKGUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QeaKWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QfBMGUsEe6bAesDIgR3sg" name="releaseTimeComparison" method="_6TpC62UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QfBMWUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QfBMmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QfBM2UsEe6bAesDIgR3sg" name="releaseTimeComparison" method="_6TpC7mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QfBNGUsEe6bAesDIgR3sg" name="obj1" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QfBNWUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QfBNmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QfBN2UsEe6bAesDIgR3sg" name="LatestReleaseTimeComparison" method="_6TpC8mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QfBOGUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QfBOWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QfoQGUsEe6bAesDIgR3sg" name="LatestReleaseTimeComparison" method="_6TpC9WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QfoQWUsEe6bAesDIgR3sg" name="obj1" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QfoQmUsEe6bAesDIgR3sg" name="obj2" type="_6DTg0GUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QfoQ2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6DaOgGUsEe6bAesDIgR3sg" name="Program">
              <ownedComment xmi:id="_6T0CAGUsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@author Frank Forliano (for java doc comments)&#xD;
@author srgoddard (for java doc comments)&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6TMW8GUsEe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TMW8WUsEe6bAesDIgR3sg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TMW8mUsEe6bAesDIgR3sg" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TMW82UsEe6bAesDIgR3sg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TMW9GUsEe6bAesDIgR3sg" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TMW9WUsEe6bAesDIgR3sg" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TMW9mUsEe6bAesDIgR3sg" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TMW92UsEe6bAesDIgR3sg" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TMW-GUsEe6bAesDIgR3sg" name="workLoad" visibility="package" type="_6DqGIGUsEe6bAesDIgR3sg" association="_6UEgsWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TM-AWUsEe6bAesDIgR3sg" name="scheduleBuilt" visibility="package" type="_6C0_sGUsEe6bAesDIgR3sg" association="_6UEgtGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TM-A2UsEe6bAesDIgR3sg" name="SchedulerSelected" visibility="package" type="_6SPUsGUsEe6bAesDIgR3sg" association="_6UEgt2UsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TM-BWUsEe6bAesDIgR3sg" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TM-B2UsEe6bAesDIgR3sg" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TNlEWUsEe6bAesDIgR3sg" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TNlE2UsEe6bAesDIgR3sg" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TNlFWUsEe6bAesDIgR3sg" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TOMIGUsEe6bAesDIgR3sg" name="channelsAvailable" visibility="package" type="_6CZh4GUsEe6bAesDIgR3sg" association="_6UEgumUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TOMImUsEe6bAesDIgR3sg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TOMJGUsEe6bAesDIgR3sg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TOMJmUsEe6bAesDIgR3sg" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TOzMWUsEe6bAesDIgR3sg" name="deadlineMisses" visibility="private" type="_6ChdsGUsEe6bAesDIgR3sg" association="_6UFHwGUsEe6bAesDIgR3sg"/>
              <interfaceRealization xmi:id="_6QmV8GUsEe6bAesDIgR3sg" client="_6DaOgGUsEe6bAesDIgR3sg" supplier="_6DBM8mUsEe6bAesDIgR3sg" contract="_6DBM8mUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tpp8GUsEe6bAesDIgR3sg" name="Program" specification="_6SP7wWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tpp8WUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tpp8mUsEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tpp82UsEe6bAesDIgR3sg" name="choice" type="_6SPUsGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tpp9GUsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tpp9WUsEe6bAesDIgR3sg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tpp9mUsEe6bAesDIgR3sg" type="_6DaOgGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tpp92UsEe6bAesDIgR3sg" name="Program" specification="_6SQi0GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tpp-GUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tpp-WUsEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tpp-mUsEe6bAesDIgR3sg" name="choice" type="_6SPUsGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tpp-2UsEe6bAesDIgR3sg" type="_6DaOgGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tpp_GUsEe6bAesDIgR3sg" name="setDefaultParameters" specification="_6QnkEGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tpp_WUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tpp_mUsEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tpp_2UsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqAGUsEe6bAesDIgR3sg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpqAWUsEe6bAesDIgR3sg" name="toWorkLoad" specification="_6DbcoGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpqAmUsEe6bAesDIgR3sg" type="_6DqGIGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpqA2UsEe6bAesDIgR3sg" name="buildProgram" specification="_6SQi12UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpqBGUsEe6bAesDIgR3sg" name="choice" type="_6SPUsGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpqBWUsEe6bAesDIgR3sg" name="buildOriginalProgram" specification="_6DcDsGUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpqBmUsEe6bAesDIgR3sg" name="waitInstruction" specification="_6DcDsWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpqB2UsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqCGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpqCWUsEe6bAesDIgR3sg" name="elseWaitInstruction" specification="_6DcDtGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpqCmUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqC2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpqDGUsEe6bAesDIgR3sg" name="elsePullClause" specification="_6DcqwGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpqDWUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqDmUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqD2UsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqEGUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqEWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpqEmUsEe6bAesDIgR3sg" name="hasPushInstruction" specification="_6DcqxmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpqE2UsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqFGUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqFWUsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqFmUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqF2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpqGGUsEe6bAesDIgR3sg" name="pushInstruction" specification="_6DdR0GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpqGWUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqGmUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqG2UsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqHGUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqHWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpqHmUsEe6bAesDIgR3sg" name="getFirstChannelInInstruction" specification="_6DdR1mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpqH2UsEe6bAesDIgR3sg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqIGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TpqIWUsEe6bAesDIgR3sg" name="findNextAvailableInstructionTimeSlot" specification="_6QqnYGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TpqImUsEe6bAesDIgR3sg" name="schedule" type="_6C0_sGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TpqI2UsEe6bAesDIgR3sg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqJGUsEe6bAesDIgR3sg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqJWUsEe6bAesDIgR3sg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqJmUsEe6bAesDIgR3sg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqJ2UsEe6bAesDIgR3sg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TpqKGUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqKWUsEe6bAesDIgR3sg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TpqKmUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqK2UsEe6bAesDIgR3sg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqLGUsEe6bAesDIgR3sg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqLWUsEe6bAesDIgR3sg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqLmUsEe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqL2UsEe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TpqMGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRAGUsEe6bAesDIgR3sg" name="slotIsAvailable" specification="_6QrOcmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRAWUsEe6bAesDIgR3sg" name="currentInstructionTimeSlot" type="_6Cr1wGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TqRAmUsEe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TqRA2UsEe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TqRBGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRBWUsEe6bAesDIgR3sg" name="findNextAvailableChannel" specification="_6QrOd2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRBmUsEe6bAesDIgR3sg" name="schedule" type="_6C0_sGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TqRB2UsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TqRCGUsEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TqRCWUsEe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TqRCmUsEe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TqRC2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRDGUsEe6bAesDIgR3sg" name="selectPriority" specification="_6Dd44GUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRDWUsEe6bAesDIgR3sg" name="selectRM" specification="_6Dd44WUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRDmUsEe6bAesDIgR3sg" name="selectDM" specification="_6Dd44mUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRD2UsEe6bAesDIgR3sg" name="selectRtHART" specification="_6Dd442UsEe6bAesDIgR3sg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqREGUsEe6bAesDIgR3sg" name="setScheduleSelected" specification="_6SQi2WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqREWUsEe6bAesDIgR3sg" name="choice" type="_6SPUsGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqREmUsEe6bAesDIgR3sg" name="setSchedule" specification="_6Qr1g2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRE2UsEe6bAesDIgR3sg" name="schedule" type="_6C0_sGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRFGUsEe6bAesDIgR3sg" name="getSchedule" specification="_6Def8GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRFWUsEe6bAesDIgR3sg" type="_6C0_sGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRFmUsEe6bAesDIgR3sg" name="getSchedulerName" specification="_6Def8WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRF2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRGGUsEe6bAesDIgR3sg" name="getSchChoice" specification="_6Def9mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRGWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRGmUsEe6bAesDIgR3sg" name="getNumChannels" specification="_6DfHAGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRG2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRHGUsEe6bAesDIgR3sg" name="getNumTransmissions" specification="_6DfHBWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRHWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRHmUsEe6bAesDIgR3sg" name="getRealTimeHartFlag" specification="_6DfuEGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRH2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRIGUsEe6bAesDIgR3sg" name="setRealTimeHartFlag" specification="_6DfuEmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRIWUsEe6bAesDIgR3sg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRImUsEe6bAesDIgR3sg" name="getMinPacketReceptionRate" specification="_6DfuFGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRI2UsEe6bAesDIgR3sg" type="_6R3hQGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRJGUsEe6bAesDIgR3sg" name="getE2e" specification="_6DfuGGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRJWUsEe6bAesDIgR3sg" type="_6R3hQGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRJmUsEe6bAesDIgR3sg" name="getName" specification="_6DgVIGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRJ2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRKGUsEe6bAesDIgR3sg" name="getOptimizationFlag" specification="_6DgVJWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRKWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRKmUsEe6bAesDIgR3sg" name="deadlineMisses" specification="_6DgVKmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRK2UsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRLGUsEe6bAesDIgR3sg" name="getNumFaults" specification="_6DgVK2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRLWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TqRLmUsEe6bAesDIgR3sg" name="getNodeMapIndex" specification="_6Dg8NGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TqRL2UsEe6bAesDIgR3sg" type="_6PKLgGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6DbcoGUsEe6bAesDIgR3sg" name="toWorkLoad" method="_6TpqAWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CAWUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * @return workLoad</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QoLIGUsEe6bAesDIgR3sg" type="_6DqGIGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DcDsGUsEe6bAesDIgR3sg" name="buildOriginalProgram" method="_6TpqBWUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6DcDsWUsEe6bAesDIgR3sg" name="waitInstruction" visibility="private" method="_6TpqBmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DcDsmUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DcDs2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DcDtGUsEe6bAesDIgR3sg" name="elseWaitInstruction" visibility="private" method="_6TpqCWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DcDtWUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DcDtmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DcqwGUsEe6bAesDIgR3sg" name="elsePullClause" visibility="private" method="_6TpqDGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DcqwWUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DcqwmUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Dcqw2UsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DcqxGUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DcqxWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DcqxmUsEe6bAesDIgR3sg" name="hasPushInstruction" visibility="private" method="_6TpqEmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Dcqx2UsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DcqyGUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DcqyWUsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DcqymUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Dcqy2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DdR0GUsEe6bAesDIgR3sg" name="pushInstruction" visibility="private" method="_6TpqGGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DdR0WUsEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DdR0mUsEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DdR02UsEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DdR1GUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DdR1WUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DdR1mUsEe6bAesDIgR3sg" name="getFirstChannelInInstruction" visibility="private" method="_6TpqHmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DdR12UsEe6bAesDIgR3sg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DdR2GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dd44GUsEe6bAesDIgR3sg" name="selectPriority" method="_6TqRDGUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6Dd44WUsEe6bAesDIgR3sg" name="selectRM" method="_6TqRDWUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6Dd44mUsEe6bAesDIgR3sg" name="selectDM" method="_6TqRDmUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6Dd442UsEe6bAesDIgR3sg" name="selectRtHART" method="_6TqRD2UsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6Def8GUsEe6bAesDIgR3sg" name="getSchedule" method="_6TqRFGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CAmUsEe6bAesDIgR3sg">
                  <body>Returns the program schedule of the flows.&#xD;
   * @return scheduleBuilt</body>
                </ownedComment>
                <ownedParameter xmi:id="_6QsckGUsEe6bAesDIgR3sg" type="_6C0_sGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Def8WUsEe6bAesDIgR3sg" name="getSchedulerName" method="_6TqRFmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Def8mUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Def9mUsEe6bAesDIgR3sg" name="getSchChoice" method="_6TqRGGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Def92UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DfHAGUsEe6bAesDIgR3sg" name="getNumChannels" method="_6TqRGmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DfHAWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DfHBWUsEe6bAesDIgR3sg" name="getNumTransmissions" method="_6TqRHGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DfHBmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DfuEGUsEe6bAesDIgR3sg" name="getRealTimeHartFlag" visibility="private" method="_6TqRHmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DfuEWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DfuEmUsEe6bAesDIgR3sg" name="setRealTimeHartFlag" visibility="private" method="_6TqRIGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DfuE2UsEe6bAesDIgR3sg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DfuFGUsEe6bAesDIgR3sg" name="getMinPacketReceptionRate" method="_6TqRImUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SRJ4GUsEe6bAesDIgR3sg" type="_6R3hQGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DfuGGUsEe6bAesDIgR3sg" name="getE2e" method="_6TqRJGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SRJ4WUsEe6bAesDIgR3sg" type="_6R3hQGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DgVIGUsEe6bAesDIgR3sg" name="getName" method="_6TqRJmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DgVIWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DgVJWUsEe6bAesDIgR3sg" name="getOptimizationFlag" method="_6TqRKGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DgVJmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DgVKmUsEe6bAesDIgR3sg" name="deadlineMisses" method="_6TqRKmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QtqsGUsEe6bAesDIgR3sg" type="_6ChdsGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DgVK2UsEe6bAesDIgR3sg" name="getNumFaults" method="_6TqRLGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Dg8MGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dg8NGUsEe6bAesDIgR3sg" name="getNodeMapIndex" method="_6TqRLmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CA2UsEe6bAesDIgR3sg">
                  <body>Maps the names of the nodes to the respective indicies.&#xD;
   * @return A HashMap -> Keys = NODE NAMES // Values = Indicies in Schedule Table</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SRJ4mUsEe6bAesDIgR3sg" type="_6PKLgGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QnkEGUsEe6bAesDIgR3sg" name="setDefaultParameters" visibility="private" method="_6Tpp_GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QnkEWUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QnkEmUsEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QnkE2UsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QnkFGUsEe6bAesDIgR3sg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QqnYGUsEe6bAesDIgR3sg" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_6TpqIWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QqnYWUsEe6bAesDIgR3sg" name="schedule" type="_6C0_sGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QqnYmUsEe6bAesDIgR3sg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QqnY2UsEe6bAesDIgR3sg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QqnZGUsEe6bAesDIgR3sg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QqnZWUsEe6bAesDIgR3sg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QqnZmUsEe6bAesDIgR3sg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6QrOcGUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QqnZ2UsEe6bAesDIgR3sg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6QrOcWUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QqnaGUsEe6bAesDIgR3sg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QqnaWUsEe6bAesDIgR3sg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QqnamUsEe6bAesDIgR3sg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Qqna2UsEe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QqnbGUsEe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QqnbWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QrOcmUsEe6bAesDIgR3sg" name="slotIsAvailable" visibility="private" method="_6TqRAGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QrOc2UsEe6bAesDIgR3sg" name="currentInstructionTimeSlot" type="_6Cr1wGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QrOdGUsEe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QrOdWUsEe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QrOdmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QrOd2UsEe6bAesDIgR3sg" name="findNextAvailableChannel" visibility="private" method="_6TqRBWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QrOeGUsEe6bAesDIgR3sg" name="schedule" type="_6C0_sGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6QrOeWUsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QrOemUsEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Qr1gGUsEe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Qr1gWUsEe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Qr1gmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Qr1g2UsEe6bAesDIgR3sg" name="setSchedule" visibility="private" method="_6TqREmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Qr1hGUsEe6bAesDIgR3sg" name="schedule" type="_6C0_sGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SP7wWUsEe6bAesDIgR3sg" name="Program" visibility="package" method="_6Tpp8GUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6SP7x2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6SP7yGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6SP7wmUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SP7w2UsEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SP7xGUsEe6bAesDIgR3sg" name="choice" type="_6SPUsGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SP7xWUsEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SP7xmUsEe6bAesDIgR3sg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SP7yWUsEe6bAesDIgR3sg" type="_6DaOgGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SQi0GUsEe6bAesDIgR3sg" name="Program" visibility="package" method="_6Tpp92UsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6SQi1GUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6SQi1WUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6SQi0WUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SQi0mUsEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SQi02UsEe6bAesDIgR3sg" name="choice" type="_6SPUsGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SQi1mUsEe6bAesDIgR3sg" type="_6DaOgGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SQi12UsEe6bAesDIgR3sg" name="buildProgram" method="_6TpqA2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SQi2GUsEe6bAesDIgR3sg" name="choice" type="_6SPUsGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SQi2WUsEe6bAesDIgR3sg" name="setScheduleSelected" visibility="private" method="_6TqREGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SQi2mUsEe6bAesDIgR3sg" name="choice" type="_6SPUsGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6Dj_gGUsEe6bAesDIgR3sg" name="WarpSystem">
              <ownedComment xmi:id="_6T0CBGUsEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6TPaQGUsEe6bAesDIgR3sg" name="program" visibility="private" type="_6DaOgGUsEe6bAesDIgR3sg" association="_6UFHw2UsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TPaQmUsEe6bAesDIgR3sg" name="workLoad" visibility="private" type="_6DqGIGUsEe6bAesDIgR3sg" association="_6UFHxmUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TQBUWUsEe6bAesDIgR3sg" name="ra" visibility="private" type="_6C4DA2UsEe6bAesDIgR3sg" association="_6UFHyWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TQBU2UsEe6bAesDIgR3sg" name="la" visibility="private" type="_6Csc1mUsEe6bAesDIgR3sg" association="_6UFHzGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TQBVWUsEe6bAesDIgR3sg" name="ca" visibility="private" type="_6CYTwWUsEe6bAesDIgR3sg" association="_6UFu0WUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TQoYGUsEe6bAesDIgR3sg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TQoZmUsEe6bAesDIgR3sg" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TQoZ2UsEe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TRPcGUsEe6bAesDIgR3sg" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TRPcWUsEe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_6Qvf4GUsEe6bAesDIgR3sg" client="_6Dj_gGUsEe6bAesDIgR3sg" supplier="_6C7taWUsEe6bAesDIgR3sg" contract="_6C7taWUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tq4EmUsEe6bAesDIgR3sg" name="WarpSystem" specification="_6SRw8GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tq4E2UsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tq4FGUsEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tq4FWUsEe6bAesDIgR3sg" name="choice" type="_6SPUsGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tq4FmUsEe6bAesDIgR3sg" type="_6Dj_gGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tq4F2UsEe6bAesDIgR3sg" name="toWorkload" specification="_6DkmkGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tq4GGUsEe6bAesDIgR3sg" type="_6DqGIGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tq4GWUsEe6bAesDIgR3sg" name="toProgram" specification="_6DlNo2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tq4GmUsEe6bAesDIgR3sg" type="_6DaOgGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tq4G2UsEe6bAesDIgR3sg" name="toReliabilityAnalysis" specification="_6DlNp2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tq4HGUsEe6bAesDIgR3sg" type="_6C4DA2UsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tq4HWUsEe6bAesDIgR3sg" name="toSimulator" specification="_6Dl0smUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tq4HmUsEe6bAesDIgR3sg" type="_6C_-1mUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tq4H2UsEe6bAesDIgR3sg" name="toLatencyAnalysis" specification="_6Dl0tmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tq4IGUsEe6bAesDIgR3sg" type="_6Csc1mUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tq4IWUsEe6bAesDIgR3sg" name="toChannelAnalysis" specification="_6Dl0umUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tq4ImUsEe6bAesDIgR3sg" type="_6CYTwWUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tq4I2UsEe6bAesDIgR3sg" name="reliabilitiesMet" specification="_6Dl0vmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tq4JGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tq4JWUsEe6bAesDIgR3sg" name="deadlinesMet" specification="_6DmbxGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tq4JmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tq4J2UsEe6bAesDIgR3sg" name="createProgram" specification="_6SSYBWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tq4KGUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tq4KWUsEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tq4KmUsEe6bAesDIgR3sg" name="choice" type="_6SPUsGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tq4K2UsEe6bAesDIgR3sg" name="getNumFaults" specification="_6DmbyWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tq4LGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tq4LWUsEe6bAesDIgR3sg" name="getMinPacketReceptionRate" specification="_6DnC0WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tq4LmUsEe6bAesDIgR3sg" type="_6R3hQGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tq4L2UsEe6bAesDIgR3sg" name="getE2e" specification="_6DnC1WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tq4MGUsEe6bAesDIgR3sg" type="_6R3hQGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TrfIGUsEe6bAesDIgR3sg" name="getName" specification="_6DnC2WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TrfIWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TrfImUsEe6bAesDIgR3sg" name="getSchedulerName" specification="_6Dnp4mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TrfI2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TrfJGUsEe6bAesDIgR3sg" name="getNumTransmissions" specification="_6Dnp52UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TrfJWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TrfJmUsEe6bAesDIgR3sg" name="getOptimizationFlag" specification="_6Dnp7GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TrfJ2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6DkmkGUsEe6bAesDIgR3sg" name="toWorkload" method="_6Tq4F2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QwG8GUsEe6bAesDIgR3sg" type="_6DqGIGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DlNo2UsEe6bAesDIgR3sg" name="toProgram" method="_6Tq4GWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QwG8WUsEe6bAesDIgR3sg" type="_6DaOgGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DlNp2UsEe6bAesDIgR3sg" name="toReliabilityAnalysis" method="_6Tq4G2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QwG8mUsEe6bAesDIgR3sg" type="_6C4DA2UsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dl0smUsEe6bAesDIgR3sg" name="toSimulator" method="_6Tq4HWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QwG82UsEe6bAesDIgR3sg" type="_6C_-1mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dl0tmUsEe6bAesDIgR3sg" name="toLatencyAnalysis" method="_6Tq4H2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QwG9GUsEe6bAesDIgR3sg" type="_6Csc1mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dl0umUsEe6bAesDIgR3sg" name="toChannelAnalysis" method="_6Tq4IWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QwG9WUsEe6bAesDIgR3sg" type="_6CYTwWUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dl0vmUsEe6bAesDIgR3sg" name="reliabilitiesMet" method="_6Tq4I2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DmbwGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DmbxGUsEe6bAesDIgR3sg" name="deadlinesMet" method="_6Tq4JWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DmbxWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DmbyWUsEe6bAesDIgR3sg" name="getNumFaults" method="_6Tq4K2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DmbymUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DnC0WUsEe6bAesDIgR3sg" name="getMinPacketReceptionRate" method="_6Tq4LWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SSYCWUsEe6bAesDIgR3sg" type="_6R3hQGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DnC1WUsEe6bAesDIgR3sg" name="getE2e" method="_6Tq4L2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SSYCmUsEe6bAesDIgR3sg" type="_6R3hQGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DnC2WUsEe6bAesDIgR3sg" name="getName" method="_6TrfIGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DnC2mUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dnp4mUsEe6bAesDIgR3sg" name="getSchedulerName" method="_6TrfImUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Dnp42UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dnp52UsEe6bAesDIgR3sg" name="getNumTransmissions" method="_6TrfJGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Dnp6GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dnp7GUsEe6bAesDIgR3sg" name="getOptimizationFlag" method="_6TrfJmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DoQ8GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DoQ9GUsEe6bAesDIgR3sg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_6SRw8GUsEe6bAesDIgR3sg" name="WarpSystem" method="_6Tq4EmUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6SSYAmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6SSYA2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6SRw8WUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SSYAGUsEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SSYAWUsEe6bAesDIgR3sg" name="choice" type="_6SPUsGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SSYBGUsEe6bAesDIgR3sg" type="_6Dj_gGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SSYBWUsEe6bAesDIgR3sg" name="createProgram" visibility="private" method="_6Tq4J2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SSYBmUsEe6bAesDIgR3sg" name="workLoad" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SSYB2UsEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SSYCGUsEe6bAesDIgR3sg" name="choice" type="_6SPUsGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6DqGIGUsEe6bAesDIgR3sg" name="WorkLoad">
              <ownedComment xmi:id="_6T0CBWUsEe6bAesDIgR3sg">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@author Frank Forliano (for java doc comments)&#xD;
@author srgoddard (for java doc comments)&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_6QzxU2UsEe6bAesDIgR3sg" general="_6CxVUmUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TRPc2UsEe6bAesDIgR3sg" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TRPdGUsEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TRPdWUsEe6bAesDIgR3sg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TR2gGUsEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TR2gWUsEe6bAesDIgR3sg" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TR2gmUsEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TR2g2UsEe6bAesDIgR3sg" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TR2hGUsEe6bAesDIgR3sg" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TR2hWUsEe6bAesDIgR3sg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TR2hmUsEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TR2h2UsEe6bAesDIgR3sg" name="minPacketReceptionRate" type="_6R3hQGUsEe6bAesDIgR3sg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TR2iGUsEe6bAesDIgR3sg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TR2iWUsEe6bAesDIgR3sg" name="e2e" visibility="private" type="_6R3hQGUsEe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TR2imUsEe6bAesDIgR3sg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TR2jGUsEe6bAesDIgR3sg" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TR2jWUsEe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TR2jmUsEe6bAesDIgR3sg" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TR2j2UsEe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TSdkWUsEe6bAesDIgR3sg" name="flows" type="_6CmWMGUsEe6bAesDIgR3sg" association="_6T0CBmUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TSdkmUsEe6bAesDIgR3sg" name="nodes" type="_6CwHMGUsEe6bAesDIgR3sg" association="_6T0CCGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TSdk2UsEe6bAesDIgR3sg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TSdlWUsEe6bAesDIgR3sg" name="flowNamesInOriginalOrder" type="_6PSHUGUsEe6bAesDIgR3sg" association="_6UFu1GUsEe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TTEoGUsEe6bAesDIgR3sg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TTEoWUsEe6bAesDIgR3sg" name="flowNamesInPriorityOrder" type="_6PSHUGUsEe6bAesDIgR3sg" association="_6UFu12UsEe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TTEo2UsEe6bAesDIgR3sg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_6Qx8J2UsEe6bAesDIgR3sg" client="_6DqGIGUsEe6bAesDIgR3sg" supplier="_6C4DBmUsEe6bAesDIgR3sg" contract="_6C4DBmUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TrfKGUsEe6bAesDIgR3sg" name="WorkLoad" specification="_6STmIGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TrfKWUsEe6bAesDIgR3sg" name="m" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TrfKmUsEe6bAesDIgR3sg" name="e2e" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TrfK2UsEe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TrfLGUsEe6bAesDIgR3sg" type="_6DqGIGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TrfLWUsEe6bAesDIgR3sg" name="WorkLoad" specification="_6STmJ2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TrfLmUsEe6bAesDIgR3sg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TrfL2UsEe6bAesDIgR3sg" name="m" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TrfMGUsEe6bAesDIgR3sg" name="e2e" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TrfMWUsEe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TrfMmUsEe6bAesDIgR3sg" type="_6DqGIGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TrfM2UsEe6bAesDIgR3sg" name="setDefaultParameters" specification="_6DqtMGUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TrfNGUsEe6bAesDIgR3sg" name="getE2e" specification="_6DrUQGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TrfNWUsEe6bAesDIgR3sg" type="_6R3hQGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TrfNmUsEe6bAesDIgR3sg" name="getIntForFlowNames" specification="_6DrUQWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TrfN2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TrfOGUsEe6bAesDIgR3sg" name="getName" specification="_6DrUQ2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TrfOWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGMGUsEe6bAesDIgR3sg" name="setMinPacketReceptionRate" specification="_6SUNMWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGMWUsEe6bAesDIgR3sg" name="minPacketReceptionRate" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGMmUsEe6bAesDIgR3sg" name="getMaxPhase" specification="_6DrURWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGM2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGNGUsEe6bAesDIgR3sg" name="getMinPeriod" specification="_6DrUR2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGNWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGNmUsEe6bAesDIgR3sg" name="setE2e" specification="_6SUNM2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGN2UsEe6bAesDIgR3sg" name="e2e" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGOGUsEe6bAesDIgR3sg" name="setIntForFlowNames" specification="_6DrUSWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGOWUsEe6bAesDIgR3sg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGOmUsEe6bAesDIgR3sg" name="setName" specification="_6DrUS2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGO2UsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGPGUsEe6bAesDIgR3sg" name="setNodeChannel" specification="_6Dr7UWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGPWUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TsGPmUsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGP2UsEe6bAesDIgR3sg" name="getNodeChannel" specification="_6Dr7VGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGQGUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TsGQWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGQmUsEe6bAesDIgR3sg" name="addFlow" specification="_6Dr7V2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGQ2UsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGRGUsEe6bAesDIgR3sg" name="isIntForNodeNames" specification="_6Dr7WWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGRWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGRmUsEe6bAesDIgR3sg" name="isIntForFlowNames" specification="_6Dr7W2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGR2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGSGUsEe6bAesDIgR3sg" name="addNodeToFlow" specification="_6Dr7XWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGSWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TsGSmUsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGS2UsEe6bAesDIgR3sg" name="getFlowPriority" specification="_6DsiYGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGTGUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TsGTWUsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TsGTmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGT2UsEe6bAesDIgR3sg" name="setFlowPriority" specification="_6DsiZGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGUGUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TsGUWUsEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGUmUsEe6bAesDIgR3sg" name="setFlowPeriod" specification="_6DsiZ2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGU2UsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TsGVGUsEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGVWUsEe6bAesDIgR3sg" name="setFlowDeadline" specification="_6DsiamUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGVmUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TsGV2UsEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TsGWGUsEe6bAesDIgR3sg" name="setFlowPhase" specification="_6DsibWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TsGWWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TsGWmUsEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstQGUsEe6bAesDIgR3sg" name="getFlowIndex" specification="_6DtJcGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TstQWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TstQmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstQ2UsEe6bAesDIgR3sg" name="getFlowPriority" specification="_6DtJc2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TstRGUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TstRWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstRmUsEe6bAesDIgR3sg" name="getFlowPeriod" specification="_6DtJdmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TstR2UsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TstSGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstSWUsEe6bAesDIgR3sg" name="getFlowDeadline" specification="_6DtJeWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TstSmUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TstS2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstTGUsEe6bAesDIgR3sg" name="getFlowPhase" specification="_6DtJfGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TstTWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TstTmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstT2UsEe6bAesDIgR3sg" name="getFlowTxAttemptsPerLink" specification="_6DtwgGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TstUGUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TstUWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstUmUsEe6bAesDIgR3sg" name="setFlowsInPriorityOrder" specification="_6Dtwg2UsEe6bAesDIgR3sg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstU2UsEe6bAesDIgR3sg" name="setFlowsInDMorder" specification="_6DtwhGUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstVGUsEe6bAesDIgR3sg" name="setFlowsInRMorder" specification="_6DtwhWUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstVWUsEe6bAesDIgR3sg" name="setFlowsInRealTimeHARTorder" specification="_6DtwhmUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstVmUsEe6bAesDIgR3sg" name="finalizeCurrentFlow" specification="_6Dtwh2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TstV2UsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstWGUsEe6bAesDIgR3sg" name="nextReleaseTime" specification="_6DtwiWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TstWWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TstWmUsEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TstW2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstXGUsEe6bAesDIgR3sg" name="nextAbsoluteDeadline" specification="_6DtwjWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TstXWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TstXmUsEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TstX2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TstYGUsEe6bAesDIgR3sg" name="finalizeFlowWithE2eParameters" specification="_6DuXkmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TstYWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TtUUGUsEe6bAesDIgR3sg" name="finalizeFlowWithFixedFaultTolerance" specification="_6DuXlGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TtUUWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TtUUmUsEe6bAesDIgR3sg" name="getFixedTxPerLinkAndTotalTxCost" specification="_6QzKQGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TtUU2UsEe6bAesDIgR3sg" name="flow" type="_6D2TYGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TtUVGUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TtUVWUsEe6bAesDIgR3sg" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_6SUNNmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TtUVmUsEe6bAesDIgR3sg" name="flow" type="_6D2TYGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TtUV2UsEe6bAesDIgR3sg" name="e2e" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TtUWGUsEe6bAesDIgR3sg" name="M" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TtUWWUsEe6bAesDIgR3sg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TtUWmUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
                                                                                       // to&#xD;
                                                                                       // handle&#xD;
                                                                                       // rounding&#xD;
                                                                                       // error&#xD;
                                                                                       // when&#xD;
                                                                                       // e2e ==&#xD;
                                                                                       // 1.0&#xD;
 // Now compute reliability of packet reaching each node in the given time slot&#xD;
 // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
 // each row is a time slot, stating at time 0&#xD;
 // each column represents the reliability of the packet reaching that node at the&#xD;
 // current time slot (i.e., the row it is in)&#xD;
 // will add rows as we compute reliabilities until the final reliability is reached&#xD;
 // for all nodes.&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end&#xD;
                                                                       // when the 2e2&#xD;
                                                                       // reliability metrix is&#xD;
                                                                       // met, initially the&#xD;
                                                                       // state is not met and&#xD;
                                                                       // will be 0 with this&#xD;
                                                                       // statement&#xD;
 var timeSlot = 0; // start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
                                     // we don't know how long this schedule window will last&#xD;
   var prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would&#xD;
                                                                                            // be&#xD;
                                                                                            // reliabilityWindow[timeSlot]&#xD;
                                                                                            // if&#xD;
                                                                                            // working&#xD;
                                                                                            // through&#xD;
                                                                                            // a&#xD;
                                                                                            // schedule&#xD;
   // Now use each flow:src->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
                                                                          // node in the flow and&#xD;
                                                                          // update the sates for&#xD;
                                                                          // each link (i.e.,&#xD;
                                                                          // sink->src pair)&#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
                                                                                // until PrevSnk&#xD;
                                                                                // state > e2e to&#xD;
                                                                                // ensure next&#xD;
                                                                                // node reaches&#xD;
                                                                                // target E2E BUT&#xD;
                                                                                // skip if no&#xD;
                                                                                // chance of&#xD;
                                                                                // success (i.e.,&#xD;
                                                                                // source doesn't&#xD;
                                                                                // have packet)&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
                                                                               // continue&#xD;
                                                                               // attempting to&#xD;
                                                                               // Tx, so update&#xD;
                                                                               // current state&#xD;
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
                                        // next node and record the reliability met&#xD;
     }&#xD;
&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities&#xD;
                                                                                           // are&#xD;
                                                                                           // non-decreasing&#xD;
                                                                                           // so&#xD;
                                                                                           // update&#xD;
                                                                                           // if&#xD;
                                                                                           // we&#xD;
                                                                                           // were&#xD;
                                                                                           // higher&#xD;
                                                                                           // by&#xD;
                                                                                           // carring&#xD;
                                                                                           // old&#xD;
                                                                                           // value&#xD;
                                                                                           // forward&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry&#xD;
                                                                                       // forward&#xD;
                                                                                       // the&#xD;
                                                                                       // previous&#xD;
                                                                                       // state&#xD;
                                                                                       // for the&#xD;
                                                                                       // src&#xD;
                                                                                       // node,&#xD;
                                                                                       // which&#xD;
                                                                                       // may get&#xD;
                                                                                       // over&#xD;
                                                                                       // written&#xD;
                                                                                       // later&#xD;
                                                                                       // by&#xD;
                                                                                       // another&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in this&#xD;
                                                                                       // slot&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TtUW2UsEe6bAesDIgR3sg" name="getNodeNamesOrderedAlphabetically" specification="_6DuXlmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TtUXGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TtUXWUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TtUXmUsEe6bAesDIgR3sg" name="getFlow" specification="_6DuXmmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TtUX2UsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TtUYGUsEe6bAesDIgR3sg" type="_6D2TYGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TtUYWUsEe6bAesDIgR3sg" name="getFlowNames" specification="_6Du-oWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TtUYmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TtUY2UsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TtUZGUsEe6bAesDIgR3sg" name="getNodeIndex" specification="_6Du-pWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TtUZWUsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TtUZmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TtUZ2UsEe6bAesDIgR3sg" name="getNodesInFlow" specification="_6Du-qGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TtUaGUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TtUaWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TtUamUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TtUa2UsEe6bAesDIgR3sg" name="getHyperPeriod" specification="_6Du-rWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TtUbGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TtUbWUsEe6bAesDIgR3sg" name="getTotalTxAttemptsInFlow" specification="_6DvlsGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TtUbmUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TtUb2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TtUcGUsEe6bAesDIgR3sg" name="getNumTxAttemptsPerLink" specification="_6Dvls2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TtUcWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TtUcmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TtUc2UsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TtUdGUsEe6bAesDIgR3sg" name="addEdge" specification="_6QzxUGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TtUdWUsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TtUdmUsEe6bAesDIgR3sg" name="edge" type="_6CiExGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TtUd2UsEe6bAesDIgR3sg" name="maxFlowLength" specification="_6DvluGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TtUeGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6DqtMGUsEe6bAesDIgR3sg" name="setDefaultParameters" visibility="private" method="_6TrfM2UsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6DrUQGUsEe6bAesDIgR3sg" name="getE2e" method="_6TrfNGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CDGUsEe6bAesDIgR3sg">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SUNMGUsEe6bAesDIgR3sg" type="_6R3hQGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DrUQWUsEe6bAesDIgR3sg" name="getIntForFlowNames" method="_6TrfNmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CDWUsEe6bAesDIgR3sg">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DrUQmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DrUQ2UsEe6bAesDIgR3sg" name="getName" method="_6TrfOGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CDmUsEe6bAesDIgR3sg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DrURGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DrURWUsEe6bAesDIgR3sg" name="getMaxPhase" method="_6TsGMmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CEGUsEe6bAesDIgR3sg">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DrURmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DrUR2UsEe6bAesDIgR3sg" name="getMinPeriod" method="_6TsGNGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CEWUsEe6bAesDIgR3sg">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DrUSGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DrUSWUsEe6bAesDIgR3sg" name="setIntForFlowNames" method="_6TsGOGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CE2UsEe6bAesDIgR3sg">
                  <body>The intForFlowNames to set.&#xD;
   * @param intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DrUSmUsEe6bAesDIgR3sg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DrUS2UsEe6bAesDIgR3sg" name="setName" method="_6TsGOmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CFGUsEe6bAesDIgR3sg">
                  <body>The name to set.&#xD;
   * @param name</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Dr7UGUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dr7UWUsEe6bAesDIgR3sg" name="setNodeChannel" method="_6TsGPGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CFWUsEe6bAesDIgR3sg">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Dr7UmUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Dr7U2UsEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dr7VGUsEe6bAesDIgR3sg" name="getNodeChannel" method="_6TsGP2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CFmUsEe6bAesDIgR3sg">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Dr7VWUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Dr7VmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dr7V2UsEe6bAesDIgR3sg" name="addFlow" method="_6TsGQmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Dr7WGUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dr7WWUsEe6bAesDIgR3sg" name="isIntForNodeNames" method="_6TsGRGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Dr7WmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dr7W2UsEe6bAesDIgR3sg" name="isIntForFlowNames" method="_6TsGRmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Dr7XGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dr7XWUsEe6bAesDIgR3sg" name="addNodeToFlow" method="_6TsGSGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Dr7XmUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Dr7X2UsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DsiYGUsEe6bAesDIgR3sg" name="getFlowPriority" method="_6TsGS2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DsiYWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DsiYmUsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DsiY2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DsiZGUsEe6bAesDIgR3sg" name="setFlowPriority" method="_6TsGT2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DsiZWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DsiZmUsEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DsiZ2UsEe6bAesDIgR3sg" name="setFlowPeriod" method="_6TsGUmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DsiaGUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DsiaWUsEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DsiamUsEe6bAesDIgR3sg" name="setFlowDeadline" method="_6TsGVWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Dsia2UsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DsibGUsEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DsibWUsEe6bAesDIgR3sg" name="setFlowPhase" method="_6TsGWGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DsibmUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Dsib2UsEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DtJcGUsEe6bAesDIgR3sg" name="getFlowIndex" method="_6TstQGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DtJcWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DtJcmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DtJc2UsEe6bAesDIgR3sg" name="getFlowPriority" method="_6TstQ2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DtJdGUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DtJdWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DtJdmUsEe6bAesDIgR3sg" name="getFlowPeriod" method="_6TstRmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DtJd2UsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DtJeGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DtJeWUsEe6bAesDIgR3sg" name="getFlowDeadline" method="_6TstSWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DtJemUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DtJe2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DtJfGUsEe6bAesDIgR3sg" name="getFlowPhase" method="_6TstTGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DtJfWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DtJfmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DtwgGUsEe6bAesDIgR3sg" name="getFlowTxAttemptsPerLink" method="_6TstT2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DtwgWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DtwgmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dtwg2UsEe6bAesDIgR3sg" name="setFlowsInPriorityOrder" method="_6TstUmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CF2UsEe6bAesDIgR3sg">
                  <body>&#xD;
  * This collects the Flows in a list format from the FlowMap,&#xD;
  * then sorts by a secondary key via index,&#xD;
  * then sorts by priority order.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_6DtwhGUsEe6bAesDIgR3sg" name="setFlowsInDMorder" method="_6TstU2UsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6DtwhWUsEe6bAesDIgR3sg" name="setFlowsInRMorder" method="_6TstVGUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6DtwhmUsEe6bAesDIgR3sg" name="setFlowsInRealTimeHARTorder" method="_6TstVWUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6Dtwh2UsEe6bAesDIgR3sg" name="finalizeCurrentFlow" method="_6TstVmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DtwiGUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DtwiWUsEe6bAesDIgR3sg" name="nextReleaseTime" method="_6TstWGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CGGUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * Updates the LastUpdateTime and NextReleaseTime. Returns the next release Time at&#xD;
  * or after currentTime.&#xD;
  * @param flowName&#xD;
  * @param currentTime&#xD;
  * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DtwimUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Dtwi2UsEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DtwjGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DtwjWUsEe6bAesDIgR3sg" name="nextAbsoluteDeadline" method="_6TstXGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pEGUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * Combines the release time for the schedule and the next deadline after currentTime&#xD;
  * @param flowName is past to var flow&#xD;
  * @param flow is used to hold getFlow(flowName)&#xD;
  * @param currentTime is used to set the LastUpdateTime and NextReleaseTime&#xD;
  * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DtwjmUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DuXkGUsEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DuXkWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DuXkmUsEe6bAesDIgR3sg" name="finalizeFlowWithE2eParameters" visibility="private" method="_6TstYGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DuXk2UsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DuXlGUsEe6bAesDIgR3sg" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_6TtUUGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DuXlWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DuXlmUsEe6bAesDIgR3sg" name="getNodeNamesOrderedAlphabetically" method="_6TtUW2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DuXl2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6DuXmGUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DuXmmUsEe6bAesDIgR3sg" name="getFlow" visibility="private" method="_6TtUXmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Du-oGUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QzKQ2UsEe6bAesDIgR3sg" type="_6D2TYGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Du-oWUsEe6bAesDIgR3sg" name="getFlowNames" method="_6TtUYWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Du-omUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6Du-o2UsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Du-pWUsEe6bAesDIgR3sg" name="getNodeIndex" method="_6TtUZGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Du-pmUsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Du-p2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Du-qGUsEe6bAesDIgR3sg" name="getNodesInFlow" method="_6TtUZ2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pEWUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * get the flow node for requested Flow and then loop through the&#xD;
  * nodes in the flow to create an array of the node names in&#xD;
  * the same order as they exist in the flow specification (i.e., Graph file)&#xD;
  * @param flowName used to pass the node list to flow&#xD;
  * @param flow used to continue along the node list&#xD;
  * @return nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Du-qWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Du-qmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6Du-q2UsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Du-rWUsEe6bAesDIgR3sg" name="getHyperPeriod" method="_6TtUa2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pEmUsEe6bAesDIgR3sg">
                  <body>*Calculates the HyperPeriod which is the LCM of all flows.&#xD;
   * &#xD;
   * @return hyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Du-rmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DvlsGUsEe6bAesDIgR3sg" name="getTotalTxAttemptsInFlow" method="_6TtUbWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DvlsWUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DvlsmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dvls2UsEe6bAesDIgR3sg" name="getNumTxAttemptsPerLink" method="_6TtUcGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pE2UsEe6bAesDIgR3sg">
                  <body>&#xD;
   * @param flowName&#xD;
   * @return Array of integers that represents the transmission attempts</body>
                </ownedComment>
                <ownedParameter xmi:id="_6DvltGUsEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6DvltWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6DvltmUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6DvluGUsEe6bAesDIgR3sg" name="maxFlowLength" method="_6TtUd2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6DvluWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6QzKQGUsEe6bAesDIgR3sg" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_6TtUUmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QzKQWUsEe6bAesDIgR3sg" name="flow" type="_6D2TYGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SUNNWUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6QzxUGUsEe6bAesDIgR3sg" name="addEdge" method="_6TtUdGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6QzxUWUsEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6QzxUmUsEe6bAesDIgR3sg" name="edge" type="_6CiExGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6STmIGUsEe6bAesDIgR3sg" name="WorkLoad" visibility="package" method="_6TrfKGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6STmJGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6STmJWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6T0CCmUsEe6bAesDIgR3sg">
                  <body>&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  *</body>
                </ownedComment>
                <ownedParameter xmi:id="_6STmIWUsEe6bAesDIgR3sg" name="m" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6STmImUsEe6bAesDIgR3sg" name="e2e" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6STmI2UsEe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6STmJmUsEe6bAesDIgR3sg" type="_6DqGIGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6STmJ2UsEe6bAesDIgR3sg" name="WorkLoad" visibility="package" method="_6TrfLWUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6STmLGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6STmLWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6T0CC2UsEe6bAesDIgR3sg">
                  <body>*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects</body>
                </ownedComment>
                <ownedParameter xmi:id="_6STmKGUsEe6bAesDIgR3sg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6STmKWUsEe6bAesDIgR3sg" name="m" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6STmKmUsEe6bAesDIgR3sg" name="e2e" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6STmK2UsEe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6STmLmUsEe6bAesDIgR3sg" type="_6DqGIGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SUNMWUsEe6bAesDIgR3sg" name="setMinPacketReceptionRate" method="_6TsGMGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CD2UsEe6bAesDIgR3sg">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SUNMmUsEe6bAesDIgR3sg" name="minPacketReceptionRate" type="_6R3hQGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SUNM2UsEe6bAesDIgR3sg" name="setE2e" method="_6TsGNmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0CEmUsEe6bAesDIgR3sg">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SUNNGUsEe6bAesDIgR3sg" name="e2e" type="_6R3hQGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SUNNmUsEe6bAesDIgR3sg" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_6TtUVWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SU0QGUsEe6bAesDIgR3sg" name="flow" type="_6D2TYGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SU0QWUsEe6bAesDIgR3sg" name="e2e" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SU0QmUsEe6bAesDIgR3sg" name="M" type="_6R3hQGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SU0Q2UsEe6bAesDIgR3sg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6SU0RWUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6DypAGUsEe6bAesDIgR3sg" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_6T0pFGUsEe6bAesDIgR3sg">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_6TTrsGUsEe6bAesDIgR3sg" name="activations" visibility="private" type="_6CXstWUsEe6bAesDIgR3sg" association="_6UFu2mUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TTrsmUsEe6bAesDIgR3sg" name="workload" visibility="private" type="_6DqGIGUsEe6bAesDIgR3sg" association="_6UGV4WUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TTrtGUsEe6bAesDIgR3sg" name="flows" visibility="protected" type="_6D2TYGUsEe6bAesDIgR3sg" association="_6UGV5GUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6TUSwWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6TUSwmUsEe6bAesDIgR3sg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TUSwGUsEe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TUSxGUsEe6bAesDIgR3sg" name="nodes" visibility="private" type="_6CuSAmUsEe6bAesDIgR3sg" association="_6UGV52UsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6TUSxmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6TUSx2UsEe6bAesDIgR3sg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TUSxWUsEe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TUSyWUsEe6bAesDIgR3sg" name="nodeMap" visibility="private" type="_6CwHMGUsEe6bAesDIgR3sg" association="_6UGV6mUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TUSy2UsEe6bAesDIgR3sg" name="priorityQueue" visibility="private" type="_6C3b9mUsEe6bAesDIgR3sg" association="_6UG88WUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TU50mUsEe6bAesDIgR3sg" name="nodeConnectivityMap" visibility="protected" type="_6PKLgGUsEe6bAesDIgR3sg" association="_6UG89GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TVg4WUsEe6bAesDIgR3sg" name="activationMap" visibility="package" type="_6CmWMWUsEe6bAesDIgR3sg" association="_6UG892UsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7YGUsEe6bAesDIgR3sg" name="Poset" specification="_6Q1mgGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tt7YWUsEe6bAesDIgR3sg" name="workload" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tt7YmUsEe6bAesDIgR3sg" type="_6DypAGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7Y2UsEe6bAesDIgR3sg" name="getNodeConnectivity" specification="_6DzQEGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tt7ZGUsEe6bAesDIgR3sg" type="_6PKLgGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7ZWUsEe6bAesDIgR3sg" name="getNodeNames" specification="_6DzQEmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tt7ZmUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7Z2UsEe6bAesDIgR3sg" name="getNodesNamesOrderedAlphabetically" specification="_6Dz3IWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tt7aGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6Tt7aWUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7amUsEe6bAesDIgR3sg" name="buildPosetOfActivations" specification="_6Dz3JWUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7a2UsEe6bAesDIgR3sg" name="createEdgeLists" specification="_6Dz3JmUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7bGUsEe6bAesDIgR3sg" name="createConflictLists" specification="_6Dz3J2UsEe6bAesDIgR3sg">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7bWUsEe6bAesDIgR3sg" name="createGlobalConflictLists" specification="_6Dz3KGUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7bmUsEe6bAesDIgR3sg" name="createLocalConflictLists" specification="_6Dz3KWUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7b2UsEe6bAesDIgR3sg" name="findCoordinator" specification="_6SWpcGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tt7cGUsEe6bAesDIgR3sg" name="nodesInFlow" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tt7cWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7cmUsEe6bAesDIgR3sg" name="buildTxArray" specification="_6SWpdGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tt7c2UsEe6bAesDIgR3sg" name="nodesInFlow" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tt7dGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6Tt7dWUsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7dmUsEe6bAesDIgR3sg" name="createInitialActivations" specification="_6D0eMGUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7d2UsEe6bAesDIgR3sg" name="getMaxTx" specification="_6Q2NkGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tt7eGUsEe6bAesDIgR3sg" name="node" type="_6CuSAmUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tt7eWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7emUsEe6bAesDIgR3sg" name="getActivation" specification="_6Q2Nk2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tt7e2UsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tt7fGUsEe6bAesDIgR3sg" name="node" type="_6CuSAmUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tt7fWUsEe6bAesDIgR3sg" type="_6D9BEGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7fmUsEe6bAesDIgR3sg" name="getHyperPeriod" specification="_6D0eMWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tt7f2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7gGUsEe6bAesDIgR3sg" name="getMaxPhase" specification="_6D0eM2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tt7gWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7gmUsEe6bAesDIgR3sg" name="orderActivations" specification="_6D0eNWUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tt7g2UsEe6bAesDIgR3sg" name="getNextActivation" specification="_6D0eNmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tt7hGUsEe6bAesDIgR3sg" type="_6D9BEGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TuicGUsEe6bAesDIgR3sg" name="addActivation" specification="_6Q20oWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuicWUsEe6bAesDIgR3sg" name="activation" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TuicmUsEe6bAesDIgR3sg" name="findBaseStation" specification="_6D1FQGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tuic2UsEe6bAesDIgR3sg" type="_6CuSAmUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6DzQEGUsEe6bAesDIgR3sg" name="getNodeConnectivity" visibility="private" method="_6Tt7Y2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SWCYGUsEe6bAesDIgR3sg" type="_6PKLgGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6DzQEmUsEe6bAesDIgR3sg" name="getNodeNames" method="_6Tt7ZWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SWCYWUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dz3IWUsEe6bAesDIgR3sg" name="getNodesNamesOrderedAlphabetically" method="_6Tt7Z2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Dz3ImUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6Dz3I2UsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Dz3JWUsEe6bAesDIgR3sg" name="buildPosetOfActivations" method="_6Tt7amUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6Dz3JmUsEe6bAesDIgR3sg" name="createEdgeLists" visibility="private" method="_6Tt7a2UsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6Dz3J2UsEe6bAesDIgR3sg" name="createConflictLists" visibility="private" method="_6Tt7bGUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6Dz3KGUsEe6bAesDIgR3sg" name="createGlobalConflictLists" visibility="private" method="_6Tt7bWUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6Dz3KWUsEe6bAesDIgR3sg" name="createLocalConflictLists" visibility="private" method="_6Tt7bmUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6D0eMGUsEe6bAesDIgR3sg" name="createInitialActivations" visibility="private" method="_6Tt7dmUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6D0eMWUsEe6bAesDIgR3sg" name="getHyperPeriod" method="_6Tt7fmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6D0eMmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6D0eM2UsEe6bAesDIgR3sg" name="getMaxPhase" method="_6Tt7gGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6D0eNGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6D0eNWUsEe6bAesDIgR3sg" name="orderActivations" method="_6Tt7gmUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6D0eNmUsEe6bAesDIgR3sg" name="getNextActivation" method="_6Tt7g2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pF2UsEe6bAesDIgR3sg">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Q20oGUsEe6bAesDIgR3sg" type="_6D9BEGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6D1FQGUsEe6bAesDIgR3sg" name="findBaseStation" visibility="protected" method="_6TuicmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pGWUsEe6bAesDIgR3sg">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Q20o2UsEe6bAesDIgR3sg" type="_6CuSAmUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q1mgGUsEe6bAesDIgR3sg" name="Poset" visibility="package" method="_6Tt7YGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6Q1mgmUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6Q1mg2UsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6T0pFWUsEe6bAesDIgR3sg">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Q1mgWUsEe6bAesDIgR3sg" name="workload" type="_6DqGIGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Q1mhGUsEe6bAesDIgR3sg" type="_6DypAGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q2NkGUsEe6bAesDIgR3sg" name="getMaxTx" visibility="private" method="_6Tt7d2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Q2NkWUsEe6bAesDIgR3sg" name="node" type="_6CuSAmUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Q2NkmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q2Nk2UsEe6bAesDIgR3sg" name="getActivation" visibility="private" method="_6Tt7emUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Q2NlGUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Q2NlWUsEe6bAesDIgR3sg" name="node" type="_6CuSAmUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Q2NlmUsEe6bAesDIgR3sg" type="_6D9BEGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q20oWUsEe6bAesDIgR3sg" name="addActivation" method="_6TuicGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pGGUsEe6bAesDIgR3sg">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Q20omUsEe6bAesDIgR3sg" name="activation" type="_6D9BEGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SWpcGUsEe6bAesDIgR3sg" name="findCoordinator" visibility="protected" method="_6Tt7b2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pFmUsEe6bAesDIgR3sg">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SWpcWUsEe6bAesDIgR3sg" name="nodesInFlow" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SWpcmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6SWpdGUsEe6bAesDIgR3sg" name="buildTxArray" visibility="private" method="_6Tt7cmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SWpdWUsEe6bAesDIgR3sg" name="nodesInFlow" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6SWpdmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6SWpd2UsEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6D2TYGUsEe6bAesDIgR3sg" name="Flow">
              <ownedComment xmi:id="_6T0pGmUsEe6bAesDIgR3sg">
                <body>&lt;p> This class is for representing network flows.&#xD;
		Network flows are used to model the communication patterns between other flows within the network.&#xD;
		Each flow has the following properties: priority, index, and values that show if data has been transmitted reliably.&#xD;
		Flows are compared based off their priority and contain nodes and edges&#xD;
		&#xD;
&#xD;
@author sgoddard&#xD;
@author Frank Forliano (creating comments, for JavaDoc)</body>
              </ownedComment>
              <generalization xmi:id="_6Q4p2GUsEe6bAesDIgR3sg" general="_6DTg0GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TVg42UsEe6bAesDIgR3sg" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TVg5GUsEe6bAesDIgR3sg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TWH8GUsEe6bAesDIgR3sg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TWH8WUsEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TWH8mUsEe6bAesDIgR3sg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TWH82UsEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TWH9GUsEe6bAesDIgR3sg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TWH9WUsEe6bAesDIgR3sg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TWH9mUsEe6bAesDIgR3sg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TWH92UsEe6bAesDIgR3sg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TWH-GUsEe6bAesDIgR3sg" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TWH-WUsEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TWH-mUsEe6bAesDIgR3sg" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_6TWH-2UsEe6bAesDIgR3sg" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TWH_WUsEe6bAesDIgR3sg" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TWH_2UsEe6bAesDIgR3sg" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_6TWvAWUsEe6bAesDIgR3sg" name="nodes" visibility="package" type="_6PSHUGUsEe6bAesDIgR3sg" association="_6UG8-mUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TWvBGUsEe6bAesDIgR3sg" name="linkTxAndTotalCost" visibility="package" type="_6PSHUGUsEe6bAesDIgR3sg" association="_6UHkAWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TWvB2UsEe6bAesDIgR3sg" name="edges" visibility="package" type="_6PSHUGUsEe6bAesDIgR3sg" association="_6UHkBGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TXWEmUsEe6bAesDIgR3sg" name="nodePredecessor" visibility="package" type="_6CuSAmUsEe6bAesDIgR3sg" association="_6UHkB2UsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TXWFGUsEe6bAesDIgR3sg" name="edgePredecessor" visibility="package" type="_6CiExGUsEe6bAesDIgR3sg" association="_6UHkCmUsEe6bAesDIgR3sg"/>
              <interfaceRealization xmi:id="_6SXQgWUsEe6bAesDIgR3sg" client="_6D2TYGUsEe6bAesDIgR3sg" supplier="_6RmbgWUsEe6bAesDIgR3sg" contract="_6RmbgWUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TuidGUsEe6bAesDIgR3sg" name="Flow" specification="_6D26cGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuidWUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TuidmUsEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Tuid2UsEe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TuieGUsEe6bAesDIgR3sg" type="_6D2TYGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TuieWUsEe6bAesDIgR3sg" name="Flow" specification="_6D3hhmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuiemUsEe6bAesDIgR3sg" type="_6D2TYGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tuie2UsEe6bAesDIgR3sg" name="getInitialPriority" specification="_6D3himUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuifGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TuifWUsEe6bAesDIgR3sg" name="getIndex" specification="_6D4IkGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuifmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tuif2UsEe6bAesDIgR3sg" name="getNumTxPerLink" specification="_6D4IkmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuigGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TuigWUsEe6bAesDIgR3sg" name="getNodes" specification="_6D4IlGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuigmUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tuig2UsEe6bAesDIgR3sg" name="getEdges" specification="_6D4voGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuihGUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TuihWUsEe6bAesDIgR3sg" name="addEdge" specification="_6Q4CwGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuihmUsEe6bAesDIgR3sg" name="edge" type="_6CiExGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tuih2UsEe6bAesDIgR3sg" name="addNode" specification="_6Q4p0GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuiiGUsEe6bAesDIgR3sg" name="node" type="_6CuSAmUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TuiiWUsEe6bAesDIgR3sg" name="getLinkTxAndTotalCost" specification="_6D4vomUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuiimUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tuii2UsEe6bAesDIgR3sg" name="setInitialPriority" specification="_6D5WsWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuijGUsEe6bAesDIgR3sg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TuijWUsEe6bAesDIgR3sg" name="setIndex" specification="_6D59wGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuijmUsEe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tuij2UsEe6bAesDIgR3sg" name="setNumTxPerLink" specification="_6D59wmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuikGUsEe6bAesDIgR3sg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TuikWUsEe6bAesDIgR3sg" name="setNodes" specification="_6SYeo2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuikmUsEe6bAesDIgR3sg" name="nodes" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tuik2UsEe6bAesDIgR3sg" name="setLinkTxAndTotalCost" specification="_6SYepmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuilGUsEe6bAesDIgR3sg" name="linkTxAndTotalCost" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TuilWUsEe6bAesDIgR3sg" name="compareTo" specification="_6Q4p0mUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuilmUsEe6bAesDIgR3sg" name="flow" type="_6D2TYGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Tuil2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TuimGUsEe6bAesDIgR3sg" name="toString" specification="_6D59xGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TuimWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6D26cGUsEe6bAesDIgR3sg" name="Flow" visibility="package" method="_6TuidGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6D3hg2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6D3hhGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6T0pG2UsEe6bAesDIgR3sg">
                  <body>Constructor that sets name, priority, and index&#xD;
     * @param name The name of the Flow&#xD;
     * @param priority The priority of the Flow	&#xD;
     * @param Integer The flow index number</body>
                </ownedComment>
                <ownedParameter xmi:id="_6D3hgGUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6D3hgWUsEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6D3hgmUsEe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6D3hhWUsEe6bAesDIgR3sg" type="_6D2TYGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6D3hhmUsEe6bAesDIgR3sg" name="Flow" visibility="package" method="_6TuieWUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6D3hh2UsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6D3hiGUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6T0pHGUsEe6bAesDIgR3sg">
                  <body>The default constructor for Flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_6D3hiWUsEe6bAesDIgR3sg" type="_6D2TYGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6D3himUsEe6bAesDIgR3sg" name="getInitialPriority" method="_6Tuie2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pHWUsEe6bAesDIgR3sg">
                  <body>Use this to see the flow priority)&#xD;
	 * @return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_6D3hi2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6D4IkGUsEe6bAesDIgR3sg" name="getIndex" method="_6TuifWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pHmUsEe6bAesDIgR3sg">
                  <body>Return the value of the index.&#xD;
	 * @param index&#xD;
	 * @return the index (use this to get the index of the list))</body>
                </ownedComment>
                <ownedParameter xmi:id="_6D4IkWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6D4IkmUsEe6bAesDIgR3sg" name="getNumTxPerLink" method="_6Tuif2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pH2UsEe6bAesDIgR3sg">
                  <body>Use to see flow transmissions.&#xD;
	 *  @param numTxPerLink&#xD;
	 * @return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_6D4Ik2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6D4IlGUsEe6bAesDIgR3sg" name="getNodes" method="_6TuigWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pIGUsEe6bAesDIgR3sg">
                  <body>Returns an ArrayList object of the nodes.&#xD;
	 * @return nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SYeoGUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6D4voGUsEe6bAesDIgR3sg" name="getEdges" method="_6Tuig2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pIWUsEe6bAesDIgR3sg">
                  <body>Get the edges from the flow.&#xD;
	 * @param edges &#xD;
	 * @return the nodes (returns an ArrayList object of the edges)</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SYeoWUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6D4vomUsEe6bAesDIgR3sg" name="getLinkTxAndTotalCost" method="_6TuiiWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pJGUsEe6bAesDIgR3sg">
                  <body>Returns the link transmission and cost of the value.&#xD;
	 * @return An ArrayList that contains the link transmission and the cost of the value.</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SYeomUsEe6bAesDIgR3sg" type="_6PSHUGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6D5WsWUsEe6bAesDIgR3sg" name="setInitialPriority" method="_6Tuii2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pJWUsEe6bAesDIgR3sg">
                  <body>The initialPriority to set.&#xD;
	 * @param initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_6D5WsmUsEe6bAesDIgR3sg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6D59wGUsEe6bAesDIgR3sg" name="setIndex" method="_6TuijWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pJmUsEe6bAesDIgR3sg">
                  <body>The index value which needs to be set.&#xD;
	 * @param index</body>
                </ownedComment>
                <ownedParameter xmi:id="_6D59wWUsEe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6D59wmUsEe6bAesDIgR3sg" name="setNumTxPerLink" method="_6Tuij2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pJ2UsEe6bAesDIgR3sg">
                  <body>The numTxPerLink to set.&#xD;
	 * @param numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_6D59w2UsEe6bAesDIgR3sg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6D59xGUsEe6bAesDIgR3sg" name="toString" method="_6TuimGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6D6k0GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q4CwGUsEe6bAesDIgR3sg" name="addEdge" method="_6TuihWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pImUsEe6bAesDIgR3sg">
                  <body>Add an edge to the flow.&#xD;
	 * @param edge The edge which is added to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Q4CwWUsEe6bAesDIgR3sg" name="edge" type="_6CiExGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q4p0GUsEe6bAesDIgR3sg" name="addNode" method="_6Tuih2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pI2UsEe6bAesDIgR3sg">
                  <body>Add a node to the flow.&#xD;
	 * @param node The node which is added to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Q4p0WUsEe6bAesDIgR3sg" name="node" type="_6CuSAmUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q4p0mUsEe6bAesDIgR3sg" name="compareTo" method="_6TuilWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Q4p02UsEe6bAesDIgR3sg" name="flow" type="_6D2TYGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Q4p1GUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6SYeo2UsEe6bAesDIgR3sg" name="setNodes" method="_6TuikWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pKGUsEe6bAesDIgR3sg">
                  <body>The nodes to set.&#xD;
	 * @param nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SYepGUsEe6bAesDIgR3sg" name="nodes" type="_6PSHUGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SYepmUsEe6bAesDIgR3sg" name="setLinkTxAndTotalCost" method="_6Tuik2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pKWUsEe6bAesDIgR3sg">
                  <body>The linkTxAndTotalCost to set.&#xD;
	 * @param linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_6SYep2UsEe6bAesDIgR3sg" name="linkTxAndTotalCost" type="_6PSHUGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6D9BEGUsEe6bAesDIgR3sg" name="Activation">
              <generalization xmi:id="_6Q8UMmUsEe6bAesDIgR3sg" general="_6DTg0GUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TX9IGUsEe6bAesDIgR3sg" name="coordinators" type="_6PSHUGUsEe6bAesDIgR3sg" isReadOnly="true" association="_6UHkDWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TX9ImUsEe6bAesDIgR3sg" name="edges" type="_6PSHUGUsEe6bAesDIgR3sg" isReadOnly="true" association="_6UILEWUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TX9JGUsEe6bAesDIgR3sg" name="additionalScheduleTimes" type="_6PSHUGUsEe6bAesDIgR3sg" isReadOnly="true" association="_6UILFGUsEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_6TYkMWUsEe6bAesDIgR3sg" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6TYkMmUsEe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_6SZswGUsEe6bAesDIgR3sg" client="_6D9BEGUsEe6bAesDIgR3sg" supplier="_6RmbgWUsEe6bAesDIgR3sg" contract="_6RmbgWUsEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJgGUsEe6bAesDIgR3sg" name="Activation" specification="_6D9BEWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJgWUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TvJgmUsEe6bAesDIgR3sg" type="_6D9BEGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJg2UsEe6bAesDIgR3sg" name="Activation" specification="_6Q538GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJhGUsEe6bAesDIgR3sg" name="elem" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TvJhWUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TvJhmUsEe6bAesDIgR3sg" type="_6D9BEGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJh2UsEe6bAesDIgR3sg" name="clone" specification="_6D9oI2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJiGUsEe6bAesDIgR3sg" type="_6D9BEGUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJiWUsEe6bAesDIgR3sg" name="getEdgesByReleaseTime" specification="_6D-PMGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJimUsEe6bAesDIgR3sg" type="_6C3b9mUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJi2UsEe6bAesDIgR3sg" name="getEdgesByLatestReleaseTime" specification="_6D-PMmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJjGUsEe6bAesDIgR3sg" type="_6C3b9mUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJjWUsEe6bAesDIgR3sg" name="getEdgesByPeriod" specification="_6D-2QWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJjmUsEe6bAesDIgR3sg" type="_6C3b9mUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJj2UsEe6bAesDIgR3sg" name="getEdgesByDeadline" specification="_6D-2Q2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJkGUsEe6bAesDIgR3sg" type="_6C3b9mUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJkWUsEe6bAesDIgR3sg" name="getEdgesByPriority" specification="_6D_dUWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJkmUsEe6bAesDIgR3sg" type="_6C3b9mUsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJk2UsEe6bAesDIgR3sg" name="addEdges" specification="_6SaT0GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJlGUsEe6bAesDIgR3sg" name="edges" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJlWUsEe6bAesDIgR3sg" name="addEdge" specification="_6Q6fCmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJlmUsEe6bAesDIgR3sg" name="edge" type="_6CiExGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJl2UsEe6bAesDIgR3sg" name="increaseEdgePhases" specification="_6EAEYWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJmGUsEe6bAesDIgR3sg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJmWUsEe6bAesDIgR3sg" name="updatePriorityAndRelease" specification="_6EAEY2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJmmUsEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJm2UsEe6bAesDIgR3sg" name="addConflict" specification="_6EArcGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJnGUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJnWUsEe6bAesDIgR3sg" name="addConflicts" specification="_6SaT02UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJnmUsEe6bAesDIgR3sg" name="conflicts" type="_6Qx8IWUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJn2UsEe6bAesDIgR3sg" name="addCoordinator" specification="_6EArcmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJoGUsEe6bAesDIgR3sg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJoWUsEe6bAesDIgR3sg" name="addCoordinators" specification="_6Sa64WUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJomUsEe6bAesDIgR3sg" name="coordinators" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJo2UsEe6bAesDIgR3sg" name="addScheduleTimes" specification="_6Sa65GUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJpGUsEe6bAesDIgR3sg" name="scheduleTime" type="_6PSHUGUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJpWUsEe6bAesDIgR3sg" name="getNextScheduleTime" specification="_6EArdGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJpmUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TvJp2UsEe6bAesDIgR3sg" type="_6C_Xy2UsEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJqGUsEe6bAesDIgR3sg" name="getMatchingEndTime" specification="_6EBSgGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJqWUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TvJqmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJq2UsEe6bAesDIgR3sg" name="getNextStartTime" specification="_6EBSg2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJrGUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TvJrWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJrmUsEe6bAesDIgR3sg" name="getNextEndTime" specification="_6EB5kGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJr2UsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TvJsGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJsWUsEe6bAesDIgR3sg" name="getNumEdges" specification="_6EB5k2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJsmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJs2UsEe6bAesDIgR3sg" name="compareTo" specification="_6Q7GEGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJtGUsEe6bAesDIgR3sg" name="obj" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TvJtWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJtmUsEe6bAesDIgR3sg" name="conflictExists" specification="_6Q7GFmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJt2UsEe6bAesDIgR3sg" name="obj" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TvJuGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvJuWUsEe6bAesDIgR3sg" name="canCombine" specification="_6Q7GGWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvJumUsEe6bAesDIgR3sg" name="a2" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TvJu2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvwkGUsEe6bAesDIgR3sg" name="getDelta" specification="_6EB5lWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvwkWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvwkmUsEe6bAesDIgR3sg" name="getExecutionDuration" specification="_6ECgoGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tvwk2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvwlGUsEe6bAesDIgR3sg" name="getCombinedExecutionDuration" specification="_6Q7tIWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvwlWUsEe6bAesDIgR3sg" name="a2" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6TvwlmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Tvwl2UsEe6bAesDIgR3sg" name="printAll" specification="_6ECgomUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvwmGUsEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvwmWUsEe6bAesDIgR3sg" name="printAll" specification="_6ECgpGUsEe6bAesDIgR3sg">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvwmmUsEe6bAesDIgR3sg" name="printEdges" specification="_6Q7tJGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Tvwm2UsEe6bAesDIgR3sg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6TvwnGUsEe6bAesDIgR3sg" name="edges" type="_6C3b8GUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6TvwnWUsEe6bAesDIgR3sg" name="printEdges" specification="_6Q7tKGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6TvwnmUsEe6bAesDIgR3sg" name="edges" type="_6C3b8GUsEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6D9BEWUsEe6bAesDIgR3sg" name="Activation" visibility="package" method="_6TvJgGUsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6D9oIGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6D9oIWUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6D9BEmUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6D9oImUsEe6bAesDIgR3sg" type="_6D9BEGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6D9oI2UsEe6bAesDIgR3sg" name="clone" method="_6TvJh2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Q6fBGUsEe6bAesDIgR3sg" type="_6D9BEGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6D-PMGUsEe6bAesDIgR3sg" name="getEdgesByReleaseTime" method="_6TvJiWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pKmUsEe6bAesDIgR3sg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Q6fBWUsEe6bAesDIgR3sg" type="_6C3b9mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6D-PMmUsEe6bAesDIgR3sg" name="getEdgesByLatestReleaseTime" method="_6TvJi2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pK2UsEe6bAesDIgR3sg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Q6fBmUsEe6bAesDIgR3sg" type="_6C3b9mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6D-2QWUsEe6bAesDIgR3sg" name="getEdgesByPeriod" method="_6TvJjWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pLGUsEe6bAesDIgR3sg">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Q6fB2UsEe6bAesDIgR3sg" type="_6C3b9mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6D-2Q2UsEe6bAesDIgR3sg" name="getEdgesByDeadline" method="_6TvJj2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pLWUsEe6bAesDIgR3sg">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Q6fCGUsEe6bAesDIgR3sg" type="_6C3b9mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6D_dUWUsEe6bAesDIgR3sg" name="getEdgesByPriority" method="_6TvJkWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pLmUsEe6bAesDIgR3sg">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Q6fCWUsEe6bAesDIgR3sg" type="_6C3b9mUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6EAEYWUsEe6bAesDIgR3sg" name="increaseEdgePhases" method="_6TvJl2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pL2UsEe6bAesDIgR3sg">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_6EAEYmUsEe6bAesDIgR3sg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6EAEY2UsEe6bAesDIgR3sg" name="updatePriorityAndRelease" method="_6TvJmWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T0pMGUsEe6bAesDIgR3sg">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_6EAEZGUsEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6EArcGUsEe6bAesDIgR3sg" name="addConflict" method="_6TvJm2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6EArcWUsEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6EArcmUsEe6bAesDIgR3sg" name="addCoordinator" method="_6TvJn2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6EArc2UsEe6bAesDIgR3sg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6EArdGUsEe6bAesDIgR3sg" name="getNextScheduleTime" method="_6TvJpWUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T1QIWUsEe6bAesDIgR3sg">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_6EArdWUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Q6fDGUsEe6bAesDIgR3sg" type="_6C_Xy2UsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6EBSgGUsEe6bAesDIgR3sg" name="getMatchingEndTime" method="_6TvJqGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T1QImUsEe6bAesDIgR3sg">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_6EBSgWUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6EBSgmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6EBSg2UsEe6bAesDIgR3sg" name="getNextStartTime" method="_6TvJq2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T1QI2UsEe6bAesDIgR3sg">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_6EBShGUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6EBShWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6EB5kGUsEe6bAesDIgR3sg" name="getNextEndTime" method="_6TvJrmUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T1QJGUsEe6bAesDIgR3sg">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_6EB5kWUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6EB5kmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6EB5k2UsEe6bAesDIgR3sg" name="getNumEdges" method="_6TvJsWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6EB5lGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6EB5lWUsEe6bAesDIgR3sg" name="getDelta" method="_6TvwkGUsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T1QJWUsEe6bAesDIgR3sg">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_6EB5lmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6ECgoGUsEe6bAesDIgR3sg" name="getExecutionDuration" method="_6TvwkmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ECgoWUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6ECgomUsEe6bAesDIgR3sg" name="printAll" method="_6Tvwl2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6ECgo2UsEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6ECgpGUsEe6bAesDIgR3sg" name="printAll" method="_6TvwmWUsEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_6Q538GUsEe6bAesDIgR3sg" name="Activation" visibility="package" method="_6TvJg2UsEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_6Q6fAWUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6Q6fAmUsEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6Q538WUsEe6bAesDIgR3sg" name="elem" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Q6fAGUsEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Q6fA2UsEe6bAesDIgR3sg" type="_6D9BEGUsEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q6fCmUsEe6bAesDIgR3sg" name="addEdge" method="_6TvJlWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Q6fC2UsEe6bAesDIgR3sg" name="edge" type="_6CiExGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q7GEGUsEe6bAesDIgR3sg" name="compareTo" method="_6TvJs2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Q7GEWUsEe6bAesDIgR3sg" name="obj" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Q7GEmUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q7GFmUsEe6bAesDIgR3sg" name="conflictExists" method="_6TvJtmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Q7GF2UsEe6bAesDIgR3sg" name="obj" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Q7GGGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q7GGWUsEe6bAesDIgR3sg" name="canCombine" method="_6TvJuWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Q7GGmUsEe6bAesDIgR3sg" name="a2" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Q7tIGUsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q7tIWUsEe6bAesDIgR3sg" name="getCombinedExecutionDuration" method="_6TvwlGUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Q7tImUsEe6bAesDIgR3sg" name="a2" type="_6D9BEGUsEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_6Q7tI2UsEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q7tJGUsEe6bAesDIgR3sg" name="printEdges" visibility="private" method="_6TvwmmUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Q7tJWUsEe6bAesDIgR3sg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6Q7tJmUsEe6bAesDIgR3sg" name="edges" type="_6C3b8GUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Q7tKGUsEe6bAesDIgR3sg" name="printEdges" visibility="private" method="_6TvwnWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Q8UMGUsEe6bAesDIgR3sg" name="edges" type="_6C3b8GUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SaT0GUsEe6bAesDIgR3sg" name="addEdges" method="_6TvJk2UsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SaT0WUsEe6bAesDIgR3sg" name="edges" type="_6PSHUGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6SaT02UsEe6bAesDIgR3sg" name="addConflicts" method="_6TvJnWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6SaT1GUsEe6bAesDIgR3sg" name="conflicts" type="_6Qx8IWUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Sa64WUsEe6bAesDIgR3sg" name="addCoordinators" method="_6TvJoWUsEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6Sa64mUsEe6bAesDIgR3sg" name="coordinators" type="_6PSHUGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6Sa65GUsEe6bAesDIgR3sg" name="addScheduleTimes" method="_6TvJo2UsEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6T1QIGUsEe6bAesDIgR3sg">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_6Sa65WUsEe6bAesDIgR3sg" name="scheduleTime" type="_6PSHUGUsEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6RqF4GUsEe6bAesDIgR3sg" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_6RzP12UsEe6bAesDIgR3sg" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_6SEVkGUsEe6bAesDIgR3sg" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_6SFjsWUsEe6bAesDIgR3sg" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_6SPUsGUsEe6bAesDIgR3sg" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_6TxlyWUsEe6bAesDIgR3sg" name="" memberEnd="_6S1KkGUsEe6bAesDIgR3sg _6TxlymUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6TxlymUsEe6bAesDIgR3sg" name="" type="_6CiExGUsEe6bAesDIgR3sg" association="_6TxlyWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6Tza-mUsEe6bAesDIgR3sg" name="" memberEnd="_6TLI2mUsEe6bAesDIgR3sg _6Tza-2UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6Tza-2UsEe6bAesDIgR3sg" name="" type="_6DTg0GUsEe6bAesDIgR3sg" association="_6Tza-mUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T0CBmUsEe6bAesDIgR3sg" name="" memberEnd="_6TSdkWUsEe6bAesDIgR3sg _6T0CB2UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T0CB2UsEe6bAesDIgR3sg" name="" type="_6DqGIGUsEe6bAesDIgR3sg" association="_6T0CBmUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T0CCGUsEe6bAesDIgR3sg" name="" memberEnd="_6TSdkmUsEe6bAesDIgR3sg _6T0CCWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T0CCWUsEe6bAesDIgR3sg" name="" type="_6DqGIGUsEe6bAesDIgR3sg" association="_6T0CCGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T9L8GUsEe6bAesDIgR3sg" name="" memberEnd="_6T9L8WUsEe6bAesDIgR3sg _6SnvM2UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T9L8WUsEe6bAesDIgR3sg" name="" type="_6CYTwWUsEe6bAesDIgR3sg" association="_6T9L8GUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T9zAWUsEe6bAesDIgR3sg" name="" memberEnd="_6T9zAmUsEe6bAesDIgR3sg _6SnvNWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T9zAmUsEe6bAesDIgR3sg" name="" type="_6CYTwWUsEe6bAesDIgR3sg" association="_6T9zAWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T9zBGUsEe6bAesDIgR3sg" name="" memberEnd="_6T9zBWUsEe6bAesDIgR3sg _6SpkYWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T9zBWUsEe6bAesDIgR3sg" name="" type="_6CY60WUsEe6bAesDIgR3sg" association="_6T9zBGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T-aEWUsEe6bAesDIgR3sg" name="" memberEnd="_6T-aEmUsEe6bAesDIgR3sg _6SpkY2UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T-aEmUsEe6bAesDIgR3sg" name="" type="_6CY60WUsEe6bAesDIgR3sg" association="_6T-aEWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T-aFGUsEe6bAesDIgR3sg" name="" memberEnd="_6T-aFWUsEe6bAesDIgR3sg _6SqyhGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T-aFWUsEe6bAesDIgR3sg" name="" type="_6CZh4GUsEe6bAesDIgR3sg" association="_6T-aFGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T-aF2UsEe6bAesDIgR3sg" name="" memberEnd="_6T-aGGUsEe6bAesDIgR3sg _6SsAomUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T-aGGUsEe6bAesDIgR3sg" name="" type="_6CbXEGUsEe6bAesDIgR3sg" association="_6T-aF2UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T-aGmUsEe6bAesDIgR3sg" name="" memberEnd="_6T-aG2UsEe6bAesDIgR3sg _6SvD8WUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T-aG2UsEe6bAesDIgR3sg" name="" type="_6CbXEGUsEe6bAesDIgR3sg" association="_6T-aGmUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T_BIWUsEe6bAesDIgR3sg" name="" memberEnd="_6T_BImUsEe6bAesDIgR3sg _6Sz8cGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T_BImUsEe6bAesDIgR3sg" name="" type="_6CfBcGUsEe6bAesDIgR3sg" association="_6T_BIWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T_BJGUsEe6bAesDIgR3sg" name="" memberEnd="_6T_BJWUsEe6bAesDIgR3sg _6Sz8dmUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T_BJWUsEe6bAesDIgR3sg" name="" type="_6CfBcGUsEe6bAesDIgR3sg" association="_6T_BJGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T_BJ2UsEe6bAesDIgR3sg" name="" memberEnd="_6T_BKGUsEe6bAesDIgR3sg _6S1xoWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T_BKGUsEe6bAesDIgR3sg" name="" type="_6ClvIGUsEe6bAesDIgR3sg" association="_6T_BJ2UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T_BKmUsEe6bAesDIgR3sg" name="" memberEnd="_6T_BK2UsEe6bAesDIgR3sg _6S2_xGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T_BK2UsEe6bAesDIgR3sg" name="" type="_6Cm9QGUsEe6bAesDIgR3sg" association="_6T_BKmUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T_oMGUsEe6bAesDIgR3sg" name="" memberEnd="_6T_oMWUsEe6bAesDIgR3sg _6S3m02UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T_oMWUsEe6bAesDIgR3sg" name="" type="_6Cm9QGUsEe6bAesDIgR3sg" association="_6T_oMGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T_oM2UsEe6bAesDIgR3sg" name="" memberEnd="_6T_oNGUsEe6bAesDIgR3sg _6S4N4GUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T_oNGUsEe6bAesDIgR3sg" name="" type="_6CoycGUsEe6bAesDIgR3sg" association="_6T_oM2UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T_oNmUsEe6bAesDIgR3sg" name="" memberEnd="_6T_oN2UsEe6bAesDIgR3sg _6S4N4mUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T_oN2UsEe6bAesDIgR3sg" name="" type="_6CpZgGUsEe6bAesDIgR3sg" association="_6T_oNmUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T_oOWUsEe6bAesDIgR3sg" name="" memberEnd="_6T_oOmUsEe6bAesDIgR3sg _6S4N5GUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T_oOmUsEe6bAesDIgR3sg" name="" type="_6CpZgGUsEe6bAesDIgR3sg" association="_6T_oOWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6T_oPGUsEe6bAesDIgR3sg" name="" memberEnd="_6T_oPWUsEe6bAesDIgR3sg _6S4082UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6T_oPWUsEe6bAesDIgR3sg" name="" type="_6CqnoGUsEe6bAesDIgR3sg" association="_6T_oPGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UA2UWUsEe6bAesDIgR3sg" name="" memberEnd="_6UA2UmUsEe6bAesDIgR3sg _6S8fUGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UA2UmUsEe6bAesDIgR3sg" name="" type="_6Csc1mUsEe6bAesDIgR3sg" association="_6UA2UWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UA2VGUsEe6bAesDIgR3sg" name="" memberEnd="_6UA2VWUsEe6bAesDIgR3sg _6S8fUmUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UA2VWUsEe6bAesDIgR3sg" name="" type="_6Csc1mUsEe6bAesDIgR3sg" association="_6UA2VGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UA2V2UsEe6bAesDIgR3sg" name="" memberEnd="_6UA2WGUsEe6bAesDIgR3sg _6S9GYWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UA2WGUsEe6bAesDIgR3sg" name="" type="_6Csc1mUsEe6bAesDIgR3sg" association="_6UA2V2UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UBdYWUsEe6bAesDIgR3sg" name="" memberEnd="_6UBdYmUsEe6bAesDIgR3sg _6S9GY2UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UBdYmUsEe6bAesDIgR3sg" name="" type="_6Csc1mUsEe6bAesDIgR3sg" association="_6UBdYWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UBdZGUsEe6bAesDIgR3sg" name="" memberEnd="_6UBdZWUsEe6bAesDIgR3sg _6S9GZWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UBdZWUsEe6bAesDIgR3sg" name="" type="_6Csc1mUsEe6bAesDIgR3sg" association="_6UBdZGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UBdZ2UsEe6bAesDIgR3sg" name="" memberEnd="_6UBdaGUsEe6bAesDIgR3sg _6S9tdmUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UBdaGUsEe6bAesDIgR3sg" name="" type="_6CtD5mUsEe6bAesDIgR3sg" association="_6UBdZ2UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UBdamUsEe6bAesDIgR3sg" name="" memberEnd="_6UBda2UsEe6bAesDIgR3sg _6S9teGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UBda2UsEe6bAesDIgR3sg" name="" type="_6CtD5mUsEe6bAesDIgR3sg" association="_6UBdamUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UBdbWUsEe6bAesDIgR3sg" name="" memberEnd="_6UBdbmUsEe6bAesDIgR3sg _6S-UhWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UBdbmUsEe6bAesDIgR3sg" name="" type="_6CuSAmUsEe6bAesDIgR3sg" association="_6UBdbWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UCEcWUsEe6bAesDIgR3sg" name="" memberEnd="_6UCEcmUsEe6bAesDIgR3sg _6S_ipmUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UCEcmUsEe6bAesDIgR3sg" name="" type="_6CxVUmUsEe6bAesDIgR3sg" association="_6UCEcWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UCEdGUsEe6bAesDIgR3sg" name="" memberEnd="_6UCEdWUsEe6bAesDIgR3sg _6S_iqmUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UCEdWUsEe6bAesDIgR3sg" name="" type="_6CxVUmUsEe6bAesDIgR3sg" association="_6UCEdGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UCEd2UsEe6bAesDIgR3sg" name="" memberEnd="_6UCEeGUsEe6bAesDIgR3sg _6TAJtmUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UCEeGUsEe6bAesDIgR3sg" name="" type="_6C1mwGUsEe6bAesDIgR3sg" association="_6UCEd2UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UCEemUsEe6bAesDIgR3sg" name="" memberEnd="_6UCEe2UsEe6bAesDIgR3sg _6TAJuGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UCEe2UsEe6bAesDIgR3sg" name="" type="_6C1mwGUsEe6bAesDIgR3sg" association="_6UCEemUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UCEfWUsEe6bAesDIgR3sg" name="" memberEnd="_6UCEfmUsEe6bAesDIgR3sg _6TBX1GUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UCEfmUsEe6bAesDIgR3sg" name="" type="_6C5RK2UsEe6bAesDIgR3sg" association="_6UCEfWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UCEgGUsEe6bAesDIgR3sg" name="" memberEnd="_6UCEgWUsEe6bAesDIgR3sg _6TBX1mUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UCEgWUsEe6bAesDIgR3sg" name="" type="_6C5RK2UsEe6bAesDIgR3sg" association="_6UCEgGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UCrgWUsEe6bAesDIgR3sg" name="" memberEnd="_6UCrgmUsEe6bAesDIgR3sg _6TBX2mUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UCrgmUsEe6bAesDIgR3sg" name="" type="_6C54MGUsEe6bAesDIgR3sg" association="_6UCrgWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UCrhGUsEe6bAesDIgR3sg" name="" memberEnd="_6UCrhWUsEe6bAesDIgR3sg _6TDNBmUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UCrhWUsEe6bAesDIgR3sg" name="" type="_6DE3VGUsEe6bAesDIgR3sg" association="_6UCrhGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UCrh2UsEe6bAesDIgR3sg" name="" memberEnd="_6UCriGUsEe6bAesDIgR3sg _6TDNCGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UCriGUsEe6bAesDIgR3sg" name="" type="_6DE3VGUsEe6bAesDIgR3sg" association="_6UCrh2UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UCrimUsEe6bAesDIgR3sg" name="" memberEnd="_6UCri2UsEe6bAesDIgR3sg _6TD0E2UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UCri2UsEe6bAesDIgR3sg" name="" type="_6DH6oGUsEe6bAesDIgR3sg" association="_6UCrimUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UCrjWUsEe6bAesDIgR3sg" name="" memberEnd="_6UCrjmUsEe6bAesDIgR3sg _6TD0FWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UCrjmUsEe6bAesDIgR3sg" name="" type="_6DH6oGUsEe6bAesDIgR3sg" association="_6UCrjWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UDSkWUsEe6bAesDIgR3sg" name="" memberEnd="_6UDSkmUsEe6bAesDIgR3sg _6TEbIWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UDSkmUsEe6bAesDIgR3sg" name="" type="_6DH6oGUsEe6bAesDIgR3sg" association="_6UDSkWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UDSlGUsEe6bAesDIgR3sg" name="" memberEnd="_6UDSlWUsEe6bAesDIgR3sg _6TEbKWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UDSlWUsEe6bAesDIgR3sg" name="" type="_6DH6oGUsEe6bAesDIgR3sg" association="_6UDSlGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UDSl2UsEe6bAesDIgR3sg" name="" memberEnd="_6UDSmGUsEe6bAesDIgR3sg _6TFCMGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UDSmGUsEe6bAesDIgR3sg" name="" type="_6DH6oGUsEe6bAesDIgR3sg" association="_6UDSl2UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UDSmmUsEe6bAesDIgR3sg" name="" memberEnd="_6UDSm2UsEe6bAesDIgR3sg _6TFCM2UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UDSm2UsEe6bAesDIgR3sg" name="" type="_6DH6oGUsEe6bAesDIgR3sg" association="_6UDSmmUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UDSnWUsEe6bAesDIgR3sg" name="" memberEnd="_6UDSnmUsEe6bAesDIgR3sg _6TFCNmUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UDSnmUsEe6bAesDIgR3sg" name="" type="_6DH6oGUsEe6bAesDIgR3sg" association="_6UDSnWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UD5oWUsEe6bAesDIgR3sg" name="" memberEnd="_6UD5omUsEe6bAesDIgR3sg _6TFpQGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UD5omUsEe6bAesDIgR3sg" name="" type="_6DKW4GUsEe6bAesDIgR3sg" association="_6UD5oWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UD5pGUsEe6bAesDIgR3sg" name="" memberEnd="_6UD5pWUsEe6bAesDIgR3sg _6TJTqWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UD5pWUsEe6bAesDIgR3sg" name="" type="_6DRElGUsEe6bAesDIgR3sg" association="_6UD5pGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UD5p2UsEe6bAesDIgR3sg" name="" memberEnd="_6UD5qGUsEe6bAesDIgR3sg _6TJ6smUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UD5qGUsEe6bAesDIgR3sg" name="" type="_6DRElGUsEe6bAesDIgR3sg" association="_6UD5p2UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UD5qmUsEe6bAesDIgR3sg" name="" memberEnd="_6UD5q2UsEe6bAesDIgR3sg _6TLv4GUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UD5q2UsEe6bAesDIgR3sg" name="" type="_6DTg0GUsEe6bAesDIgR3sg" association="_6UD5qmUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UD5rWUsEe6bAesDIgR3sg" name="" memberEnd="_6UD5rmUsEe6bAesDIgR3sg _6TLv42UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UD5rmUsEe6bAesDIgR3sg" name="" type="_6DTg0GUsEe6bAesDIgR3sg" association="_6UD5rWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UEgsWUsEe6bAesDIgR3sg" name="" memberEnd="_6UEgsmUsEe6bAesDIgR3sg _6TMW-GUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UEgsmUsEe6bAesDIgR3sg" name="" type="_6DaOgGUsEe6bAesDIgR3sg" association="_6UEgsWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UEgtGUsEe6bAesDIgR3sg" name="" memberEnd="_6UEgtWUsEe6bAesDIgR3sg _6TM-AWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UEgtWUsEe6bAesDIgR3sg" name="" type="_6DaOgGUsEe6bAesDIgR3sg" association="_6UEgtGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UEgt2UsEe6bAesDIgR3sg" name="" memberEnd="_6UEguGUsEe6bAesDIgR3sg _6TM-A2UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UEguGUsEe6bAesDIgR3sg" name="" type="_6DaOgGUsEe6bAesDIgR3sg" association="_6UEgt2UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UEgumUsEe6bAesDIgR3sg" name="" memberEnd="_6UEgu2UsEe6bAesDIgR3sg _6TOMIGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UEgu2UsEe6bAesDIgR3sg" name="" type="_6DaOgGUsEe6bAesDIgR3sg" association="_6UEgumUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UFHwGUsEe6bAesDIgR3sg" name="" memberEnd="_6UFHwWUsEe6bAesDIgR3sg _6TOzMWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UFHwWUsEe6bAesDIgR3sg" name="" type="_6DaOgGUsEe6bAesDIgR3sg" association="_6UFHwGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UFHw2UsEe6bAesDIgR3sg" name="" memberEnd="_6UFHxGUsEe6bAesDIgR3sg _6TPaQGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UFHxGUsEe6bAesDIgR3sg" name="" type="_6Dj_gGUsEe6bAesDIgR3sg" association="_6UFHw2UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UFHxmUsEe6bAesDIgR3sg" name="" memberEnd="_6UFHx2UsEe6bAesDIgR3sg _6TPaQmUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UFHx2UsEe6bAesDIgR3sg" name="" type="_6Dj_gGUsEe6bAesDIgR3sg" association="_6UFHxmUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UFHyWUsEe6bAesDIgR3sg" name="" memberEnd="_6UFHymUsEe6bAesDIgR3sg _6TQBUWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UFHymUsEe6bAesDIgR3sg" name="" type="_6Dj_gGUsEe6bAesDIgR3sg" association="_6UFHyWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UFHzGUsEe6bAesDIgR3sg" name="" memberEnd="_6UFHzWUsEe6bAesDIgR3sg _6TQBU2UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UFHzWUsEe6bAesDIgR3sg" name="" type="_6Dj_gGUsEe6bAesDIgR3sg" association="_6UFHzGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UFu0WUsEe6bAesDIgR3sg" name="" memberEnd="_6UFu0mUsEe6bAesDIgR3sg _6TQBVWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UFu0mUsEe6bAesDIgR3sg" name="" type="_6Dj_gGUsEe6bAesDIgR3sg" association="_6UFu0WUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UFu1GUsEe6bAesDIgR3sg" name="" memberEnd="_6UFu1WUsEe6bAesDIgR3sg _6TSdlWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UFu1WUsEe6bAesDIgR3sg" name="" type="_6DqGIGUsEe6bAesDIgR3sg" association="_6UFu1GUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UFu12UsEe6bAesDIgR3sg" name="" memberEnd="_6UFu2GUsEe6bAesDIgR3sg _6TTEoWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UFu2GUsEe6bAesDIgR3sg" name="" type="_6DqGIGUsEe6bAesDIgR3sg" association="_6UFu12UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UFu2mUsEe6bAesDIgR3sg" name="" memberEnd="_6UFu22UsEe6bAesDIgR3sg _6TTrsGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UFu22UsEe6bAesDIgR3sg" name="" type="_6DypAGUsEe6bAesDIgR3sg" association="_6UFu2mUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UGV4WUsEe6bAesDIgR3sg" name="" memberEnd="_6UGV4mUsEe6bAesDIgR3sg _6TTrsmUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UGV4mUsEe6bAesDIgR3sg" name="" type="_6DypAGUsEe6bAesDIgR3sg" association="_6UGV4WUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UGV5GUsEe6bAesDIgR3sg" name="" memberEnd="_6UGV5WUsEe6bAesDIgR3sg _6TTrtGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UGV5WUsEe6bAesDIgR3sg" name="" type="_6DypAGUsEe6bAesDIgR3sg" association="_6UGV5GUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UGV52UsEe6bAesDIgR3sg" name="" memberEnd="_6UGV6GUsEe6bAesDIgR3sg _6TUSxGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UGV6GUsEe6bAesDIgR3sg" name="" type="_6DypAGUsEe6bAesDIgR3sg" association="_6UGV52UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UGV6mUsEe6bAesDIgR3sg" name="" memberEnd="_6UGV62UsEe6bAesDIgR3sg _6TUSyWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UGV62UsEe6bAesDIgR3sg" name="" type="_6DypAGUsEe6bAesDIgR3sg" association="_6UGV6mUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UG88WUsEe6bAesDIgR3sg" name="" memberEnd="_6UG88mUsEe6bAesDIgR3sg _6TUSy2UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UG88mUsEe6bAesDIgR3sg" name="" type="_6DypAGUsEe6bAesDIgR3sg" association="_6UG88WUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UG89GUsEe6bAesDIgR3sg" name="" memberEnd="_6UG89WUsEe6bAesDIgR3sg _6TU50mUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UG89WUsEe6bAesDIgR3sg" name="" type="_6DypAGUsEe6bAesDIgR3sg" association="_6UG89GUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UG892UsEe6bAesDIgR3sg" name="" memberEnd="_6UG8-GUsEe6bAesDIgR3sg _6TVg4WUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UG8-GUsEe6bAesDIgR3sg" name="" type="_6DypAGUsEe6bAesDIgR3sg" association="_6UG892UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UG8-mUsEe6bAesDIgR3sg" name="" memberEnd="_6UG8-2UsEe6bAesDIgR3sg _6TWvAWUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UG8-2UsEe6bAesDIgR3sg" name="" type="_6D2TYGUsEe6bAesDIgR3sg" association="_6UG8-mUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UHkAWUsEe6bAesDIgR3sg" name="" memberEnd="_6UHkAmUsEe6bAesDIgR3sg _6TWvBGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UHkAmUsEe6bAesDIgR3sg" name="" type="_6D2TYGUsEe6bAesDIgR3sg" association="_6UHkAWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UHkBGUsEe6bAesDIgR3sg" name="" memberEnd="_6UHkBWUsEe6bAesDIgR3sg _6TWvB2UsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UHkBWUsEe6bAesDIgR3sg" name="" type="_6D2TYGUsEe6bAesDIgR3sg" association="_6UHkBGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UHkB2UsEe6bAesDIgR3sg" name="" memberEnd="_6UHkCGUsEe6bAesDIgR3sg _6TXWEmUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UHkCGUsEe6bAesDIgR3sg" name="" type="_6D2TYGUsEe6bAesDIgR3sg" association="_6UHkB2UsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UHkCmUsEe6bAesDIgR3sg" name="" memberEnd="_6UHkC2UsEe6bAesDIgR3sg _6TXWFGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UHkC2UsEe6bAesDIgR3sg" name="" type="_6D2TYGUsEe6bAesDIgR3sg" association="_6UHkCmUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UHkDWUsEe6bAesDIgR3sg" name="" memberEnd="_6UHkDmUsEe6bAesDIgR3sg _6TX9IGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UHkDmUsEe6bAesDIgR3sg" name="" type="_6D9BEGUsEe6bAesDIgR3sg" association="_6UHkDWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UILEWUsEe6bAesDIgR3sg" name="" memberEnd="_6UILEmUsEe6bAesDIgR3sg _6TX9ImUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UILEmUsEe6bAesDIgR3sg" name="" type="_6D9BEGUsEe6bAesDIgR3sg" association="_6UILEWUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_6UILFGUsEe6bAesDIgR3sg" name="" memberEnd="_6UILFWUsEe6bAesDIgR3sg _6TX9JGUsEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_6UILFWUsEe6bAesDIgR3sg" name="" type="_6D9BEGUsEe6bAesDIgR3sg" association="_6UILFGUsEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Dn5C4HLKEe6Y3e8f6FsdUw" name="" memberEnd="_Dn5C4XLKEe6Y3e8f6FsdUw _Dn0xcnLKEe6Y3e8f6FsdUw">
              <ownedEnd xmi:id="_Dn5C4XLKEe6Y3e8f6FsdUw" name="" type="_6Csc1mUsEe6bAesDIgR3sg" association="_Dn5C4HLKEe6Y3e8f6FsdUw"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_6BN2JWUsEe6bAesDIgR3sg" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_6PimAGUsEe6bAesDIgR3sg" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_6PimAmUsEe6bAesDIgR3sg" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_6PimBGUsEe6bAesDIgR3sg" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_6SLqUWUsEe6bAesDIgR3sg" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_6Bm3sGUsEe6bAesDIgR3sg" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_6QhdcGUsEe6bAesDIgR3sg" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_6BDeEGUsEe6bAesDIgR3sg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_6BDeEWUsEe6bAesDIgR3sg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_6BI9oGUsEe6bAesDIgR3sg" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_6PUjkmUsEe6bAesDIgR3sg" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_6BrJIGUsEe6bAesDIgR3sg" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_6Qx8JWUsEe6bAesDIgR3sg" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_6C3b9mUsEe6bAesDIgR3sg" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6PKLgGUsEe6bAesDIgR3sg" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6PSHUGUsEe6bAesDIgR3sg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6PSHUmUsEe6bAesDIgR3sg" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_6PUjkGUsEe6bAesDIgR3sg" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_6PbRRmUsEe6bAesDIgR3sg" name="Comparator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6P3WIWUsEe6bAesDIgR3sg" name="Scanner"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_6P9cwGUsEe6bAesDIgR3sg" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6QY6kGUsEe6bAesDIgR3sg" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_6QbW0GUsEe6bAesDIgR3sg" name="Queue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6QlH0GUsEe6bAesDIgR3sg" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6QxVEGUsEe6bAesDIgR3sg" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_6QxVEmUsEe6bAesDIgR3sg" name="List"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_6Qx8IWUsEe6bAesDIgR3sg" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6Qx8I2UsEe6bAesDIgR3sg" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6BNPE2UsEe6bAesDIgR3sg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_6Pe7oWUsEe6bAesDIgR3sg" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6PfisWUsEe6bAesDIgR3sg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6PuzQWUsEe6bAesDIgR3sg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6PvaUWUsEe6bAesDIgR3sg" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6BNPFGUsEe6bAesDIgR3sg" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_6BNPFWUsEe6bAesDIgR3sg" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_6PgJwWUsEe6bAesDIgR3sg" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_6PgJw2UsEe6bAesDIgR3sg" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_6PgJxWUsEe6bAesDIgR3sg" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6BRggGUsEe6bAesDIgR3sg" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_6PtlIGUsEe6bAesDIgR3sg" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6RmbgGUsEe6bAesDIgR3sg" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_6RmbgWUsEe6bAesDIgR3sg" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6RtwQGUsEe6bAesDIgR3sg" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_6R3hQGUsEe6bAesDIgR3sg" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_6BNPEGUsEe6bAesDIgR3sg" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_6BNPEWUsEe6bAesDIgR3sg" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_6BNPEmUsEe6bAesDIgR3sg" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_6PeUkGUsEe6bAesDIgR3sg" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_6BNPFmUsEe6bAesDIgR3sg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_6BNPF2UsEe6bAesDIgR3sg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_6BSHkGUsEe6bAesDIgR3sg" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_6PuMNGUsEe6bAesDIgR3sg" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_6PuMNmUsEe6bAesDIgR3sg" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_6Pgw0WUsEe6bAesDIgR3sg" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6PtlImUsEe6bAesDIgR3sg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6PuMMGUsEe6bAesDIgR3sg" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6PuMMmUsEe6bAesDIgR3sg" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_6BN2IGUsEe6bAesDIgR3sg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_6BN2IWUsEe6bAesDIgR3sg" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_6BN2ImUsEe6bAesDIgR3sg" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_6BN2I2UsEe6bAesDIgR3sg" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_6BN2JGUsEe6bAesDIgR3sg" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_6Ph-8WUsEe6bAesDIgR3sg" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_6Ph-82UsEe6bAesDIgR3sg" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_6PhX4GUsEe6bAesDIgR3sg" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_6PhX4mUsEe6bAesDIgR3sg" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_6PhX5GUsEe6bAesDIgR3sg" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_6BOdOWUsEe6bAesDIgR3sg" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_6Pj0IGUsEe6bAesDIgR3sg" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6PkbMmUsEe6bAesDIgR3sg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6PkbOWUsEe6bAesDIgR3sg" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6PlCRmUsEe6bAesDIgR3sg" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6PlpVWUsEe6bAesDIgR3sg" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6PmQYmUsEe6bAesDIgR3sg" name="PhaseContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6Pm3c2UsEe6bAesDIgR3sg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6PnegGUsEe6bAesDIgR3sg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6Pneh2UsEe6bAesDIgR3sg" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6Prv8WUsEe6bAesDIgR3sg" name="WarpContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_6BgKAGUsEe6bAesDIgR3sg" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_6QQ-wGUsEe6bAesDIgR3sg" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6QRl0WUsEe6bAesDIgR3sg" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6QRl02UsEe6bAesDIgR3sg" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6QSM4WUsEe6bAesDIgR3sg" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6QSM42UsEe6bAesDIgR3sg" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_6BimQGUsEe6bAesDIgR3sg" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_6QVQMGUsEe6bAesDIgR3sg" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6QV3RWUsEe6bAesDIgR3sg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6QWeUmUsEe6bAesDIgR3sg" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6QWeWWUsEe6bAesDIgR3sg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6QXFZmUsEe6bAesDIgR3sg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6QXsc2UsEe6bAesDIgR3sg" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="_i6xswGUxEe6bAesDIgR3sg" name="programTable"/>
    <profileApplication xmi:id="_5fYUY2UsEe6bAesDIgR3sg">
      <eAnnotations xmi:id="_5fYUZGUsEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_5fYUZWUsEe6bAesDIgR3sg" base_Package="_5b1RIGUsEe6bAesDIgR3sg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_6CXssGUsEe6bAesDIgR3sg" genericsValue="T,E" base_Element="_6CXFoGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6CawAGUsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6CaI-2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6Cb-I2UsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6Cb-ImUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6CfogWUsEe6bAesDIgR3sg" base_Element="_6CfogGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6CfogmUsEe6bAesDIgR3sg" base_Element="_6CfogGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Cfog2UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6CfohWUsEe6bAesDIgR3sg" base_Element="_6CfohGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6CfohmUsEe6bAesDIgR3sg" base_Element="_6CfohGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Cfoh2UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6CgPkGUsEe6bAesDIgR3sg" base_Element="_6CfoiGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6CgPkWUsEe6bAesDIgR3sg" base_Element="_6CfoiGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6CgPkmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6Cg2omUsEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_6Cg2oWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6CiEwWUsEe6bAesDIgR3sg" base_Element="_6ChdumUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6CiEwmUsEe6bAesDIgR3sg" base_Element="_6ChdumUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6CiEw2UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Cir0WUsEe6bAesDIgR3sg" base_Element="_6Cir0GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6CjS5WUsEe6bAesDIgR3sg" base_Element="_6CjS42UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6CjS5mUsEe6bAesDIgR3sg" base_Element="_6CjS42UsEe6bAesDIgR3sg">
    <annotations xmi:id="_6CjS52UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6CjS6mUsEe6bAesDIgR3sg" base_Element="_6CjS6GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6CjS62UsEe6bAesDIgR3sg" base_Element="_6CjS6GUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6CjS7GUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6CjS7mUsEe6bAesDIgR3sg" base_Element="_6CjS7WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Cj58GUsEe6bAesDIgR3sg" base_Element="_6CjS7WUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Cj58WUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Cm9QmUsEe6bAesDIgR3sg" base_Element="_6Cm9QWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6CnkUGUsEe6bAesDIgR3sg" base_Element="_6Cm9QWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6CnkUWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_6CqAmWUsEe6bAesDIgR3sg" dimensions="2" base_Element="_6CqAk2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6Ctq8WUsEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_6Ctq8GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6CuSAWUsEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_6CuSAGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Cu5GWUsEe6bAesDIgR3sg" base_Element="_6Cu5F2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Cu5GmUsEe6bAesDIgR3sg" base_Element="_6Cu5F2UsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Cu5G2UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6CvgJmUsEe6bAesDIgR3sg" base_Element="_6CvgJGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6CvgJ2UsEe6bAesDIgR3sg" base_Element="_6CvgJGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6CvgKGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6CvgKmUsEe6bAesDIgR3sg" base_Element="_6CvgKWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6CvgK2UsEe6bAesDIgR3sg" base_Element="_6CvgKWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6CvgLGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6CwuSmUsEe6bAesDIgR3sg" base_Element="_6CwuSWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6CwuS2UsEe6bAesDIgR3sg" base_Element="_6CwuSWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6CwuTGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6CxVUWUsEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_6CxVUGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Cx8ZmUsEe6bAesDIgR3sg" base_Element="_6Cx8ZWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Cx8Z2UsEe6bAesDIgR3sg" base_Element="_6Cx8ZWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Cx8aGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Cx8amUsEe6bAesDIgR3sg" base_Element="_6Cx8aWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Cx8a2UsEe6bAesDIgR3sg" base_Element="_6Cx8aWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Cx8bGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6CyjcWUsEe6bAesDIgR3sg" base_Element="_6Cx8bWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6CyjcmUsEe6bAesDIgR3sg" base_Element="_6Cx8bWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Cyjc2UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6CzKgmUsEe6bAesDIgR3sg" base_Element="_6CzKgWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6CzKg2UsEe6bAesDIgR3sg" base_Element="_6CzKgWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6CzKhGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6C0YoWUsEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_6C0YoGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6C1mwmUsEe6bAesDIgR3sg" base_Element="_6C1mwWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6C1mw2UsEe6bAesDIgR3sg" base_Element="_6C1mwWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6C1mxGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6C1mxmUsEe6bAesDIgR3sg" base_Element="_6C1mxWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6C1mx2UsEe6bAesDIgR3sg" base_Element="_6C1mxWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6C1myGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6C2N0GUsEe6bAesDIgR3sg" base_Element="_6C1myWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6C2N0WUsEe6bAesDIgR3sg" base_Element="_6C1myWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6C2N0mUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_6C2N1mUsEe6bAesDIgR3sg" base_Element="_6C2N02UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6C2N12UsEe6bAesDIgR3sg" base_Element="_6C2N02UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6C2N2GUsEe6bAesDIgR3sg" base_Element="_6C2N02UsEe6bAesDIgR3sg">
    <annotations xmi:id="_6C2N2WUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_6C2N3WUsEe6bAesDIgR3sg" dimensions="2" base_Element="_6C2N2mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6C2N3mUsEe6bAesDIgR3sg" base_Element="_6C2N2mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6C2N32UsEe6bAesDIgR3sg" base_Element="_6C2N2mUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6C2N4GUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6C204WUsEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_6C204GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6C3b8WUsEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_6C3b8GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6C4DAGUsEe6bAesDIgR3sg" base_Element="_6C3b9mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6C4DAmUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6C4DAWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6C6fQGUsEe6bAesDIgR3sg" base_Element="_6C54MWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6C6fQWUsEe6bAesDIgR3sg" base_Element="_6C54MWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6C6fQmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6C7GUGUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6C6fRGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6C-JoGUsEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_6C9il2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6C-wsGUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6C-JoWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6C_-2GUsEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_6C_-12UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6DBM8WUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6DBM8GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DB0AGUsEe6bAesDIgR3sg" base_Element="_6DBM82UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6DDCIWUsEe6bAesDIgR3sg" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_6DDCIGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DEQQmUsEe6bAesDIgR3sg" base_Element="_6DEQQWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DEQS2UsEe6bAesDIgR3sg" base_Element="_6DEQSmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DIhsWUsEe6bAesDIgR3sg" base_Element="_6DIhsGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DJIwGUsEe6bAesDIgR3sg" base_Element="_6DIhsGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DJIwWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DJIw2UsEe6bAesDIgR3sg" base_Element="_6DJIwmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DJIxGUsEe6bAesDIgR3sg" base_Element="_6DJIwmUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DJIxWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DJIyGUsEe6bAesDIgR3sg" base_Element="_6DJIxmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DJIyWUsEe6bAesDIgR3sg" base_Element="_6DJIxmUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DJIymUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_6DLlBWUsEe6bAesDIgR3sg" base_Element="_6DLlAmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_6DLlCWUsEe6bAesDIgR3sg" dimensions="2" base_Element="_6DLlBmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_6DNaNmUsEe6bAesDIgR3sg" base_Element="_6DNaNGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6DREk2UsEe6bAesDIgR3sg" genericsValue="InstructionParameters" base_Element="_6DREkWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6DRrpWUsEe6bAesDIgR3sg" genericsValue="InstructionParameters" base_Element="_6DRrpGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6DUu-2UsEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_6DUu-mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Def82UsEe6bAesDIgR3sg" base_Element="_6Def8WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Def9GUsEe6bAesDIgR3sg" base_Element="_6Def8WUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Def9WUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DfHAmUsEe6bAesDIgR3sg" base_Element="_6DfHAGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DfHA2UsEe6bAesDIgR3sg" base_Element="_6DfHAGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DfHBGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DfHB2UsEe6bAesDIgR3sg" base_Element="_6DfHBWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DfHCGUsEe6bAesDIgR3sg" base_Element="_6DfHBWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DfHCWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DfuFWUsEe6bAesDIgR3sg" base_Element="_6DfuFGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DfuFmUsEe6bAesDIgR3sg" base_Element="_6DfuFGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DfuF2UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DfuGWUsEe6bAesDIgR3sg" base_Element="_6DfuGGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DfuGmUsEe6bAesDIgR3sg" base_Element="_6DfuGGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DfuG2UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DgVImUsEe6bAesDIgR3sg" base_Element="_6DgVIGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DgVI2UsEe6bAesDIgR3sg" base_Element="_6DgVIGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DgVJGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DgVJ2UsEe6bAesDIgR3sg" base_Element="_6DgVJWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DgVKGUsEe6bAesDIgR3sg" base_Element="_6DgVJWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DgVKWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Dg8MWUsEe6bAesDIgR3sg" base_Element="_6DgVK2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Dg8MmUsEe6bAesDIgR3sg" base_Element="_6DgVK2UsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Dg8M2UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6Dg8NWUsEe6bAesDIgR3sg" genericsValue="String, Integer" base_Element="_6Dg8NGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DlNoGUsEe6bAesDIgR3sg" base_Element="_6DkmkGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DlNoWUsEe6bAesDIgR3sg" base_Element="_6DkmkGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DlNomUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DlNpGUsEe6bAesDIgR3sg" base_Element="_6DlNo2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DlNpWUsEe6bAesDIgR3sg" base_Element="_6DlNo2UsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DlNpmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DlNqGUsEe6bAesDIgR3sg" base_Element="_6DlNp2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Dl0sGUsEe6bAesDIgR3sg" base_Element="_6DlNp2UsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Dl0sWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Dl0s2UsEe6bAesDIgR3sg" base_Element="_6Dl0smUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Dl0tGUsEe6bAesDIgR3sg" base_Element="_6Dl0smUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Dl0tWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Dl0t2UsEe6bAesDIgR3sg" base_Element="_6Dl0tmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Dl0uGUsEe6bAesDIgR3sg" base_Element="_6Dl0tmUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Dl0uWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Dl0u2UsEe6bAesDIgR3sg" base_Element="_6Dl0umUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Dl0vGUsEe6bAesDIgR3sg" base_Element="_6Dl0umUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Dl0vWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DmbwWUsEe6bAesDIgR3sg" base_Element="_6Dl0vmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DmbwmUsEe6bAesDIgR3sg" base_Element="_6Dl0vmUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Dmbw2UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DmbxmUsEe6bAesDIgR3sg" base_Element="_6DmbxGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Dmbx2UsEe6bAesDIgR3sg" base_Element="_6DmbxGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DmbyGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Dmby2UsEe6bAesDIgR3sg" base_Element="_6DmbyWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DmbzGUsEe6bAesDIgR3sg" base_Element="_6DmbyWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DnC0GUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DnC0mUsEe6bAesDIgR3sg" base_Element="_6DnC0WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DnC02UsEe6bAesDIgR3sg" base_Element="_6DnC0WUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DnC1GUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DnC1mUsEe6bAesDIgR3sg" base_Element="_6DnC1WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DnC12UsEe6bAesDIgR3sg" base_Element="_6DnC1WUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DnC2GUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DnC22UsEe6bAesDIgR3sg" base_Element="_6DnC2WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Dnp4GUsEe6bAesDIgR3sg" base_Element="_6DnC2WUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Dnp4WUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Dnp5GUsEe6bAesDIgR3sg" base_Element="_6Dnp4mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Dnp5WUsEe6bAesDIgR3sg" base_Element="_6Dnp4mUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Dnp5mUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Dnp6WUsEe6bAesDIgR3sg" base_Element="_6Dnp52UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Dnp6mUsEe6bAesDIgR3sg" base_Element="_6Dnp52UsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Dnp62UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DoQ8WUsEe6bAesDIgR3sg" base_Element="_6Dnp7GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DoQ8mUsEe6bAesDIgR3sg" base_Element="_6Dnp7GUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DoQ82UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6DoQ9WUsEe6bAesDIgR3sg" base_Element="_6DoQ9GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6DoQ9mUsEe6bAesDIgR3sg" base_Element="_6DoQ9GUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6DoQ92UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_6DuXmWUsEe6bAesDIgR3sg" base_Element="_6DuXlmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_6Du-pGUsEe6bAesDIgR3sg" base_Element="_6Du-oWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_6Du-rGUsEe6bAesDIgR3sg" base_Element="_6Du-qGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_6Dvlt2UsEe6bAesDIgR3sg" base_Element="_6Dvls2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6DzQEWUsEe6bAesDIgR3sg" genericsValue="String, Integer" base_Element="_6DzQEGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6Dz3IGUsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6DzQEmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_6Dz3JGUsEe6bAesDIgR3sg" base_Element="_6Dz3IWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6D4IlWUsEe6bAesDIgR3sg" genericsValue="Node" base_Element="_6D4IlGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6D4voWUsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6D4voGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6D5WsGUsEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_6D4vomUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6D6k0WUsEe6bAesDIgR3sg" base_Element="_6D59xGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6D6k0mUsEe6bAesDIgR3sg" base_Element="_6D59xGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6D6k02UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6D9oJGUsEe6bAesDIgR3sg" base_Element="_6D9oI2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6D9oJWUsEe6bAesDIgR3sg" base_Element="_6D9oI2UsEe6bAesDIgR3sg">
    <annotations xmi:id="_6D9oJmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6D-PMWUsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6D-PMGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6D-2QGUsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6D-PMmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6D-2QmUsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6D-2QWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6D_dUGUsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6D-2Q2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6EAEYGUsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6D_dUWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PKykGUsEe6bAesDIgR3sg" base_Element="_6PKLgGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6PMnwGUsEe6bAesDIgR3sg" genericsValue="String, Activation" base_Element="_6PMAsGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PSHUWUsEe6bAesDIgR3sg" base_Element="_6PSHUGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PSHU2UsEe6bAesDIgR3sg" base_Element="_6PSHUmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PUjkWUsEe6bAesDIgR3sg" base_Element="_6PUjkGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PVKoGUsEe6bAesDIgR3sg" base_Element="_6PUjkmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6PZcEGUsEe6bAesDIgR3sg" base_Element="_6PY1BWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6PZcEWUsEe6bAesDIgR3sg" base_Element="_6PY1BWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6PZcEmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6Pb4UGUsEe6bAesDIgR3sg" base_Element="_6PbRRmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6PdGc2UsEe6bAesDIgR3sg" base_Element="_6PdGcGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6PdtgGUsEe6bAesDIgR3sg" base_Element="_6PdGcGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6PdtgWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6Pe7oGUsEe6bAesDIgR3sg" base_Element="_6PeUkGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PfisGUsEe6bAesDIgR3sg" base_Element="_6Pe7oWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PgJwGUsEe6bAesDIgR3sg" base_Element="_6PfisWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PgJwmUsEe6bAesDIgR3sg" base_Element="_6PgJwWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PgJxGUsEe6bAesDIgR3sg" base_Element="_6PgJw2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6Pgw0GUsEe6bAesDIgR3sg" base_Element="_6PgJxWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6Pgw0mUsEe6bAesDIgR3sg" base_Element="_6Pgw0WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PhX4WUsEe6bAesDIgR3sg" base_Element="_6PhX4GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PhX42UsEe6bAesDIgR3sg" base_Element="_6PhX4mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6Ph-8GUsEe6bAesDIgR3sg" base_Element="_6PhX5GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6Ph-8mUsEe6bAesDIgR3sg" base_Element="_6Ph-8WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6Ph-9GUsEe6bAesDIgR3sg" base_Element="_6Ph-82UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PimAWUsEe6bAesDIgR3sg" base_Element="_6PimAGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PimA2UsEe6bAesDIgR3sg" base_Element="_6PimAmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PjNEGUsEe6bAesDIgR3sg" base_Element="_6PimBGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6Pj0IWUsEe6bAesDIgR3sg" base_Element="_6Pj0IGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Pj0JGUsEe6bAesDIgR3sg" base_Element="_6Pj0ImUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6PkbMGUsEe6bAesDIgR3sg" base_Element="_6Pj0ImUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6PkbMWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6PkbM2UsEe6bAesDIgR3sg" base_Element="_6PkbMmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6PkbNmUsEe6bAesDIgR3sg" base_Element="_6PkbNGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6PkbN2UsEe6bAesDIgR3sg" base_Element="_6PkbNGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6PkbOGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6PlCQGUsEe6bAesDIgR3sg" base_Element="_6PkbOWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6PlCQ2UsEe6bAesDIgR3sg" base_Element="_6PlCQWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6PlCRGUsEe6bAesDIgR3sg" base_Element="_6PlCQWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6PlCRWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6PlCR2UsEe6bAesDIgR3sg" base_Element="_6PlCRmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6PlpUmUsEe6bAesDIgR3sg" base_Element="_6PlpUGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6PlpU2UsEe6bAesDIgR3sg" base_Element="_6PlpUGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6PlpVGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6PlpVmUsEe6bAesDIgR3sg" base_Element="_6PlpVWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6PlpWWUsEe6bAesDIgR3sg" base_Element="_6PlpV2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6PmQYGUsEe6bAesDIgR3sg" base_Element="_6PlpV2UsEe6bAesDIgR3sg">
    <annotations xmi:id="_6PmQYWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6PmQY2UsEe6bAesDIgR3sg" base_Element="_6PmQYmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Pm3cGUsEe6bAesDIgR3sg" base_Element="_6PmQZGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Pm3cWUsEe6bAesDIgR3sg" base_Element="_6PmQZGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Pm3cmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6Pm3dGUsEe6bAesDIgR3sg" base_Element="_6Pm3c2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Pm3d2UsEe6bAesDIgR3sg" base_Element="_6Pm3dWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Pm3eGUsEe6bAesDIgR3sg" base_Element="_6Pm3dWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Pm3eWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6PnegWUsEe6bAesDIgR3sg" base_Element="_6PnegGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6PnehGUsEe6bAesDIgR3sg" base_Element="_6PnegmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6PnehWUsEe6bAesDIgR3sg" base_Element="_6PnegmUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6PnehmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6PneiGUsEe6bAesDIgR3sg" base_Element="_6Pneh2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6PoFkWUsEe6bAesDIgR3sg" base_Element="_6PneiWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6PoFkmUsEe6bAesDIgR3sg" base_Element="_6PneiWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6PoFk2UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6PosoGUsEe6bAesDIgR3sg" genericsValue="String, Flow" base_Element="_6PoFlGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6PpTsGUsEe6bAesDIgR3sg" genericsValue="Node, Activation" base_Element="_6PosoWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6PrI6WUsEe6bAesDIgR3sg" base_Element="_6PrI52UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6PrI6mUsEe6bAesDIgR3sg" base_Element="_6PrI52UsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Prv8GUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6Prv8mUsEe6bAesDIgR3sg" base_Element="_6Prv8WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Prv9WUsEe6bAesDIgR3sg" base_Element="_6Prv82UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Prv9mUsEe6bAesDIgR3sg" base_Element="_6Prv82UsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Prv92UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6PsXAGUsEe6bAesDIgR3sg" base_Element="_6Prv-GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6PsXAWUsEe6bAesDIgR3sg" base_Element="_6Prv-GUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6PsXAmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6PsXBWUsEe6bAesDIgR3sg" base_Element="_6PsXA2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6PsXBmUsEe6bAesDIgR3sg" base_Element="_6PsXA2UsEe6bAesDIgR3sg">
    <annotations xmi:id="_6PsXB2UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6PsXCmUsEe6bAesDIgR3sg" base_Element="_6PsXCGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Ps-EGUsEe6bAesDIgR3sg" base_Element="_6PsXCGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Ps-EWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Ps-FGUsEe6bAesDIgR3sg" base_Element="_6Ps-EmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Ps-FWUsEe6bAesDIgR3sg" base_Element="_6Ps-EmUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Ps-FmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6PtlIWUsEe6bAesDIgR3sg" base_Element="_6PtlIGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PtlI2UsEe6bAesDIgR3sg" base_Element="_6PtlImUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PuMMWUsEe6bAesDIgR3sg" base_Element="_6PuMMGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PuMM2UsEe6bAesDIgR3sg" base_Element="_6PuMMmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PuMNWUsEe6bAesDIgR3sg" base_Element="_6PuMNGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PuzQGUsEe6bAesDIgR3sg" base_Element="_6PuMNmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PvaUGUsEe6bAesDIgR3sg" base_Element="_6PuzQWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PvaUmUsEe6bAesDIgR3sg" base_Element="_6PvaUWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6PwocGUsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6PwBZmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6PwocmUsEe6bAesDIgR3sg" base_Element="_6PwocWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6P0542UsEe6bAesDIgR3sg" base_Element="_6P054GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6P1g8GUsEe6bAesDIgR3sg" base_Element="_6P054GUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6P1g8WUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6P2vEGUsEe6bAesDIgR3sg" genericsValue="String, Node" base_Element="_6P2IAGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6P3WImUsEe6bAesDIgR3sg" base_Element="_6P3WIWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6P4kR2UsEe6bAesDIgR3sg" base_Element="_6P4kRGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6P4kSGUsEe6bAesDIgR3sg" base_Element="_6P4kRGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6P4kSWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6P5LWGUsEe6bAesDIgR3sg" genericsValue="ScheduleTime" base_Element="_6P5LU2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6P6ZcGUsEe6bAesDIgR3sg" base_Element="_6P5ybWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6P6ZcWUsEe6bAesDIgR3sg" base_Element="_6P5ybWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6P6ZcmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6P7nkGUsEe6bAesDIgR3sg" genericsValue="String,InstructionTimeSlot" base_Element="_6P7AhmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6P9cwWUsEe6bAesDIgR3sg" base_Element="_6P9cwGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6P-D0GUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6P9cw2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6P-q4GUsEe6bAesDIgR3sg" genericsValue="Double" base_Element="_6P-D1mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6P-q4mUsEe6bAesDIgR3sg" genericsValue="Double,ReliabilityRow" base_Element="_6P-q4WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6QC8UWUsEe6bAesDIgR3sg" base_Element="_6QC8UGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6QC8U2UsEe6bAesDIgR3sg" base_Element="_6QC8UmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6QEKcGUsEe6bAesDIgR3sg" genericsValue="Activation,Row&lt;Activation>" base_Element="_6QDjamUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6QEKdmUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6QEKcmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6QExgmUsEe6bAesDIgR3sg" base_Element="_6QExgWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6QRl0GUsEe6bAesDIgR3sg" base_Element="_6QQ-wGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6QRl0mUsEe6bAesDIgR3sg" base_Element="_6QRl0WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6QSM4GUsEe6bAesDIgR3sg" base_Element="_6QRl02UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6QSM4mUsEe6bAesDIgR3sg" base_Element="_6QSM4WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6QSM5GUsEe6bAesDIgR3sg" base_Element="_6QSM42UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6QVQMWUsEe6bAesDIgR3sg" base_Element="_6QVQMGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6QVQNGUsEe6bAesDIgR3sg" base_Element="_6QVQMmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6QVQNWUsEe6bAesDIgR3sg" base_Element="_6QVQMmUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6QVQNmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6QV3QmUsEe6bAesDIgR3sg" base_Element="_6QV3QGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6QV3Q2UsEe6bAesDIgR3sg" base_Element="_6QV3QGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6QV3RGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6QV3RmUsEe6bAesDIgR3sg" base_Element="_6QV3RWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6QV3SWUsEe6bAesDIgR3sg" base_Element="_6QV3R2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6QWeUGUsEe6bAesDIgR3sg" base_Element="_6QV3R2UsEe6bAesDIgR3sg">
    <annotations xmi:id="_6QWeUWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6QWeU2UsEe6bAesDIgR3sg" base_Element="_6QWeUmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6QWeVmUsEe6bAesDIgR3sg" base_Element="_6QWeVGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6QWeV2UsEe6bAesDIgR3sg" base_Element="_6QWeVGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6QWeWGUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6QXFYGUsEe6bAesDIgR3sg" base_Element="_6QWeWWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6QXFY2UsEe6bAesDIgR3sg" base_Element="_6QXFYWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6QXFZGUsEe6bAesDIgR3sg" base_Element="_6QXFYWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6QXFZWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6QXFZ2UsEe6bAesDIgR3sg" base_Element="_6QXFZmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6QXscGUsEe6bAesDIgR3sg" base_Element="_6QXFaGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6QXscWUsEe6bAesDIgR3sg" base_Element="_6QXFaGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6QXscmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6QXsdGUsEe6bAesDIgR3sg" base_Element="_6QXsc2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6QXsd2UsEe6bAesDIgR3sg" base_Element="_6QXsdWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6QXseGUsEe6bAesDIgR3sg" base_Element="_6QXsdWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6QXseWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6QZhoGUsEe6bAesDIgR3sg" base_Element="_6QY6kGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6Qb94GUsEe6bAesDIgR3sg" base_Element="_6QbW0GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6QkgwGUsEe6bAesDIgR3sg" base_Element="_6QhdcGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6Qlu4GUsEe6bAesDIgR3sg" base_Element="_6QlH0GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6QxVEWUsEe6bAesDIgR3sg" base_Element="_6QxVEGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6Qx8IGUsEe6bAesDIgR3sg" base_Element="_6QxVEmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6Qx8ImUsEe6bAesDIgR3sg" base_Element="_6Qx8IWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6Qx8JGUsEe6bAesDIgR3sg" base_Element="_6Qx8I2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6Qx8JmUsEe6bAesDIgR3sg" base_Element="_6Qx8JWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6QzKQmUsEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_6QzKQGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Q4p1WUsEe6bAesDIgR3sg" base_Element="_6Q4p0mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Q4p1mUsEe6bAesDIgR3sg" base_Element="_6Q4p0mUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Q4p12UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Q7GE2UsEe6bAesDIgR3sg" base_Element="_6Q7GEGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Q7GFGUsEe6bAesDIgR3sg" base_Element="_6Q7GEGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Q7GFWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6Q7tJ2UsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6Q7tJmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6Q8UMWUsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6Q8UMGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6Rg78WUsEe6bAesDIgR3sg" genericsValue="T, E" base_Element="_6Rg78GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6RiKEGUsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6RhjAGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6Rj_QGUsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6RjYMmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6Rj_QWUsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6RjYM2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6RkmUWUsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6RkmUGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6RlNYGUsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6RkmU2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6RnpoGUsEe6bAesDIgR3sg" base_Element="_6RmbgWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6RnpomUsEe6bAesDIgR3sg" genericsValue="Activation" base_Element="_6RnpoWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Ro3wGUsEe6bAesDIgR3sg" base_Element="_6RoQsGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6Ro3wWUsEe6bAesDIgR3sg" genericsValue="Node" base_Element="_6RoQsWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Rpe0GUsEe6bAesDIgR3sg" base_Element="_6RoQsGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Rpe0WUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6Rpe02UsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6Rpe0mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6RqF4WUsEe6bAesDIgR3sg" base_Element="_6RqF4GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Rqs8WUsEe6bAesDIgR3sg" base_Element="_6RqF4mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6Rqs8mUsEe6bAesDIgR3sg" base_Element="_6RqF4mUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6Rqs82UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6Rqs9WUsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6Rqs9GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6Rr7EGUsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6RrUAGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6RtwQWUsEe6bAesDIgR3sg" base_Element="_6RtwQGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6Ru-YGUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6RuXUGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6RwzkGUsEe6bAesDIgR3sg" base_Element="_6RwMgGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6RwzkWUsEe6bAesDIgR3sg" base_Element="_6RwMgGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6RwzkmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6RxaoGUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6Rwzk2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6RxapWUsEe6bAesDIgR3sg" base_Element="_6RxaoWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6RyBsGUsEe6bAesDIgR3sg" base_Element="_6RxaoWUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6RyBsWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6RyBs2UsEe6bAesDIgR3sg" genericsValue="Node" base_Element="_6RyBsmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6RyowWUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6RyowGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6RzP1GUsEe6bAesDIgR3sg" base_Element="_6RzP0GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6RzP1WUsEe6bAesDIgR3sg" base_Element="_6RzP0GUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6RzP1mUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6Rz24GUsEe6bAesDIgR3sg" base_Element="_6RzP12UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6R0d8GUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6Rz25WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6R0d9WUsEe6bAesDIgR3sg" base_Element="_6R0d8WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6R0d9mUsEe6bAesDIgR3sg" base_Element="_6R0d8WUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6R0d92UsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6R1FA2UsEe6bAesDIgR3sg" base_Element="_6R1FAGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6R1FBGUsEe6bAesDIgR3sg" genericsValue="Node" base_Element="_6R1FAWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6R1FBWUsEe6bAesDIgR3sg" base_Element="_6R1FAGUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6R1FBmUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6R1sEWUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6R1sEGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6R1sFmUsEe6bAesDIgR3sg" base_Element="_6R1sEmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_6R2TIGUsEe6bAesDIgR3sg" base_Element="_6R1sEmUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6R2TIWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_6R4IUGUsEe6bAesDIgR3sg" base_Element="_6R3hQGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6R7LpWUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6R7LpGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6R9A0GUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6R7ysWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6SBSQGUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6R9A0mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6SB5UGUsEe6bAesDIgR3sg" genericsValue="T" base_Element="_6R9A02UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6SDHcmUsEe6bAesDIgR3sg" genericsValue="E" base_Element="_6SDHcWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6SE8oGUsEe6bAesDIgR3sg" base_Element="_6SEVkGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6SGKwGUsEe6bAesDIgR3sg" base_Element="_6SFjsWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_6SJOEGUsEe6bAesDIgR3sg" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_6SH_8mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6SJOEWUsEe6bAesDIgR3sg" base_Element="_6SH_8mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6SMRYGUsEe6bAesDIgR3sg" base_Element="_6SLqUWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6SP7wGUsEe6bAesDIgR3sg" base_Element="_6SPUsGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6SU0RGUsEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_6SUNNmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6SWpc2UsEe6bAesDIgR3sg" genericsValue="Node" base_Element="_6SWpcWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_6SWpeGUsEe6bAesDIgR3sg" base_Element="_6SWpdGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6SXQgGUsEe6bAesDIgR3sg" genericsValue="Node" base_Element="_6SWpdWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6SX3kGUsEe6bAesDIgR3sg" genericsValue="Flow" base_Element="_6SXQgWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6SYepWUsEe6bAesDIgR3sg" genericsValue="Node" base_Element="_6SYepGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6SZFsGUsEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_6SYep2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6SZswWUsEe6bAesDIgR3sg" genericsValue="Activation" base_Element="_6SZswGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6SaT0mUsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6SaT0WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6Sa64GUsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6SaT1GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6Sa642UsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6Sa64mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6Sbh8GUsEe6bAesDIgR3sg" genericsValue="ScheduleTime" base_Element="_6Sa65WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6SnvNGUsEe6bAesDIgR3sg" base_Element="_6SnvM2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6SoWQGUsEe6bAesDIgR3sg" base_Element="_6SnvNWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6SoWQmUsEe6bAesDIgR3sg" base_Element="_6SoWQWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6SpkYmUsEe6bAesDIgR3sg" base_Element="_6SpkYWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6SpkZGUsEe6bAesDIgR3sg" base_Element="_6SpkY2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6SqygWUsEe6bAesDIgR3sg" base_Element="_6SqygGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Sqyg2UsEe6bAesDIgR3sg" base_Element="_6SqygmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6SrZkGUsEe6bAesDIgR3sg" genericsValue="ChannelSet" base_Element="_6SqyhGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6SrZkWUsEe6bAesDIgR3sg" base_Element="_6SqyhGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6St10GUsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6SsAomUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Suc4GUsEe6bAesDIgR3sg" base_Element="_6SsAomUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6SvD8GUsEe6bAesDIgR3sg" base_Element="_6Suc4WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6SyHQGUsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6SvD8WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6SzVYGUsEe6bAesDIgR3sg" base_Element="_6SvD8WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6SzVYmUsEe6bAesDIgR3sg" base_Element="_6SzVYWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6SzVZGUsEe6bAesDIgR3sg" base_Element="_6SzVY2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Sz8cWUsEe6bAesDIgR3sg" base_Element="_6Sz8cGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Sz8c2UsEe6bAesDIgR3sg" base_Element="_6Sz8cmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Sz8dWUsEe6bAesDIgR3sg" base_Element="_6Sz8dGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6Sz8d2UsEe6bAesDIgR3sg" base_Element="_6Sz8dmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S1xoGUsEe6bAesDIgR3sg" base_Element="_6S1Kk2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S1xomUsEe6bAesDIgR3sg" base_Element="_6S1xoWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S2YsGUsEe6bAesDIgR3sg" base_Element="_6S1xo2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S2_wWUsEe6bAesDIgR3sg" base_Element="_6S2_wGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S2_w2UsEe6bAesDIgR3sg" base_Element="_6S2_wmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S2_xWUsEe6bAesDIgR3sg" base_Element="_6S2_xGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S3m0GUsEe6bAesDIgR3sg" base_Element="_6S2_xmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S3m0mUsEe6bAesDIgR3sg" base_Element="_6S3m0WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S3m1GUsEe6bAesDIgR3sg" base_Element="_6S3m02UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S4N4WUsEe6bAesDIgR3sg" base_Element="_6S4N4GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S4N42UsEe6bAesDIgR3sg" base_Element="_6S4N4mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S408GUsEe6bAesDIgR3sg" base_Element="_6S4N5GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S409GUsEe6bAesDIgR3sg" base_Element="_6S4082UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S5cAGUsEe6bAesDIgR3sg" base_Element="_6S409mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S5cA2UsEe6bAesDIgR3sg" base_Element="_6S5cAWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S6DEWUsEe6bAesDIgR3sg" base_Element="_6S6DEGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S7RMmUsEe6bAesDIgR3sg" base_Element="_6S7RMGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S8fUWUsEe6bAesDIgR3sg" base_Element="_6S8fUGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S9GYGUsEe6bAesDIgR3sg" base_Element="_6S8fUmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S9GYmUsEe6bAesDIgR3sg" base_Element="_6S9GYWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S9GZGUsEe6bAesDIgR3sg" base_Element="_6S9GY2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6S9tcGUsEe6bAesDIgR3sg" genericsValue="String, Integer" base_Element="_6S9GZWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S9tcWUsEe6bAesDIgR3sg" base_Element="_6S9GZWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S9td2UsEe6bAesDIgR3sg" base_Element="_6S9tdmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S-UgGUsEe6bAesDIgR3sg" base_Element="_6S9teGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6S-UhmUsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6S-UhWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S_ip2UsEe6bAesDIgR3sg" base_Element="_6S_ipmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6S_iqWUsEe6bAesDIgR3sg" base_Element="_6S_iqGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TAJsGUsEe6bAesDIgR3sg" base_Element="_6S_iqmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TAJt2UsEe6bAesDIgR3sg" base_Element="_6TAJtmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TAwwGUsEe6bAesDIgR3sg" base_Element="_6TAJuGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TAwwmUsEe6bAesDIgR3sg" base_Element="_6TAwwWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TBX1WUsEe6bAesDIgR3sg" base_Element="_6TBX1GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TBX12UsEe6bAesDIgR3sg" base_Element="_6TBX1mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TBX22UsEe6bAesDIgR3sg" base_Element="_6TBX2mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TB-4WUsEe6bAesDIgR3sg" base_Element="_6TB-4GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TCl-GUsEe6bAesDIgR3sg" base_Element="_6TCl92UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TDNAGUsEe6bAesDIgR3sg" base_Element="_6TCl-WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TDNA2UsEe6bAesDIgR3sg" base_Element="_6TDNAWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TDNBWUsEe6bAesDIgR3sg" base_Element="_6TDNBGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TDNB2UsEe6bAesDIgR3sg" base_Element="_6TDNBmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TDNCWUsEe6bAesDIgR3sg" base_Element="_6TDNCGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TD0EGUsEe6bAesDIgR3sg" base_Element="_6TDNCmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TD0EmUsEe6bAesDIgR3sg" base_Element="_6TD0EWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TD0FGUsEe6bAesDIgR3sg" base_Element="_6TD0E2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TEbIGUsEe6bAesDIgR3sg" base_Element="_6TD0FWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TEbImUsEe6bAesDIgR3sg" base_Element="_6TEbIWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TEbJGUsEe6bAesDIgR3sg" base_Element="_6TEbI2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TEbJmUsEe6bAesDIgR3sg" base_Element="_6TEbJWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TEbKGUsEe6bAesDIgR3sg" base_Element="_6TEbJ2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TEbK2UsEe6bAesDIgR3sg" base_Element="_6TEbKWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TFCMmUsEe6bAesDIgR3sg" base_Element="_6TFCMGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TFCNWUsEe6bAesDIgR3sg" base_Element="_6TFCM2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TFCN2UsEe6bAesDIgR3sg" base_Element="_6TFCNmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TFpQWUsEe6bAesDIgR3sg" base_Element="_6TFpQGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TFpQ2UsEe6bAesDIgR3sg" base_Element="_6TFpQmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TFpRWUsEe6bAesDIgR3sg" base_Element="_6TFpRGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_6TFpSmUsEe6bAesDIgR3sg" dimensions="2" base_Element="_6TFpSGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TFpS2UsEe6bAesDIgR3sg" base_Element="_6TFpSGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TG3YGUsEe6bAesDIgR3sg" base_Element="_6TGQXGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TG3YmUsEe6bAesDIgR3sg" base_Element="_6TG3YWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TG3ZGUsEe6bAesDIgR3sg" base_Element="_6TG3Y2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TG3ZmUsEe6bAesDIgR3sg" base_Element="_6TG3ZWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TG3aGUsEe6bAesDIgR3sg" base_Element="_6TG3Z2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TG3amUsEe6bAesDIgR3sg" base_Element="_6TG3aWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6THecGUsEe6bAesDIgR3sg" base_Element="_6TG3a2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6THecmUsEe6bAesDIgR3sg" base_Element="_6THecWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6THedGUsEe6bAesDIgR3sg" base_Element="_6THec2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6THedmUsEe6bAesDIgR3sg" base_Element="_6THedWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6THeeGUsEe6bAesDIgR3sg" base_Element="_6THed2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6THeemUsEe6bAesDIgR3sg" base_Element="_6THeeWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TIFgGUsEe6bAesDIgR3sg" base_Element="_6THee2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TIFgmUsEe6bAesDIgR3sg" base_Element="_6TIFgWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TIFhWUsEe6bAesDIgR3sg" base_Element="_6TIFg2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TIFh2UsEe6bAesDIgR3sg" base_Element="_6TIFhmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TIFiWUsEe6bAesDIgR3sg" base_Element="_6TIFiGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TIFi2UsEe6bAesDIgR3sg" base_Element="_6TIFimUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TJTpGUsEe6bAesDIgR3sg" base_Element="_6TJTomUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TJTqGUsEe6bAesDIgR3sg" base_Element="_6TJTp2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6TJ6sGUsEe6bAesDIgR3sg" genericsValue="InstructionParameters" base_Element="_6TJTqWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TJ6sWUsEe6bAesDIgR3sg" base_Element="_6TJTqWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TJ6s2UsEe6bAesDIgR3sg" base_Element="_6TJ6smUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TKhy2UsEe6bAesDIgR3sg" base_Element="_6TKhymUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TLI0mUsEe6bAesDIgR3sg" base_Element="_6TLI0WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TLI1GUsEe6bAesDIgR3sg" base_Element="_6TLI02UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TLI1mUsEe6bAesDIgR3sg" base_Element="_6TLI1WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6TLv4WUsEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_6TLv4GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TLv4mUsEe6bAesDIgR3sg" base_Element="_6TLv4GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6TLv5GUsEe6bAesDIgR3sg" genericsValue="SchedulableObject" base_Element="_6TLv42UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TM-AGUsEe6bAesDIgR3sg" base_Element="_6TMW-GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TM-AmUsEe6bAesDIgR3sg" base_Element="_6TM-AWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TM-BGUsEe6bAesDIgR3sg" base_Element="_6TM-A2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TM-BmUsEe6bAesDIgR3sg" base_Element="_6TM-BWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TNlEGUsEe6bAesDIgR3sg" base_Element="_6TM-B2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TNlEmUsEe6bAesDIgR3sg" base_Element="_6TNlEWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TNlFGUsEe6bAesDIgR3sg" base_Element="_6TNlE2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TNlFmUsEe6bAesDIgR3sg" base_Element="_6TNlFWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TOMIWUsEe6bAesDIgR3sg" base_Element="_6TOMIGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TOMI2UsEe6bAesDIgR3sg" base_Element="_6TOMImUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TOMJWUsEe6bAesDIgR3sg" base_Element="_6TOMJGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TOzMGUsEe6bAesDIgR3sg" base_Element="_6TOMJmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TOzMmUsEe6bAesDIgR3sg" base_Element="_6TOzMWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TPaQWUsEe6bAesDIgR3sg" base_Element="_6TPaQGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TQBUGUsEe6bAesDIgR3sg" base_Element="_6TPaQmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TQBUmUsEe6bAesDIgR3sg" base_Element="_6TQBUWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TQBVGUsEe6bAesDIgR3sg" base_Element="_6TQBU2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TQBVmUsEe6bAesDIgR3sg" base_Element="_6TQBVWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TQoYWUsEe6bAesDIgR3sg" base_Element="_6TQoYGUsEe6bAesDIgR3sg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_6TQoYmUsEe6bAesDIgR3sg" name="getNumChannels" method="_6Tq4EGUsEe6bAesDIgR3sg">
      <ownedParameter xmi:id="_6TQoY2UsEe6bAesDIgR3sg" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_6TQoZGUsEe6bAesDIgR3sg" base_Element="_6TQoYmUsEe6bAesDIgR3sg">
    <annotations xmi:id="_6TQoZWUsEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TQoaGUsEe6bAesDIgR3sg" base_Element="_6TQoZmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TRPcmUsEe6bAesDIgR3sg" base_Element="_6TRPcGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TR2i2UsEe6bAesDIgR3sg" base_Element="_6TR2iWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TSdkGUsEe6bAesDIgR3sg" base_Element="_6TR2jmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TSdlGUsEe6bAesDIgR3sg" base_Element="_6TSdk2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6TSdlmUsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6TSdlWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6TTEomUsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6TTEoWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TTrsWUsEe6bAesDIgR3sg" base_Element="_6TTrsGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TTrs2UsEe6bAesDIgR3sg" base_Element="_6TTrsmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TUSw2UsEe6bAesDIgR3sg" base_Element="_6TTrtGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TUSyGUsEe6bAesDIgR3sg" base_Element="_6TUSxGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TUSymUsEe6bAesDIgR3sg" base_Element="_6TUSyWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6TU50GUsEe6bAesDIgR3sg" genericsValue="Activation" base_Element="_6TUSy2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TU50WUsEe6bAesDIgR3sg" base_Element="_6TUSy2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6TU502UsEe6bAesDIgR3sg" genericsValue="String, Integer" base_Element="_6TU50mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TVg4GUsEe6bAesDIgR3sg" base_Element="_6TU50mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TVg4mUsEe6bAesDIgR3sg" base_Element="_6TVg4WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TWH_GUsEe6bAesDIgR3sg" base_Element="_6TWH-mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TWH_mUsEe6bAesDIgR3sg" base_Element="_6TWH_WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TWvAGUsEe6bAesDIgR3sg" base_Element="_6TWH_2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6TWvAmUsEe6bAesDIgR3sg" genericsValue="Node" base_Element="_6TWvAWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TWvA2UsEe6bAesDIgR3sg" base_Element="_6TWvAWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6TWvBWUsEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_6TWvBGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TWvBmUsEe6bAesDIgR3sg" base_Element="_6TWvBGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6TXWEGUsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6TWvB2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TXWEWUsEe6bAesDIgR3sg" base_Element="_6TWvB2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TXWE2UsEe6bAesDIgR3sg" base_Element="_6TXWEmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6TXWFWUsEe6bAesDIgR3sg" base_Element="_6TXWFGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6TX9IWUsEe6bAesDIgR3sg" genericsValue="String" base_Element="_6TX9IGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6TX9I2UsEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_6TX9ImUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_6TYkMGUsEe6bAesDIgR3sg" genericsValue="ScheduleTime" base_Element="_6TX9JGUsEe6bAesDIgR3sg"/>
  <uml:OpaqueBehavior xmi:id="_6Tq4EGUsEe6bAesDIgR3sg" name="getNumChannels" specification="_6TQoYmUsEe6bAesDIgR3sg">
    <ownedParameter xmi:id="_6Tq4EWUsEe6bAesDIgR3sg" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_6T9zAGUsEe6bAesDIgR3sg" base_Element="_6T9L8GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T9zA2UsEe6bAesDIgR3sg" base_Element="_6T9zAWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T-aEGUsEe6bAesDIgR3sg" base_Element="_6T9zBGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T-aE2UsEe6bAesDIgR3sg" base_Element="_6T-aEWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T-aFmUsEe6bAesDIgR3sg" base_Element="_6T-aFGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T-aGWUsEe6bAesDIgR3sg" base_Element="_6T-aF2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T_BIGUsEe6bAesDIgR3sg" base_Element="_6T-aGmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T_BI2UsEe6bAesDIgR3sg" base_Element="_6T_BIWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T_BJmUsEe6bAesDIgR3sg" base_Element="_6T_BJGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T_BKWUsEe6bAesDIgR3sg" base_Element="_6T_BJ2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T_BLGUsEe6bAesDIgR3sg" base_Element="_6T_BKmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T_oMmUsEe6bAesDIgR3sg" base_Element="_6T_oMGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T_oNWUsEe6bAesDIgR3sg" base_Element="_6T_oM2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T_oOGUsEe6bAesDIgR3sg" base_Element="_6T_oNmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6T_oO2UsEe6bAesDIgR3sg" base_Element="_6T_oOWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UA2UGUsEe6bAesDIgR3sg" base_Element="_6T_oPGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UA2U2UsEe6bAesDIgR3sg" base_Element="_6UA2UWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UA2VmUsEe6bAesDIgR3sg" base_Element="_6UA2VGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UBdYGUsEe6bAesDIgR3sg" base_Element="_6UA2V2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UBdY2UsEe6bAesDIgR3sg" base_Element="_6UBdYWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UBdZmUsEe6bAesDIgR3sg" base_Element="_6UBdZGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UBdaWUsEe6bAesDIgR3sg" base_Element="_6UBdZ2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UBdbGUsEe6bAesDIgR3sg" base_Element="_6UBdamUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UCEcGUsEe6bAesDIgR3sg" base_Element="_6UBdbWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UCEc2UsEe6bAesDIgR3sg" base_Element="_6UCEcWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UCEdmUsEe6bAesDIgR3sg" base_Element="_6UCEdGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UCEeWUsEe6bAesDIgR3sg" base_Element="_6UCEd2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UCEfGUsEe6bAesDIgR3sg" base_Element="_6UCEemUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UCEf2UsEe6bAesDIgR3sg" base_Element="_6UCEfWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UCrgGUsEe6bAesDIgR3sg" base_Element="_6UCEgGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UCrg2UsEe6bAesDIgR3sg" base_Element="_6UCrgWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UCrhmUsEe6bAesDIgR3sg" base_Element="_6UCrhGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UCriWUsEe6bAesDIgR3sg" base_Element="_6UCrh2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UCrjGUsEe6bAesDIgR3sg" base_Element="_6UCrimUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UDSkGUsEe6bAesDIgR3sg" base_Element="_6UCrjWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UDSk2UsEe6bAesDIgR3sg" base_Element="_6UDSkWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UDSlmUsEe6bAesDIgR3sg" base_Element="_6UDSlGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UDSmWUsEe6bAesDIgR3sg" base_Element="_6UDSl2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UDSnGUsEe6bAesDIgR3sg" base_Element="_6UDSmmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UD5oGUsEe6bAesDIgR3sg" base_Element="_6UDSnWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UD5o2UsEe6bAesDIgR3sg" base_Element="_6UD5oWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UD5pmUsEe6bAesDIgR3sg" base_Element="_6UD5pGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UD5qWUsEe6bAesDIgR3sg" base_Element="_6UD5p2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UD5rGUsEe6bAesDIgR3sg" base_Element="_6UD5qmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UEgsGUsEe6bAesDIgR3sg" base_Element="_6UD5rWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UEgs2UsEe6bAesDIgR3sg" base_Element="_6UEgsWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UEgtmUsEe6bAesDIgR3sg" base_Element="_6UEgtGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UEguWUsEe6bAesDIgR3sg" base_Element="_6UEgt2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UEgvGUsEe6bAesDIgR3sg" base_Element="_6UEgumUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UFHwmUsEe6bAesDIgR3sg" base_Element="_6UFHwGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UFHxWUsEe6bAesDIgR3sg" base_Element="_6UFHw2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UFHyGUsEe6bAesDIgR3sg" base_Element="_6UFHxmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UFHy2UsEe6bAesDIgR3sg" base_Element="_6UFHyWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UFu0GUsEe6bAesDIgR3sg" base_Element="_6UFHzGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UFu02UsEe6bAesDIgR3sg" base_Element="_6UFu0WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UFu1mUsEe6bAesDIgR3sg" base_Element="_6UFu1GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UFu2WUsEe6bAesDIgR3sg" base_Element="_6UFu12UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UGV4GUsEe6bAesDIgR3sg" base_Element="_6UFu2mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UGV42UsEe6bAesDIgR3sg" base_Element="_6UGV4WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UGV5mUsEe6bAesDIgR3sg" base_Element="_6UGV5GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UGV6WUsEe6bAesDIgR3sg" base_Element="_6UGV52UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UG88GUsEe6bAesDIgR3sg" base_Element="_6UGV6mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UG882UsEe6bAesDIgR3sg" base_Element="_6UG88WUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UG89mUsEe6bAesDIgR3sg" base_Element="_6UG89GUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UG8-WUsEe6bAesDIgR3sg" base_Element="_6UG892UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UHkAGUsEe6bAesDIgR3sg" base_Element="_6UG8-mUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UHkA2UsEe6bAesDIgR3sg" base_Element="_6UHkAWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UHkBmUsEe6bAesDIgR3sg" base_Element="_6UHkBGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UHkCWUsEe6bAesDIgR3sg" base_Element="_6UHkB2UsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UHkDGUsEe6bAesDIgR3sg" base_Element="_6UHkCmUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UILEGUsEe6bAesDIgR3sg" base_Element="_6UHkDWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UILE2UsEe6bAesDIgR3sg" base_Element="_6UILEWUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_6UILFmUsEe6bAesDIgR3sg" base_Element="_6UILFGUsEe6bAesDIgR3sg"/>
  <UMLLabProfile:Patch xmi:id="_7JiJEGUsEe6bAesDIgR3sg" base_Element="_6CiExGUsEe6bAesDIgR3sg" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_7JklUGUsEe6bAesDIgR3sg" base_Element="_6DBM8mUsEe6bAesDIgR3sg" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_7JlMYGUsEe6bAesDIgR3sg" base_Element="_6DEQQGUsEe6bAesDIgR3sg" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_7JmagGUsEe6bAesDIgR3sg" base_Element="_6DMzIGUsEe6bAesDIgR3sg" patchText="@@ -3770,22 +3770,25 @@&#xA; f, ra)%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:UnresolvedElement xmi:id="_i6yT0GUxEe6bAesDIgR3sg" base_Element="_i6xswGUxEe6bAesDIgR3sg"/>
  <UMLLabProfile:Patch xmi:id="_7gj6QGUyEe6bAesDIgR3sg" base_Element="_6Csc1mUsEe6bAesDIgR3sg" patchText="@@ -704,16 +704,18 @@&#xA; MISS%22;%0D%0A&#xA;+  &#xA; private &#xA;" conflicting="false"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DnyVMHLKEe6Y3e8f6FsdUw" base_Element="_DnxuIHLKEe6Y3e8f6FsdUw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dn0KYHLKEe6Y3e8f6FsdUw" base_Element="_DnzjUHLKEe6Y3e8f6FsdUw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dn0KYnLKEe6Y3e8f6FsdUw" base_Element="_Dn0KYXLKEe6Y3e8f6FsdUw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dn0xcXLKEe6Y3e8f6FsdUw" base_Element="_Dn0xcHLKEe6Y3e8f6FsdUw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dn1YgHLKEe6Y3e8f6FsdUw" base_Element="_Dn0xcnLKEe6Y3e8f6FsdUw"/>
  <UMLLabProfile:Reference xmi:id="_Dn5p8HLKEe6Y3e8f6FsdUw" base_Element="_Dn5C4HLKEe6Y3e8f6FsdUw"/>
</xmi:XMI>
