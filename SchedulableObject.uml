<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_w91BkGRREe6bAesDIgR3sg" name="SchedulableObject">
    <eAnnotations xmi:id="_xEGBoGRREe6bAesDIgR3sg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_xEGBoWRREe6bAesDIgR3sg" source="codegen">
        <details xmi:id="_xEGBomRREe6bAesDIgR3sg" key="codegenDirectory" value="/cs2820-fall23/src"/>
        <details xmi:id="_zH2pIGRREe6bAesDIgR3sg" key="AssociatedSourceCode" value="/cs2820-fall23/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall23/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-fall23/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall23/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall23/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall23/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall23/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-fall23/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall23/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall23/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall23/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall23/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-fall23/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall23/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall23/src/edu/uiowa/cs/warp/LatencyAnalysis.java;3124260452/1;/cs2820-fall23/src/edu/uiowa/cs/warp/LatencyVisualization.java;785897799/1;/cs2820-fall23/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall23/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall23/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall23/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall23/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall23/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall23/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall23/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ProgramVisualization.java;1088040009/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;2919449855/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;4166646452/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall23/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall23/src/edu/uiowa/cs/warp/VisualizationImplementation.java;400555688/1;/cs2820-fall23/src/edu/uiowa/cs/warp/VisualizationObject.java;1359121486/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Warp.java;1458699109/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Program.java;2230631585/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WorkLoad.java;1720029430/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WorkLoadDescription.java;2732187131/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Flow.java;3142956155/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_x4t8gGRREe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_x4vxsGRREe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_x4vxsWRREe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_x4vxsmRREe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_x4wYwGRREe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_x4wYwWRREe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_x4wYwmRREe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_x4wYw2RREe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_x447oGRREe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_x2sjQGRREe6bAesDIgR3sg" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_x2uYcGRREe6bAesDIgR3sg" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_x2uYcWRREe6bAesDIgR3sg" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_x2vmkWRREe6bAesDIgR3sg" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_x5NrwGRREe6bAesDIgR3sg" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_yPdokGRREe6bAesDIgR3sg" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_x50vwGRREe6bAesDIgR3sg" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_yP1cAGRREe6bAesDIgR3sg" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_yP1cAmRREe6bAesDIgR3sg" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_x5-gwGRREe6bAesDIgR3sg" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_yP4fUmRREe6bAesDIgR3sg" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-MSYGRREe6bAesDIgR3sg" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_yRisMGRREe6bAesDIgR3sg" general="_yOv24GRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTNgIGRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTNgIWRREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU0psGRREe6bAesDIgR3sg" name="AbstractMap" specification="_x-OHkGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU0psWRREe6bAesDIgR3sg" type="_x-MSYGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x-OHkGRREe6bAesDIgR3sg" name="AbstractMap" method="_yU0psGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x-OuoGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x-OuoWRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x-OuomRREe6bAesDIgR3sg" type="_x-MSYGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-PVsGRREe6bAesDIgR3sg" name="Activations">
              <generalization xmi:id="_yOyTIGRREe6bAesDIgR3sg" general="_x-MSYGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTOHMGRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTOHMWRREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-Qj0GRREe6bAesDIgR3sg" name="BasicPoset">
              <ownedComment xmi:id="_yWD_0GRREe6bAesDIgR3sg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_yO0IUWRREe6bAesDIgR3sg" general="_yCh_0GRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU3F8GRREe6bAesDIgR3sg" name="BasicPoset" specification="_yOzhQWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU3F8WRREe6bAesDIgR3sg" name="workload" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU3F8mRREe6bAesDIgR3sg" type="_x-Qj0GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yOzhQWRREe6bAesDIgR3sg" name="BasicPoset" visibility="package" method="_yU3F8GRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yOzhQ2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yOzhRGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yOzhQmRREe6bAesDIgR3sg" name="workload" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yO0IUGRREe6bAesDIgR3sg" type="_x-Qj0GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-Rx8GRREe6bAesDIgR3sg" name="ChannelAnalysis">
              <ownedComment xmi:id="_yWD_0WRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yTOHMmRREe6bAesDIgR3sg" name="program" visibility="private" type="_yBmywGRREe6bAesDIgR3sg" association="_yWzmsGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTOuQWRREe6bAesDIgR3sg" name="programTable" visibility="private" type="_x_suQGRREe6bAesDIgR3sg" association="_yW000GRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTPVUGRREe6bAesDIgR3sg" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU3tAGRREe6bAesDIgR3sg" name="ChannelAnalysis" specification="_yO0vYGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU3tAWRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU3tAmRREe6bAesDIgR3sg" type="_x-Rx8GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU3tA2RREe6bAesDIgR3sg" name="ChannelAnalysis" specification="_yO1WcGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU3tBGRREe6bAesDIgR3sg" name="program" type="_yBmywGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU3tBWRREe6bAesDIgR3sg" type="_x-Rx8GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU3tBmRREe6bAesDIgR3sg" name="isChannelConflict" specification="_x-TAEGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU3tB2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x-TAEGRREe6bAesDIgR3sg" name="isChannelConflict" method="_yU3tBmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-TnIGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yO0vYGRREe6bAesDIgR3sg" name="ChannelAnalysis" visibility="package" method="_yU3tAGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yO0vYmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yO0vY2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yO0vYWRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yO0vZGRREe6bAesDIgR3sg" type="_x-Rx8GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yO1WcGRREe6bAesDIgR3sg" name="ChannelAnalysis" visibility="package" method="_yU3tA2RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yO1WcmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yO1Wc2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yO1WcWRREe6bAesDIgR3sg" name="program" type="_yBmywGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yO1WdGRREe6bAesDIgR3sg" type="_x-Rx8GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-U1QGRREe6bAesDIgR3sg" name="ChannelVisualization">
              <ownedComment xmi:id="_yWD_0mRREe6bAesDIgR3sg">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yO2klGRREe6bAesDIgR3sg" general="_yAq-oGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTPVUmRREe6bAesDIgR3sg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTPVU2RREe6bAesDIgR3sg" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTPVVGRREe6bAesDIgR3sg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTP8YGRREe6bAesDIgR3sg" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTP8YWRREe6bAesDIgR3sg" name="warp" visibility="private" type="_yAD6oGRREe6bAesDIgR3sg" association="_yW0002RREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTP8Y2RREe6bAesDIgR3sg" name="ca" visibility="private" type="_x-Rx8GRREe6bAesDIgR3sg" association="_yW1b4WRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU3tCGRREe6bAesDIgR3sg" name="ChannelVisualization" specification="_yO19gGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU3tCWRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU3tCmRREe6bAesDIgR3sg" type="_x-U1QGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yO19gGRREe6bAesDIgR3sg" name="ChannelVisualization" visibility="package" method="_yU3tCGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yO2kkWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yO2kkmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yO2kkGRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yO2kk2RREe6bAesDIgR3sg" type="_x-U1QGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-WqcGRREe6bAesDIgR3sg" name="Channels">
              <ownedComment xmi:id="_yWD_02RREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yTRKgGRREe6bAesDIgR3sg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTRKgmRREe6bAesDIgR3sg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTRxkWRREe6bAesDIgR3sg" name="channelsAvailable" visibility="package" type="_yO3LoGRREe6bAesDIgR3sg" association="_yW1b5GRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU47IGRREe6bAesDIgR3sg" name="Channels" specification="_x-ZGsGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU47IWRREe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU47ImRREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU47I2RREe6bAesDIgR3sg" type="_x-WqcGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU5iMGRREe6bAesDIgR3sg" name="getChannelSet" specification="_x-ZtxGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU5iMWRREe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU5iMmRREe6bAesDIgR3sg" type="_yO3ysWRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU5iM2RREe6bAesDIgR3sg" name="addNewChannelSet" specification="_x-a74GRREe6bAesDIgR3sg">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU5iNGRREe6bAesDIgR3sg" name="isEmpty" specification="_x-a74WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU5iNWRREe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU5iNmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU6JQGRREe6bAesDIgR3sg" name="removeChannel" specification="_x-bi8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU6JQWRREe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU6JQmRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU6JQ2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU6JRGRREe6bAesDIgR3sg" name="addChannel" specification="_x-cKAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU6JRWRREe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU6JRmRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU6JR2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU6JSGRREe6bAesDIgR3sg" name="getNumChannels" specification="_x-cKBGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU6JSWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x-ZGsGRREe6bAesDIgR3sg" name="Channels" visibility="package" method="_yU47IGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x-ZtwWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x-ZtwmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x-ZGsWRREe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-ZtwGRREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-Ztw2RREe6bAesDIgR3sg" type="_x-WqcGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x-ZtxGRREe6bAesDIgR3sg" name="getChannelSet" method="_yU5iMGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-ZtxWRREe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRlIcGRREe6bAesDIgR3sg" type="_yO3ysWRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x-a74GRREe6bAesDIgR3sg" name="addNewChannelSet" method="_yU5iM2RREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_x-a74WRREe6bAesDIgR3sg" name="isEmpty" method="_yU5iNGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-a74mRREe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-a742RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-bi8GRREe6bAesDIgR3sg" name="removeChannel" method="_yU6JQGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-bi8WRREe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-bi8mRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-bi82RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-cKAGRREe6bAesDIgR3sg" name="addChannel" method="_yU6JRGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-cKAWRREe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-cKAmRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-cKA2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-cKBGRREe6bAesDIgR3sg" name="getNumChannels" method="_yU6JSGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-cKBWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_x-XRgGRREe6bAesDIgR3sg" name="ChannelSet" visibility="private">
                <generalization xmi:id="_yRj6UGRREe6bAesDIgR3sg" general="_yO3ysWRREe6bAesDIgR3sg"/>
                <ownedAttribute xmi:id="_yTQjcWRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTQjcmRREe6bAesDIgR3sg" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU4UEGRREe6bAesDIgR3sg" name="ChannelSet" specification="_x-X4kGRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yU4UEWRREe6bAesDIgR3sg" type="_x-XRgGRREe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU4UEmRREe6bAesDIgR3sg" name="ChannelSet" specification="_x-YfoGRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yU4UE2RREe6bAesDIgR3sg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yU4UFGRREe6bAesDIgR3sg" type="_x-XRgGRREe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_x-X4kGRREe6bAesDIgR3sg" name="ChannelSet" visibility="private" method="_yU4UEGRREe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_x-X4kWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_x-X4kmRREe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_x-X4k2RREe6bAesDIgR3sg" type="_x-XRgGRREe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_x-YfoGRREe6bAesDIgR3sg" name="ChannelSet" visibility="private" method="_yU4UEmRREe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_x-YfomRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_x-Yfo2RREe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_x-YfoWRREe6bAesDIgR3sg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_x-YfpGRREe6bAesDIgR3sg" type="_x-XRgGRREe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-dYIGRREe6bAesDIgR3sg" name="CodeFragment">
              <ownedAttribute xmi:id="_yTSYoWRREe6bAesDIgR3sg" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTSYomRREe6bAesDIgR3sg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTS_sGRREe6bAesDIgR3sg" name="edges" visibility="package" type="_yO3LoGRREe6bAesDIgR3sg" association="_yW2C8WRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTS_s2RREe6bAesDIgR3sg" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTTmwWRREe6bAesDIgR3sg" name="codeFragment" visibility="package" type="_yO3LoGRREe6bAesDIgR3sg" association="_yW2qAWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTUN0mRREe6bAesDIgR3sg" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTU04WRREe6bAesDIgR3sg" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU6JSmRREe6bAesDIgR3sg" name="CodeFragment" specification="_x-d_MGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU6JS2RREe6bAesDIgR3sg" type="_x-dYIGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU6JTGRREe6bAesDIgR3sg" name="CodeFragment" specification="_yRmWkGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU6JTWRREe6bAesDIgR3sg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU6JTmRREe6bAesDIgR3sg" name="edges" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU6JT2RREe6bAesDIgR3sg" name="coordinators" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU6JUGRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU6JUWRREe6bAesDIgR3sg" type="_x-dYIGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU6JUmRREe6bAesDIgR3sg" name="getCoordinator" specification="_x-emQGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU6JU2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU6JVGRREe6bAesDIgR3sg" name="instructions" specification="_x-emQmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU6JVWRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU6JVmRREe6bAesDIgR3sg" name="size" specification="_x-fNUWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU6JV2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU6JWGRREe6bAesDIgR3sg" name="generateCodeFragment" specification="_x-f0YWRREe6bAesDIgR3sg">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU7XYGRREe6bAesDIgR3sg" name="getBaseInstruction" specification="_x-f0YmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU7XYWRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7XYmRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7XY2RREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7XZGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU7XZWRREe6bAesDIgR3sg" name="push" specification="_x-gbcGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU7XZmRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7XZ2RREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7XaGRREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7XaWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU7XamRREe6bAesDIgR3sg" name="pull" specification="_x-hpkGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU7Xa2RREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7XbGRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7XbWRREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7XbmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU7Xb2RREe6bAesDIgR3sg" name="ifHas" specification="_x-hplWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU7XcGRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7XcWRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7XcmRREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7Xc2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU7XdGRREe6bAesDIgR3sg" name="ifNotHas" specification="_x-iQo2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU7XdWRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7XdmRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7Xd2RREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7XeGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU7XeWRREe6bAesDIgR3sg" name="wait" specification="_x-i3tGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU7XemRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7Xe2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU7XfGRREe6bAesDIgR3sg" name="sleep" specification="_x-jewWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU7XfWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU7-cGRREe6bAesDIgR3sg" name="reportIfDifferentCoordinators" specification="_yRoLwmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU7-cWRREe6bAesDIgR3sg" name="coordinators" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU7-cmRREe6bAesDIgR3sg" name="multipleCoordinators" specification="_yRpZ4GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU7-c2RREe6bAesDIgR3sg" name="coordinators" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU7-dGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x-d_MGRREe6bAesDIgR3sg" name="CodeFragment" visibility="package" method="_yU6JSmRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x-d_MWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x-d_MmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWD_1GRREe6bAesDIgR3sg">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_x-d_M2RREe6bAesDIgR3sg" type="_x-dYIGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x-emQGRREe6bAesDIgR3sg" name="getCoordinator" method="_yU6JUmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWEm4WRREe6bAesDIgR3sg">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_x-emQWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-emQmRREe6bAesDIgR3sg" name="instructions" method="_yU6JVGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWEm4mRREe6bAesDIgR3sg">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_yRoLwWRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x-fNUWRREe6bAesDIgR3sg" name="size" method="_yU6JVmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWEm42RREe6bAesDIgR3sg">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_x-f0YGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-f0YWRREe6bAesDIgR3sg" name="generateCodeFragment" visibility="private" method="_yU6JWGRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_x-f0YmRREe6bAesDIgR3sg" name="getBaseInstruction" visibility="private" method="_yU7XYGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-f0Y2RREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-f0ZGRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-f0ZWRREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-f0ZmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-gbcGRREe6bAesDIgR3sg" name="push" visibility="private" method="_yU7XZWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-gbcWRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-gbcmRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-hCgGRREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-hCgWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-hpkGRREe6bAesDIgR3sg" name="pull" visibility="private" method="_yU7XamRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-hpkWRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-hpkmRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-hpk2RREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-hplGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-hplWRREe6bAesDIgR3sg" name="ifHas" visibility="private" method="_yU7Xb2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-hplmRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-iQoGRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-iQoWRREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-iQomRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-iQo2RREe6bAesDIgR3sg" name="ifNotHas" visibility="private" method="_yU7XdGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-i3sGRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-i3sWRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-i3smRREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-i3s2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-i3tGRREe6bAesDIgR3sg" name="wait" method="_yU7XeWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-i3tWRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-jewGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-jewWRREe6bAesDIgR3sg" name="sleep" isStatic="true" method="_yU7XfGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-jewmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRmWkGRREe6bAesDIgR3sg" name="CodeFragment" visibility="package" method="_yU6JTGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yRm9pGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yRm9pWRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWEm4GRREe6bAesDIgR3sg">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_yRm9oGRREe6bAesDIgR3sg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRm9oWRREe6bAesDIgR3sg" name="edges" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRm9omRREe6bAesDIgR3sg" name="coordinators" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRm9o2RREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRm9pmRREe6bAesDIgR3sg" type="_x-dYIGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRoLwmRREe6bAesDIgR3sg" name="reportIfDifferentCoordinators" visibility="private" method="_yU7-cGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRoy0GRREe6bAesDIgR3sg" name="coordinators" type="_yO3LoGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRpZ4GRREe6bAesDIgR3sg" name="multipleCoordinators" visibility="private" method="_yU7-cmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRpZ4WRREe6bAesDIgR3sg" name="coordinators" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRpZ4mRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-miEGRREe6bAesDIgR3sg" name="CombinedActivation">
              <generalization xmi:id="_yPAVkmRREe6bAesDIgR3sg" general="_yDQYkGRREe6bAesDIgR3sg"/>
              <interfaceRealization xmi:id="_yRqoAWRREe6bAesDIgR3sg" client="_x-miEGRREe6bAesDIgR3sg" supplier="_yRqA8WRREe6bAesDIgR3sg" contract="_yRqA8WRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU7-dWRREe6bAesDIgR3sg" name="CombinedActivation" specification="_x-nJIGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU7-dmRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7-d2RREe6bAesDIgR3sg" type="_x-miEGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU7-eGRREe6bAesDIgR3sg" name="CombinedActivation" specification="_yO-gYGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU7-eWRREe6bAesDIgR3sg" name="elem" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU7-emRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7-e2RREe6bAesDIgR3sg" type="_x-miEGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU8lgGRREe6bAesDIgR3sg" name="CombinedActivation" specification="_yO-gZmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU8lgWRREe6bAesDIgR3sg" name="priorEntry" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU8lgmRREe6bAesDIgR3sg" name="next" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU8lg2RREe6bAesDIgR3sg" type="_x-miEGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU8lhGRREe6bAesDIgR3sg" name="canCombine" specification="_yO_HdWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU8lhWRREe6bAesDIgR3sg" name="a2" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU8lhmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x-nJIGRREe6bAesDIgR3sg" name="CombinedActivation" visibility="package" method="_yU7-dWRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x-nJImRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x-nJI2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x-nJIWRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-nJJGRREe6bAesDIgR3sg" type="_x-miEGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yO-gYGRREe6bAesDIgR3sg" name="CombinedActivation" visibility="package" method="_yU7-eGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yO-gY2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yO-gZGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yO-gYWRREe6bAesDIgR3sg" name="elem" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yO-gYmRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yO-gZWRREe6bAesDIgR3sg" type="_x-miEGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yO-gZmRREe6bAesDIgR3sg" name="CombinedActivation" visibility="package" method="_yU8lgGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yO_HcmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yO_Hc2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yO_HcGRREe6bAesDIgR3sg" name="priorEntry" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yO_HcWRREe6bAesDIgR3sg" name="next" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yO_HdGRREe6bAesDIgR3sg" type="_x-miEGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yO_HdWRREe6bAesDIgR3sg" name="canCombine" method="_yU8lhGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yO_HdmRREe6bAesDIgR3sg" name="a2" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yO_ugGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-o-UGRREe6bAesDIgR3sg" name="CommunicationGraph">
              <ownedComment xmi:id="_yWEm5GRREe6bAesDIgR3sg">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yPCx0mRREe6bAesDIgR3sg" general="_yAq-oGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTVb8GRREe6bAesDIgR3sg" name="wfm" visibility="package" type="_x-6rIGRREe6bAesDIgR3sg" association="_yW3REWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTVb8mRREe6bAesDIgR3sg" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTWDAWRREe6bAesDIgR3sg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTWDA2RREe6bAesDIgR3sg" name="workLoad" visibility="package" type="_yCI-QGRREe6bAesDIgR3sg" association="_yW34IWRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU8lh2RREe6bAesDIgR3sg" name="CommunicationGraph" specification="_yPBjsGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU8liGRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU8liWRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU8limRREe6bAesDIgR3sg" type="_x-o-UGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU8li2RREe6bAesDIgR3sg" name="CommunicationGraph" specification="_yPCKwGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU8ljGRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU8ljWRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU8ljmRREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU8lj2RREe6bAesDIgR3sg" type="_x-o-UGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU9MkGRREe6bAesDIgR3sg" name="createHeader" specification="_x-qMcGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU9MkWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU9MkmRREe6bAesDIgR3sg" name="createFooter" specification="_x-rakGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU9Mk2RREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU9MlGRREe6bAesDIgR3sg" name="visualization" specification="_x-sBomRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU9MlWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU9zoGRREe6bAesDIgR3sg" name="createWarpFileContent" specification="_x-sosmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU9zoWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x-qMcGRREe6bAesDIgR3sg" name="createHeader" method="_yU9MkGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPCKx2RREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x-rakGRREe6bAesDIgR3sg" name="createFooter" method="_yU9MkmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPCx0GRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x-sBomRREe6bAesDIgR3sg" name="visualization" method="_yU9MlGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPCx0WRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x-sosmRREe6bAesDIgR3sg" name="createWarpFileContent" method="_yU9zoGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-sos2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPBjsGRREe6bAesDIgR3sg" name="CommunicationGraph" method="_yU8lh2RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPBjs2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPBjtGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPBjsWRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPBjsmRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPBjtWRREe6bAesDIgR3sg" type="_x-o-UGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPCKwGRREe6bAesDIgR3sg" name="CommunicationGraph" method="_yU8li2RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPCKxGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPCKxWRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPCKwWRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPCKwmRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPCKw2RREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPCKxmRREe6bAesDIgR3sg" type="_x-o-UGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-vE8GRREe6bAesDIgR3sg" name="ConnectivityPoset">
              <ownedComment xmi:id="_yWEm5WRREe6bAesDIgR3sg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_yPEnAGRREe6bAesDIgR3sg" general="_yCh_0GRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU9zomRREe6bAesDIgR3sg" name="ConnectivityPoset" specification="_yPD_8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU9zo2RREe6bAesDIgR3sg" name="workload" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU9zpGRREe6bAesDIgR3sg" type="_x-vE8GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU9zpWRREe6bAesDIgR3sg" name="findCoordinator" specification="_yRrPEGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU9zpmRREe6bAesDIgR3sg" name="nodesInFlow" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU9zp2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yPD_8GRREe6bAesDIgR3sg" name="ConnectivityPoset" visibility="package" method="_yU9zomRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPD_8mRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPD_82RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPD_8WRREe6bAesDIgR3sg" name="workload" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPD_9GRREe6bAesDIgR3sg" type="_x-vE8GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRrPEGRREe6bAesDIgR3sg" name="findCoordinator" visibility="protected" method="_yU9zpWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRr2IGRREe6bAesDIgR3sg" name="nodesInFlow" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRr2IWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-wTEGRREe6bAesDIgR3sg" name="DeadlineComparator">
              <interfaceRealization xmi:id="_yRsdM2RREe6bAesDIgR3sg" client="_x-wTEGRREe6bAesDIgR3sg" supplier="_yPF1IGRREe6bAesDIgR3sg" contract="_yPF1IGRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yU-asGRREe6bAesDIgR3sg" name="compare" specification="_yRtrUWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yU-asWRREe6bAesDIgR3sg" name="obj1" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU-asmRREe6bAesDIgR3sg" name="obj2" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yU-as2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yRtrUWRREe6bAesDIgR3sg" name="compare" method="_yU-asGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRtrUmRREe6bAesDIgR3sg" name="obj1" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRtrU2RREe6bAesDIgR3sg" name="obj2" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRuSYGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-xhMGRREe6bAesDIgR3sg" name="Description">
              <ownedComment xmi:id="_yWEm5mRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yRu5cmRREe6bAesDIgR3sg" general="_yO3LoGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTWqEGRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTWqEWRREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVAP4GRREe6bAesDIgR3sg" name="Description" specification="_x-yIQGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVAP4WRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVAP4mRREe6bAesDIgR3sg" name="Description" specification="_x-yvUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVAP42RREe6bAesDIgR3sg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVAP5GRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVA28GRREe6bAesDIgR3sg" name="toString" specification="_x-yvVWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVA28WRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x-yIQGRREe6bAesDIgR3sg" name="Description" method="_yVAP4GRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x-yIQWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x-yIQmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x-yIQ2RREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x-yvUGRREe6bAesDIgR3sg" name="Description" method="_yVAP4mRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x-yvUmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x-yvU2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x-yvUWRREe6bAesDIgR3sg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-yvVGRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x-yvVWRREe6bAesDIgR3sg" name="toString" method="_yVA28GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-yvVmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-zWYmRREe6bAesDIgR3sg" name="Edge">
              <generalization xmi:id="_yPIRYmRREe6bAesDIgR3sg" general="_yBQNcGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTWqEmRREe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTXRIGRREe6bAesDIgR3sg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTXRIWRREe6bAesDIgR3sg" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTXRImRREe6bAesDIgR3sg" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTXRI2RREe6bAesDIgR3sg" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTXRJGRREe6bAesDIgR3sg" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTXRJWRREe6bAesDIgR3sg" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTXRJmRREe6bAesDIgR3sg" name="state" type="_x-z9cGRREe6bAesDIgR3sg" association="_yWF1AGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTX4MGRREe6bAesDIgR3sg" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yRwHkGRREe6bAesDIgR3sg" client="_x-zWYmRREe6bAesDIgR3sg" supplier="_yRqA8WRREe6bAesDIgR3sg" contract="_yRqA8WRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVA28mRREe6bAesDIgR3sg" name="Edge" specification="_x-1LkGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVA282RREe6bAesDIgR3sg" type="_x-zWYmRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVA29GRREe6bAesDIgR3sg" name="Edge" specification="_x-1yoGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVA29WRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVA29mRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVA292RREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVA2-GRREe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVA2-WRREe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVA2-mRREe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVA2-2RREe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVA2_GRREe6bAesDIgR3sg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVA2_WRREe6bAesDIgR3sg" type="_x-zWYmRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVA2_mRREe6bAesDIgR3sg" name="compareTo" specification="_yPHqUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVA2_2RREe6bAesDIgR3sg" name="edge" type="_x-zWYmRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVA3AGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVBeAGRREe6bAesDIgR3sg" name="toString" specification="_x-2ZsGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVBeAWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVBeAmRREe6bAesDIgR3sg" name="print" specification="_x-3Aw2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVBeA2RREe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVBeBGRREe6bAesDIgR3sg" name="print" specification="_x-3n02RREe6bAesDIgR3sg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x-1LkGRREe6bAesDIgR3sg" name="Edge" visibility="package" method="_yVA28mRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x-1LkWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x-1LkmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x-1Lk2RREe6bAesDIgR3sg" type="_x-zWYmRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x-1yoGRREe6bAesDIgR3sg" name="Edge" visibility="package" method="_yVA29GRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x-1yqWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x-1yqmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x-1yoWRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-1yomRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-1yo2RREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-1ypGRREe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-1ypWRREe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-1ypmRREe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-1yp2RREe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-1yqGRREe6bAesDIgR3sg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-1yq2RREe6bAesDIgR3sg" type="_x-zWYmRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x-2ZsGRREe6bAesDIgR3sg" name="toString" method="_yVBeAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-2ZsWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-3Aw2RREe6bAesDIgR3sg" name="print" method="_yVBeAmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-3AxGRREe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-3n02RREe6bAesDIgR3sg" name="print" method="_yVBeBGRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yPHqUGRREe6bAesDIgR3sg" name="compareTo" method="_yVA2_mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPHqUWRREe6bAesDIgR3sg" name="edge" type="_x-zWYmRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPHqUmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_x-z9cGRREe6bAesDIgR3sg" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_x-0kgWRREe6bAesDIgR3sg" name="RELEASED"/>
                <ownedLiteral xmi:id="_x-0kgmRREe6bAesDIgR3sg" name="EXECUTING"/>
                <ownedLiteral xmi:id="_x-0kg2RREe6bAesDIgR3sg" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-6rIGRREe6bAesDIgR3sg" name="FileManager">
              <ownedComment xmi:id="_yWHDIGRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yTYfQGRREe6bAesDIgR3sg" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTZGUGRREe6bAesDIgR3sg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVBeBWRREe6bAesDIgR3sg" name="FileManager" specification="_x-7SMGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVBeBmRREe6bAesDIgR3sg" type="_x-6rIGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVBeB2RREe6bAesDIgR3sg" name="FileManager" specification="_x-75QGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVBeCGRREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVBeCWRREe6bAesDIgR3sg" type="_x-6rIGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVCFEGRREe6bAesDIgR3sg" name="getDocumentsDirectory" specification="_x-75RWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVCFEWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVCFEmRREe6bAesDIgR3sg" name="getCurrentDirectory" specification="_x-75R2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVCFE2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVCFFGRREe6bAesDIgR3sg" name="createFile" specification="_x-8gUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVCFFWRREe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVCFFmRREe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVCFF2RREe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVCFGGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVCFGWRREe6bAesDIgR3sg" name="createFile" specification="_x-9HYGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVCFGmRREe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVCFG2RREe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVCFHGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVCFHWRREe6bAesDIgR3sg" name="createDirectory" specification="_x-9HZGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVCFHmRREe6bAesDIgR3sg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVCFH2RREe6bAesDIgR3sg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVCFIGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVCFIWRREe6bAesDIgR3sg" name="writeFile" specification="_x-9ucGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVCFImRREe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVCFI2RREe6bAesDIgR3sg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVCsIGRREe6bAesDIgR3sg" name="readFile" specification="_x-9uc2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVCsIWRREe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVCsImRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x-7SMGRREe6bAesDIgR3sg" name="FileManager" method="_yVBeBWRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x-7SMWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x-7SMmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWHDIWRREe6bAesDIgR3sg">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_x-7SM2RREe6bAesDIgR3sg" type="_x-6rIGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x-75QGRREe6bAesDIgR3sg" name="FileManager" method="_yVBeB2RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x-75QmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x-75Q2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x-75QWRREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-75RGRREe6bAesDIgR3sg" type="_x-6rIGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x-75RWRREe6bAesDIgR3sg" name="getDocumentsDirectory" method="_yVCFEGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-75RmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-75R2RREe6bAesDIgR3sg" name="getCurrentDirectory" method="_yVCFEmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-75SGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-8gUGRREe6bAesDIgR3sg" name="createFile" method="_yVCFFGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWHDImRREe6bAesDIgR3sg">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_x-8gUWRREe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-8gUmRREe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-8gU2RREe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-8gVGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-9HYGRREe6bAesDIgR3sg" name="createFile" method="_yVCFGWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-9HYWRREe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-9HYmRREe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-9HY2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-9HZGRREe6bAesDIgR3sg" name="createDirectory" method="_yVCFHWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-9HZWRREe6bAesDIgR3sg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-9HZmRREe6bAesDIgR3sg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-9HZ2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-9ucGRREe6bAesDIgR3sg" name="writeFile" method="_yVCFIWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-9ucWRREe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-9ucmRREe6bAesDIgR3sg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x-9uc2RREe6bAesDIgR3sg" name="readFile" method="_yVCsIGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x-9udGRREe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x-9udWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x--8kGRREe6bAesDIgR3sg" name="FlowMap">
              <ownedComment xmi:id="_yWHDI2RREe6bAesDIgR3sg">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yPL7wGRREe6bAesDIgR3sg" general="_x-MSYGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTZtYGRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTZtYWRREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x-_joGRREe6bAesDIgR3sg" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_yWHDJGRREe6bAesDIgR3sg">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yPMi0WRREe6bAesDIgR3sg" general="_x-MSYGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTZtYmRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTZtY2RREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_AKsGRREe6bAesDIgR3sg" name="GraphViz">
              <ownedComment xmi:id="_yWHDJWRREe6bAesDIgR3sg">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yPNw-GRREe6bAesDIgR3sg" general="_yAq-oGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTZtZGRREe6bAesDIgR3sg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTaUcGRREe6bAesDIgR3sg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTaUcWRREe6bAesDIgR3sg" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTaUcmRREe6bAesDIgR3sg" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTaUc2RREe6bAesDIgR3sg" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTaUdWRREe6bAesDIgR3sg" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTa7gWRREe6bAesDIgR3sg" name="wfm" visibility="package" type="_x-6rIGRREe6bAesDIgR3sg" association="_yW6UYWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTa7g2RREe6bAesDIgR3sg" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTbikWRREe6bAesDIgR3sg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTbik2RREe6bAesDIgR3sg" name="gv" visibility="package" type="_x_AKsGRREe6bAesDIgR3sg" association="_yW7igGRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVCsI2RREe6bAesDIgR3sg" name="GraphViz" specification="_yPNJ4GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVCsJGRREe6bAesDIgR3sg" name="wfm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVCsJWRREe6bAesDIgR3sg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVCsJmRREe6bAesDIgR3sg" type="_x_AKsGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVCsJ2RREe6bAesDIgR3sg" name="GraphViz" specification="_yPNw8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVCsKGRREe6bAesDIgR3sg" name="wfm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVCsKWRREe6bAesDIgR3sg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVCsKmRREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVCsK2RREe6bAesDIgR3sg" type="_x_AKsGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVCsLGRREe6bAesDIgR3sg" name="visualization" specification="_x_BY0GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVCsLWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVCsLmRREe6bAesDIgR3sg" name="initializeGraphVizContent" specification="_x_B_4mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVCsL2RREe6bAesDIgR3sg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVCsMGRREe6bAesDIgR3sg" name="finalizeGraphVizContent" specification="_x_Cm8GRREe6bAesDIgR3sg">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVCsMWRREe6bAesDIgR3sg" name="getGraphVizContent" specification="_x_Cm8WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVCsMmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVDTMGRREe6bAesDIgR3sg" name="createGraphVizContent" specification="_x_DOAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVDTMWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVDTMmRREe6bAesDIgR3sg" name="addFlowToGraphViz" specification="_x_DOAmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVDTM2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVDTNGRREe6bAesDIgR3sg" name="addSrcNodeToGraphViz" specification="_x_DOBGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVDTNWRREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVD6QGRREe6bAesDIgR3sg" name="addSnkNodeToGraphViz" specification="_x_D1EGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVD6QWRREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVD6QmRREe6bAesDIgR3sg" name="finalizeCurrentFlowInGraphViz" specification="_x_D1EmRREe6bAesDIgR3sg">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVD6Q2RREe6bAesDIgR3sg" name="addNodeName" specification="_x_D1E2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVD6RGRREe6bAesDIgR3sg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVD6RWRREe6bAesDIgR3sg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_BY0GRREe6bAesDIgR3sg" name="visualization" method="_yVCsLGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPNw92RREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x_B_4mRREe6bAesDIgR3sg" name="initializeGraphVizContent" method="_yVCsLmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_B_42RREe6bAesDIgR3sg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_Cm8GRREe6bAesDIgR3sg" name="finalizeGraphVizContent" method="_yVCsMGRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_x_Cm8WRREe6bAesDIgR3sg" name="getGraphVizContent" method="_yVCsMWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWHqMGRREe6bAesDIgR3sg">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_x_Cm8mRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_DOAGRREe6bAesDIgR3sg" name="createGraphVizContent" method="_yVDTMGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_DOAWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_DOAmRREe6bAesDIgR3sg" name="addFlowToGraphViz" method="_yVDTMmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_DOA2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_DOBGRREe6bAesDIgR3sg" name="addSrcNodeToGraphViz" method="_yVDTNGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_DOBWRREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_D1EGRREe6bAesDIgR3sg" name="addSnkNodeToGraphViz" method="_yVD6QGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_D1EWRREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_D1EmRREe6bAesDIgR3sg" name="finalizeCurrentFlowInGraphViz" method="_yVD6QmRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_x_D1E2RREe6bAesDIgR3sg" name="addNodeName" visibility="private" method="_yVD6Q2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_D1FGRREe6bAesDIgR3sg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_D1FWRREe6bAesDIgR3sg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPNJ4GRREe6bAesDIgR3sg" name="GraphViz" visibility="package" method="_yVCsI2RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPNJ42RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPNJ5GRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPNJ4WRREe6bAesDIgR3sg" name="wfm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPNJ4mRREe6bAesDIgR3sg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPNJ5WRREe6bAesDIgR3sg" type="_x_AKsGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPNw8GRREe6bAesDIgR3sg" name="GraphViz" visibility="package" method="_yVCsJ2RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPNw9GRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPNw9WRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPNw8WRREe6bAesDIgR3sg" name="wfm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPNw8mRREe6bAesDIgR3sg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPNw82RREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPNw9mRREe6bAesDIgR3sg" type="_x_AKsGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_FqQGRREe6bAesDIgR3sg" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_yWHqMWRREe6bAesDIgR3sg">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_yRzK4GRREe6bAesDIgR3sg" general="_yPQNM2RREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTcJoGRREe6bAesDIgR3sg" name="gv" visibility="package" type="_x_AKsGRREe6bAesDIgR3sg" association="_yW7ig2RREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVD6RmRREe6bAesDIgR3sg" name="GraphVizListener" specification="_yPRbUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVEhUGRREe6bAesDIgR3sg" name="gv" type="_x_AKsGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVEhUWRREe6bAesDIgR3sg" type="_x_FqQGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVEhUmRREe6bAesDIgR3sg" name="buildGraphViz" specification="_yPRbVWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVEhU2RREe6bAesDIgR3sg" name="gv" type="_x_AKsGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVEhVGRREe6bAesDIgR3sg" name="enterWarpName" specification="_yPSCYWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVEhVWRREe6bAesDIgR3sg" name="ctx" type="_yPRbV2RREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVEhVmRREe6bAesDIgR3sg" name="exitWarp" specification="_yPSpdGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVEhV2RREe6bAesDIgR3sg" name="ctx" type="_yPSpcmRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVFIYGRREe6bAesDIgR3sg" name="enterFlowName" specification="_yPTQhmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVFIYWRREe6bAesDIgR3sg" name="ctx" type="_yPTQhGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVFIYmRREe6bAesDIgR3sg" name="exitSrcNode" specification="_yPUeoWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVFIY2RREe6bAesDIgR3sg" name="ctx" type="_yPT3lGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVFIZGRREe6bAesDIgR3sg" name="exitSnkNode" specification="_yPVFsWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVFIZWRREe6bAesDIgR3sg" name="ctx" type="_yPUepmRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVFIZmRREe6bAesDIgR3sg" name="exitFlow" specification="_yPVswmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVFIZ2RREe6bAesDIgR3sg" name="ctx" type="_yPVswGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yPRbUGRREe6bAesDIgR3sg" name="GraphVizListener" visibility="private" method="_yVD6RmRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPRbUmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPRbU2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPRbUWRREe6bAesDIgR3sg" name="gv" type="_x_AKsGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPRbVGRREe6bAesDIgR3sg" type="_x_FqQGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPRbVWRREe6bAesDIgR3sg" name="buildGraphViz" isStatic="true" method="_yVEhUmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPRbVmRREe6bAesDIgR3sg" name="gv" type="_x_AKsGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPSCYWRREe6bAesDIgR3sg" name="enterWarpName" method="_yVEhVGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPSCYmRREe6bAesDIgR3sg" name="ctx" type="_yPRbV2RREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPSpdGRREe6bAesDIgR3sg" name="exitWarp" method="_yVEhVmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPTQgGRREe6bAesDIgR3sg" name="ctx" type="_yPSpcmRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPTQhmRREe6bAesDIgR3sg" name="enterFlowName" method="_yVFIYGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPT3kGRREe6bAesDIgR3sg" name="ctx" type="_yPTQhGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPUeoWRREe6bAesDIgR3sg" name="exitSrcNode" method="_yVFIYmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPUeomRREe6bAesDIgR3sg" name="ctx" type="_yPT3lGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPVFsWRREe6bAesDIgR3sg" name="exitSnkNode" method="_yVFIZGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPVFsmRREe6bAesDIgR3sg" name="ctx" type="_yPUepmRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPVswmRREe6bAesDIgR3sg" name="exitFlow" method="_yVFIZmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPVsw2RREe6bAesDIgR3sg" name="ctx" type="_yPVswGRREe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_HfcGRREe6bAesDIgR3sg" name="GuiVisualization">
              <ownedComment xmi:id="_yWHqMmRREe6bAesDIgR3sg">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yTcwsWRREe6bAesDIgR3sg" name="frame" visibility="package" type="_yPW64mRREe6bAesDIgR3sg" association="_yW8woGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTdXwWRREe6bAesDIgR3sg" name="jtable" visibility="package" type="_yPXh82RREe6bAesDIgR3sg" association="_yW9XsWRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVGWgGRREe6bAesDIgR3sg" name="GuiVisualization" specification="_x_IGgGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVGWgWRREe6bAesDIgR3sg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVGWgmRREe6bAesDIgR3sg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yVGWg2RREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVGWhGRREe6bAesDIgR3sg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yVGWhWRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVGWhmRREe6bAesDIgR3sg" type="_x_HfcGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVGWh2RREe6bAesDIgR3sg" name="setVisible" specification="_x_ItlWRREe6bAesDIgR3sg">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVG9kGRREe6bAesDIgR3sg" name="resizeColumnWidth" specification="_yRzx8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVG9kWRREe6bAesDIgR3sg" name="table" type="_yPXh82RREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_IGgGRREe6bAesDIgR3sg" name="GuiVisualization" method="_yVGWgGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x_IGhGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x_ItkGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWHqM2RREe6bAesDIgR3sg">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_x_IGgWRREe6bAesDIgR3sg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_IGgmRREe6bAesDIgR3sg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_x_ItkmRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_IGg2RREe6bAesDIgR3sg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_x_Itk2RREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_ItkWRREe6bAesDIgR3sg" type="_x_HfcGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x_ItlWRREe6bAesDIgR3sg" name="setVisible" method="_yVGWh2RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWHqNGRREe6bAesDIgR3sg">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yRzx8GRREe6bAesDIgR3sg" name="resizeColumnWidth" visibility="private" method="_yVG9kGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRzx8WRREe6bAesDIgR3sg" name="table" type="_yPXh82RREe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_J7sGRREe6bAesDIgR3sg" name="InputGraphFile">
              <ownedComment xmi:id="_yWHqNWRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yTd-0GRREe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTd-0WRREe6bAesDIgR3sg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTd-0mRREe6bAesDIgR3sg" name="wfm" visibility="private" type="_x-6rIGRREe6bAesDIgR3sg" association="_yW-l0WRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTel4WRREe6bAesDIgR3sg" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTel4mRREe6bAesDIgR3sg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTfM8WRREe6bAesDIgR3sg" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTfM8mRREe6bAesDIgR3sg" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVG9kmRREe6bAesDIgR3sg" name="InputGraphFile" specification="_yPalQGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVG9k2RREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVG9lGRREe6bAesDIgR3sg" type="_x_J7sGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVHkoGRREe6bAesDIgR3sg" name="InputGraphFile" specification="_yPbMUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVHkoWRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVHkomRREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVHko2RREe6bAesDIgR3sg" type="_x_J7sGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVHkpGRREe6bAesDIgR3sg" name="setGraphFileName" specification="_x_LJ0GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVHkpWRREe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVHkpmRREe6bAesDIgR3sg" name="verifyGraphFileName" specification="_x_LJ0mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVHkp2RREe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVHkqGRREe6bAesDIgR3sg" name="readGraphFile" specification="_x_Lw4GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVHkqWRREe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVHkqmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVHkq2RREe6bAesDIgR3sg" name="getInputGraphFileName" specification="_x_Lw42RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVHkrGRREe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVHkrWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVHkrmRREe6bAesDIgR3sg" name="readGraphFileContents" specification="_x_Lw5mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVHkr2RREe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVHksGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVHksWRREe6bAesDIgR3sg" name="printVerboseMessage" specification="_x_MX8WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVHksmRREe6bAesDIgR3sg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVHks2RREe6bAesDIgR3sg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVHktGRREe6bAesDIgR3sg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_LJ0GRREe6bAesDIgR3sg" name="setGraphFileName" visibility="private" method="_yVHkpGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_LJ0WRREe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_LJ0mRREe6bAesDIgR3sg" name="verifyGraphFileName" visibility="private" method="_yVHkpmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_LJ02RREe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_Lw4GRREe6bAesDIgR3sg" name="readGraphFile" method="_yVHkqGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_Lw4WRREe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_Lw4mRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_Lw42RREe6bAesDIgR3sg" name="getInputGraphFileName" visibility="private" method="_yVHkq2RREe6bAesDIgR3sg" raisedException="_yR0ZAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_Lw5GRREe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_Lw5WRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_Lw5mRREe6bAesDIgR3sg" name="readGraphFileContents" visibility="private" method="_yVHkrmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_Lw52RREe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_MX8GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_MX8WRREe6bAesDIgR3sg" name="printVerboseMessage" visibility="private" method="_yVHksWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_MX8mRREe6bAesDIgR3sg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_MX82RREe6bAesDIgR3sg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_MX9GRREe6bAesDIgR3sg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPalQGRREe6bAesDIgR3sg" name="InputGraphFile" method="_yVG9kmRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPalQmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPalQ2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPalQWRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPalRGRREe6bAesDIgR3sg" type="_x_J7sGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPbMUGRREe6bAesDIgR3sg" name="InputGraphFile" method="_yVHkoGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPbMU2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPbMVGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPbMUWRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPbMUmRREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPbMVWRREe6bAesDIgR3sg" type="_x_J7sGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_NmEGRREe6bAesDIgR3sg" name="InstructionTimeSlot">
              <generalization xmi:id="_yPdBgGRREe6bAesDIgR3sg" general="_yABeYGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTf0AGRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTf0AWRREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVJZ0GRREe6bAesDIgR3sg" name="InstructionTimeSlot" specification="_x_ONIGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVJZ0WRREe6bAesDIgR3sg" type="_x_NmEGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVLPAGRREe6bAesDIgR3sg" name="InstructionTimeSlot" specification="_x_O0MGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVLPAWRREe6bAesDIgR3sg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVLPAmRREe6bAesDIgR3sg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVLPA2RREe6bAesDIgR3sg" type="_x_NmEGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVLPBGRREe6bAesDIgR3sg" name="InstructionTimeSlot" specification="_x_PbQGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVLPBWRREe6bAesDIgR3sg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yVLPBmRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVLPB2RREe6bAesDIgR3sg" type="_x_NmEGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_ONIGRREe6bAesDIgR3sg" name="InstructionTimeSlot" method="_yVJZ0GRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x_ONIWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x_ONImRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x_ONI2RREe6bAesDIgR3sg" type="_x_NmEGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x_O0MGRREe6bAesDIgR3sg" name="InstructionTimeSlot" visibility="package" method="_yVLPAGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x_O0M2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x_O0NGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x_O0MWRREe6bAesDIgR3sg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_O0MmRREe6bAesDIgR3sg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_O0NWRREe6bAesDIgR3sg" type="_x_NmEGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x_PbQGRREe6bAesDIgR3sg" name="InstructionTimeSlot" visibility="package" method="_yVLPBGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x_PbQmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x_PbQ2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x_PbQWRREe6bAesDIgR3sg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_x_PbRWRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_PbRGRREe6bAesDIgR3sg" type="_x_NmEGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_QCUGRREe6bAesDIgR3sg" name="LatencyAnalysis">
              <ownedComment xmi:id="__BeOwH9pEe6F645s24XfkQ">
                <body>@author sgoddard&#xD;
@author srgoddard (for java doc comments/refactor buildLatencyReport())&#xD;
@version 1.6</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yTgbEGRREe6bAesDIgR3sg" name="DEADLINE_MISS" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTgbEmRREe6bAesDIgR3sg" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTgbE2RREe6bAesDIgR3sg" name="FLOW_SEPARATOR" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTgbFGRREe6bAesDIgR3sg" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yThCIGRREe6bAesDIgR3sg" name="latencyReport" visibility="private" type="_x-xhMGRREe6bAesDIgR3sg" association="_yW_M4WRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yThCImRREe6bAesDIgR3sg" name="program" visibility="private" type="_yBmywGRREe6bAesDIgR3sg" association="_yW_z8WRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yThCJGRREe6bAesDIgR3sg" name="workload" visibility="private" type="_yCI-QGRREe6bAesDIgR3sg" association="_yXAbAWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yThpMWRREe6bAesDIgR3sg" name="programTable" visibility="private" type="_x_suQGRREe6bAesDIgR3sg" association="_yXBCEWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTiQQWRREe6bAesDIgR3sg" name="nodeIndex" visibility="private" type="_yOv24GRREe6bAesDIgR3sg" association="_yXBpIWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="__BZWQH9pEe6F645s24XfkQ" name="time" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="__BZ9UX9pEe6F645s24XfkQ" name="instance" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="__BakYH9pEe6F645s24XfkQ" name="numTxRequired" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="__BakYn9pEe6F645s24XfkQ" name="numTxProcessed" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="__BbLcX9pEe6F645s24XfkQ" name="dsl" visibility="private" type="_yBCLAGRREe6bAesDIgR3sg" association="__BgD8H9pEe6F645s24XfkQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVMdIGRREe6bAesDIgR3sg" name="LatencyAnalysis" specification="_yPePoGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVMdIWRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVMdImRREe6bAesDIgR3sg" type="_x_QCUGRREe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this(warp.toProgram());&#xD;
 //this.program = warp.toProgram();&#xD;
 //this.workload = warp.toWorkload();&#xD;
 //this.programTable = program.getSchedule();&#xD;
 //this.nodeIndex = program.getNodeMapIndex();&#xD;
 //buildLatencyReport();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVMdI2RREe6bAesDIgR3sg" name="LatencyAnalysis" specification="_yPe2sGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVMdJGRREe6bAesDIgR3sg" name="program" type="_yBmywGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVMdJWRREe6bAesDIgR3sg" type="_x_QCUGRREe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
 dsl = new WarpDSL();&#xD;
 buildLatencyReport();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVMdJmRREe6bAesDIgR3sg" name="latencyReport" specification="_x_RQcGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVMdJ2RREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return latencyReport;&#xD;
	  &#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVMdKGRREe6bAesDIgR3sg" name="numMatchingTx" specification="_x_R3gGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVMdKWRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVMdKmRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVMdK2RREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVMdLGRREe6bAesDIgR3sg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVMdLWRREe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_51mNQGUyEe6bAesDIgR3sg" name="getLatencyTable" specification="_ib474GUyEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_51mNQWUyEe6bAesDIgR3sg" type="_x_suQGRREe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO implement this operation&#xD;
	return programTable;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="__BdAoH9pEe6F645s24XfkQ" name="buildLatencyReport" specification="__BKFsH9pEe6F645s24XfkQ">
                <language>java</language>
                <body>/*&#xD;
  * &#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
	latencyReport = new Description();  &#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {	&#xD;
 	helperBuildLatency(flowName);			&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="__BdAoX9pEe6F645s24XfkQ" name="helperBuildLatency" specification="__BO-MH9pEe6F645s24XfkQ">
                <ownedParameter xmi:id="__BdAon9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>time = 0;&#xD;
  	/* get snk and src from helper function getSnk() and getSrc()*/&#xD;
 String snk = getSnk(flowName);&#xD;
 String src = getSrc(flowName);&#xD;
 /* get (column) indexes into programTable of these nodes */&#xD;
 var snkIndex = nodeIndex.get(snk);   &#xD;
 var srcIndex = nodeIndex.get(src);	&#xD;
 /* get the number of transmission required for the last link in the flow */&#xD;
 getNumTxRequired(flowName);&#xD;
 numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
 instance = 0;&#xD;
 while (time &lt; workload.getHyperPeriod()) {&#xD;
 	calculateReleaseTime(src, snk, srcIndex, snkIndex, flowName);&#xD;
    }&#xD;
    String flowSeparator = FLOW_SEPARATOR;&#xD;
    latencyReport.add(flowSeparator);				&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="__BdAo39pEe6F645s24XfkQ" name="getSnk" specification="__BQzYH9pEe6F645s24XfkQ">
                <ownedParameter xmi:id="__BdApH9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BdApX9pEe6F645s24XfkQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   return nodes[flowSnkIndex];&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="__BdnsH9pEe6F645s24XfkQ" name="getSrc" specification="__BRacH9pEe6F645s24XfkQ">
                <ownedParameter xmi:id="__BdnsX9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__Bdnsn9pEe6F645s24XfkQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   return nodes[flowSnkIndex - 1];&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="__Bdns39pEe6F645s24XfkQ" name="getNumTxRequired" specification="__BRac39pEe6F645s24XfkQ">
                <ownedParameter xmi:id="__BdntH9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
	  numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="__BdntX9pEe6F645s24XfkQ" name="calculateReleaseTime" specification="__BSBgH9pEe6F645s24XfkQ">
                <ownedParameter xmi:id="__Bdntn9pEe6F645s24XfkQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__Bdnt39pEe6F645s24XfkQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BdnuH9pEe6F645s24XfkQ" name="srcIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BdnuX9pEe6F645s24XfkQ" name="snkIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__Bdnun9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
	  var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
	  var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
	  time = releaseTime;&#xD;
	  numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
	  while (time &lt; nextReleaseTime) {&#xD;
		  calculateNumTxProcessed(srcIndex, snkIndex, flowName, src, snk, deadline, releaseTime, &#xD;
				  nextReleaseTime);&#xD;
		  /* get instruction strings at these to locations */&#xD;
	  }&#xD;
	  if (numTxProcessed &lt; numTxRequired) {&#xD;
		  /*&#xD;
		   * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
		   * printed with the schedulers built&#xD;
		   */&#xD;
		  recordLatencyMessage(flowName);&#xD;
	  }&#xD;
	  instance++;	&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="__Bdnu39pEe6F645s24XfkQ" name="calculateNumTxProcessed" specification="__BSokH9pEe6F645s24XfkQ">
                <ownedParameter xmi:id="__BdnvH9pEe6F645s24XfkQ" name="srcIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BdnvX9pEe6F645s24XfkQ" name="snkIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__Bdnvn9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__Bdnv39pEe6F645s24XfkQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BdnwH9pEe6F645s24XfkQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BdnwX9pEe6F645s24XfkQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__Bdnwn9pEe6F645s24XfkQ" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__Bdnw39pEe6F645s24XfkQ" name="nextReleaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>String instr1 = programTable.get(time, srcIndex);&#xD;
	  String instr2 = programTable.get(time, snkIndex);&#xD;
	  numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
	  numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
	  if (numTxProcessed == numTxRequired) {&#xD;
		  /*&#xD;
		   * all required Tx attempts have been made compute and record latency&#xD;
		   */&#xD;
		  var latency = time - releaseTime + 1;&#xD;
		  // record and report latency message via constructLatencyMessage()&#xD;
		  constructLatencyMessage(flowName, deadline, latency);&#xD;
		  time = nextReleaseTime;&#xD;
		} else {&#xD;
			time++;&#xD;
		}&#xD;
	  &#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="__BdnxH9pEe6F645s24XfkQ" name="constructLatencyMessage" specification="__BT2sX9pEe6F645s24XfkQ">
                <ownedParameter xmi:id="__BdnxX9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__Bdnxn9pEe6F645s24XfkQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__Bdnx39pEe6F645s24XfkQ" name="latency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>String latencyMsg = &#xD;
 		String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
 if (latency > deadline) {&#xD;
 /* deadline missed, so color the text red */&#xD;
 	 latencyMsg += DEADLINE_MISS;&#xD;
 }&#xD;
  	latencyMsg += &quot;\n&quot;;&#xD;
  	latencyReport.add(latencyMsg);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="__BdnyH9pEe6F645s24XfkQ" name="recordLatencyMessage" specification="__BUdw39pEe6F645s24XfkQ">
                <ownedParameter xmi:id="__BdnyX9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String latencyMsg =&#xD;
				String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
						flowName, instance);&#xD;
		latencyReport.add(latencyMsg);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_RQcGRREe6bAesDIgR3sg" name="latencyReport" method="_yVMdJmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="__BeOw39pEe6F645s24XfkQ">
                  <body>latencyReport() now returns latencyReport instead of building the report&#xD;
   * @return latencyReport</body>
                </ownedComment>
                <ownedParameter xmi:id="_yPe2tWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x_R3gGRREe6bAesDIgR3sg" name="numMatchingTx" method="_yVMdKGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="__Be1039pEe6F645s24XfkQ">
                  <body>@return numTX counts the numbers of Tx attempts made successfully&#xD;
 	* @param dsl is used as a mediator to establish new WarpDSL()&#xD;
 	* @param instructionParametersArray is used to obtain instruction parameters from the dsl.getInstructionParameters(instr)&#xD;
 	* This method is used to obtain the number of successful Tx attempts if flowName equals flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_x_R3gWRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_R3gmRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_R3g2RREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_R3hGRREe6bAesDIgR3sg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_R3hWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPePoGRREe6bAesDIgR3sg" name="LatencyAnalysis" visibility="package" method="_yVMdIGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPePomRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPePo2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="__BeOwX9pEe6F645s24XfkQ">
                  <body>This object holds the toWorkload()/getSchedule()/NodeMapIndex()/and toProgram()&#xD;
   * Has since been refactored with the LatencyAnalysis(Program program) constructor.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yPePoWRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPePpGRREe6bAesDIgR3sg" type="_x_QCUGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPe2sGRREe6bAesDIgR3sg" name="LatencyAnalysis" visibility="package" method="_yVMdI2RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPe2smRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPe2s2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="__BeOwn9pEe6F645s24XfkQ">
                  <body>This contains the program side of the nodes. Including toWorkload()/getSchedule()/getNodeMapIndex()&#xD;
   * We refactored the latencyAnalysis(WarpInterface Warp) with LatencyAnalysis(Program program). This&#xD;
   * removes code duplication making it easier to follow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yPe2sWRREe6bAesDIgR3sg" name="program" type="_yBmywGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPe2tGRREe6bAesDIgR3sg" type="_x_QCUGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ib474GUyEe6bAesDIgR3sg" name="getLatencyTable" visibility="public" method="_51mNQGUyEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ib474WUyEe6bAesDIgR3sg" type="_x_suQGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="__BKFsH9pEe6F645s24XfkQ" name="buildLatencyReport" method="__BdAoH9pEe6F645s24XfkQ"/>
              <ownedOperation xmi:id="__BO-MH9pEe6F645s24XfkQ" name="helperBuildLatency" method="__BdAoX9pEe6F645s24XfkQ">
                <ownedComment xmi:id="__BeOxH9pEe6F645s24XfkQ">
                  <body>Helps build latency report by dividing up the loops&#xD;
   * @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="__BQMUH9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="__BQzYH9pEe6F645s24XfkQ" name="getSnk" method="__BdAo39pEe6F645s24XfkQ">
                <ownedComment xmi:id="__BeOxX9pEe6F645s24XfkQ">
                  <body>Gets snk of last link in the flow, which is also the Flow snk node &#xD;
   * @param flowName&#xD;
   * @return nodes[flowSnkIndex]</body>
                </ownedComment>
                <ownedParameter xmi:id="__BQzYX9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BQzYn9pEe6F645s24XfkQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="__BRacH9pEe6F645s24XfkQ" name="getSrc" method="__BdnsH9pEe6F645s24XfkQ">
                <ownedComment xmi:id="__BeOxn9pEe6F645s24XfkQ">
                  <body>Gets the src of last link in the flow &#xD;
   * @param flowName&#xD;
   * @return nodes[flowSnkIndex - 1]</body>
                </ownedComment>
                <ownedParameter xmi:id="__BRacX9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BRacn9pEe6F645s24XfkQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="__BRac39pEe6F645s24XfkQ" name="getNumTxRequired" method="__Bdns39pEe6F645s24XfkQ">
                <ownedComment xmi:id="__BeOx39pEe6F645s24XfkQ">
                  <body>&#xD;
   * @param flowName&#xD;
   * @return Integer from array #of Tx Attempts Per Link</body>
                </ownedComment>
                <ownedParameter xmi:id="__BRadH9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="__BSBgH9pEe6F645s24XfkQ" name="calculateReleaseTime" method="__BdntX9pEe6F645s24XfkQ">
                <ownedComment xmi:id="__BeOyH9pEe6F645s24XfkQ">
                  <body>get next release time and absolute deadline of the flow&#xD;
   * @param numTxRequired&#xD;
   * @param src&#xD;
   * @param snk&#xD;
   * @param srcIndex&#xD;
   * @param snkIndex&#xD;
   * @param numTxProcessed&#xD;
   * @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="__BSBgX9pEe6F645s24XfkQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BSBgn9pEe6F645s24XfkQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BSBg39pEe6F645s24XfkQ" name="srcIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BSBhH9pEe6F645s24XfkQ" name="snkIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BSBhX9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="__BSokH9pEe6F645s24XfkQ" name="calculateNumTxProcessed" method="__Bdnu39pEe6F645s24XfkQ">
                <ownedComment xmi:id="__Be10H9pEe6F645s24XfkQ">
                  <body>Calculates numTxProcessed&#xD;
   * @param srcIndex&#xD;
   * @param snkIndex&#xD;
   * @param flowName&#xD;
   * @param src&#xD;
   * @param snk&#xD;
   * @param deadline&#xD;
   * @param releaseTime&#xD;
   * @param nextReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="__BSokX9pEe6F645s24XfkQ" name="srcIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BSokn9pEe6F645s24XfkQ" name="snkIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BSok39pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BSolH9pEe6F645s24XfkQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BSolX9pEe6F645s24XfkQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BSoln9pEe6F645s24XfkQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BSol39pEe6F645s24XfkQ" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BT2sH9pEe6F645s24XfkQ" name="nextReleaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="__BT2sX9pEe6F645s24XfkQ" name="constructLatencyMessage" method="__BdnxH9pEe6F645s24XfkQ">
                <ownedComment xmi:id="__Be10X9pEe6F645s24XfkQ">
                  <body>This method is to combine flowName, instance, and latency in a message.&#xD;
   * As well as include a message if a deadline is missed.&#xD;
   * @param flowName&#xD;
   * @param instance&#xD;
   * @param deadline&#xD;
   * @param latency&#xD;
   * @return latencyMsg</body>
                </ownedComment>
                <ownedParameter xmi:id="__BUdwH9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BUdwX9pEe6F645s24XfkQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="__BUdwn9pEe6F645s24XfkQ" name="latency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="__BUdw39pEe6F645s24XfkQ" name="recordLatencyMessage" method="__BdnyH9pEe6F645s24XfkQ">
                <ownedComment xmi:id="__Be10n9pEe6F645s24XfkQ">
                  <body>Records unknown latency message for latency Report&#xD;
   * @param flowName&#xD;
   * @param instance</body>
                </ownedComment>
                <ownedParameter xmi:id="__BUdxH9pEe6F645s24XfkQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_TssGRREe6bAesDIgR3sg" name="LatencyVisualization">
              <ownedComment xmi:id="_yWIRQWRREe6bAesDIgR3sg">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2023 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.6&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yPgr42RREe6bAesDIgR3sg" general="_yAq-oGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTjeYGRREe6bAesDIgR3sg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTjeYWRREe6bAesDIgR3sg" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTjeYmRREe6bAesDIgR3sg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTjeY2RREe6bAesDIgR3sg" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTkFcGRREe6bAesDIgR3sg" name="warp" visibility="private" type="_yAD6oGRREe6bAesDIgR3sg" association="_yXC3QWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTkFcmRREe6bAesDIgR3sg" name="la" visibility="private" type="_x_QCUGRREe6bAesDIgR3sg" association="_yXDeUWRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVNEMGRREe6bAesDIgR3sg" name="LatencyVisualization" specification="_yPgE0GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVNEMWRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVNEMmRREe6bAesDIgR3sg" type="_x_TssGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yPgE0GRREe6bAesDIgR3sg" name="LatencyVisualization" visibility="package" method="_yVNEMGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPgr4GRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPgr4WRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPgE0WRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPgr4mRREe6bAesDIgR3sg" type="_x_TssGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_Vh4GRREe6bAesDIgR3sg" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_yR2OMGRREe6bAesDIgR3sg" client="_x_Vh4GRREe6bAesDIgR3sg" supplier="_yPF1IGRREe6bAesDIgR3sg" contract="_yPF1IGRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVNEM2RREe6bAesDIgR3sg" name="compare" specification="_yR21QWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVNENGRREe6bAesDIgR3sg" name="obj1" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVNENWRREe6bAesDIgR3sg" name="obj2" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVNENmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yR21QWRREe6bAesDIgR3sg" name="compare" method="_yVNEM2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yR21QmRREe6bAesDIgR3sg" name="obj1" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yR21Q2RREe6bAesDIgR3sg" name="obj2" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yR3cUGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_YlMGRREe6bAesDIgR3sg" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_yR3cVGRREe6bAesDIgR3sg" client="_x_YlMGRREe6bAesDIgR3sg" supplier="_yPF1IGRREe6bAesDIgR3sg" contract="_yPF1IGRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVNrQGRREe6bAesDIgR3sg" name="compare" specification="_yR4qcGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVNrQWRREe6bAesDIgR3sg" name="obj1" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVNrQmRREe6bAesDIgR3sg" name="obj2" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVNrQ2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yR4qcGRREe6bAesDIgR3sg" name="compare" method="_yVNrQGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yR4qcWRREe6bAesDIgR3sg" name="obj1" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yR4qcmRREe6bAesDIgR3sg" name="obj2" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yR4qc2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_aaYGRREe6bAesDIgR3sg" name="Node">
              <generalization xmi:id="_yPjIImRREe6bAesDIgR3sg" general="_yBQNcGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTksgWRREe6bAesDIgR3sg" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTksgmRREe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTksg2RREe6bAesDIgR3sg" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTlTkGRREe6bAesDIgR3sg" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTlTkWRREe6bAesDIgR3sg" name="edges" type="_yO3LoGRREe6bAesDIgR3sg" isReadOnly="true" association="_yXEscGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTlTk2RREe6bAesDIgR3sg" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yTlTlGRREe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yR5RgmRREe6bAesDIgR3sg" client="_x_aaYGRREe6bAesDIgR3sg" supplier="_yRqA8WRREe6bAesDIgR3sg" contract="_yRqA8WRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVNrRGRREe6bAesDIgR3sg" name="Node" specification="_x_bBcGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVNrRWRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVNrRmRREe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVNrR2RREe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVNrSGRREe6bAesDIgR3sg" type="_x_aaYGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVOSUGRREe6bAesDIgR3sg" name="compareTo" specification="_yPh6AGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVOSUWRREe6bAesDIgR3sg" name="node" type="_x_aaYGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVOSUmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVOSU2RREe6bAesDIgR3sg" name="toString" specification="_x_bohGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVOSVGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVO5YGRREe6bAesDIgR3sg" name="addEdge" specification="_yPjIIGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVO5YWRREe6bAesDIgR3sg" name="edge" type="_x-zWYmRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVQHgGRREe6bAesDIgR3sg" name="addConflict" specification="_x_cPk2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVQHgWRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVQHgmRREe6bAesDIgR3sg" name="numEdges" specification="_x_c2oGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVQHg2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVQHhGRREe6bAesDIgR3sg" name="print" specification="_x_c2omRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVQHhWRREe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVQHhmRREe6bAesDIgR3sg" name="print" specification="_x_ddtGRREe6bAesDIgR3sg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_bBcGRREe6bAesDIgR3sg" name="Node" visibility="package" method="_yVNrRGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x_bogWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x_bogmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x_bBcWRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_bBcmRREe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_bogGRREe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_bog2RREe6bAesDIgR3sg" type="_x_aaYGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x_bohGRREe6bAesDIgR3sg" name="toString" method="_yVOSU2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_bohWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_cPk2RREe6bAesDIgR3sg" name="addConflict" method="_yVQHgGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_cPlGRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_c2oGRREe6bAesDIgR3sg" name="numEdges" method="_yVQHgmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_c2oWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_c2omRREe6bAesDIgR3sg" name="print" method="_yVQHhGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_ddsGRREe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_ddtGRREe6bAesDIgR3sg" name="print" method="_yVQHhmRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yPh6AGRREe6bAesDIgR3sg" name="compareTo" method="_yVOSUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPh6AWRREe6bAesDIgR3sg" name="node" type="_x_aaYGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPihEGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPjIIGRREe6bAesDIgR3sg" name="addEdge" method="_yVO5YGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPjIIWRREe6bAesDIgR3sg" name="edge" type="_x-zWYmRREe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_fS4GRREe6bAesDIgR3sg" name="NodeMap">
              <ownedComment xmi:id="_yWIRQmRREe6bAesDIgR3sg">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yPjvMGRREe6bAesDIgR3sg" general="_x-MSYGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTl6oGRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTmhsGRREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_hIEGRREe6bAesDIgR3sg" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_yWIRQ2RREe6bAesDIgR3sg">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yPk9VWRREe6bAesDIgR3sg" general="_yAW1kGRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVQukGRREe6bAesDIgR3sg" name="NonPreemptiveSchedule" specification="_yPkWQWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVQukWRREe6bAesDIgR3sg" name="poset" type="_yCh_0GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVQukmRREe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVQuk2RREe6bAesDIgR3sg" type="_x_hIEGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yPkWQWRREe6bAesDIgR3sg" name="NonPreemptiveSchedule" visibility="package" method="_yVQukGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPk9UmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPk9U2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPk9UGRREe6bAesDIgR3sg" name="poset" type="_yCh_0GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPk9UWRREe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPk9VGRREe6bAesDIgR3sg" type="_x_hIEGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_hvIGRREe6bAesDIgR3sg" name="NotImplentedVisualization">
              <generalization xmi:id="_yPk9V2RREe6bAesDIgR3sg" general="_yAq-oGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTmhsWRREe6bAesDIgR3sg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTmhsmRREe6bAesDIgR3sg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTmhs2RREe6bAesDIgR3sg" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTmhtGRREe6bAesDIgR3sg" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTnIwGRREe6bAesDIgR3sg" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTnIwWRREe6bAesDIgR3sg" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVRVoGRREe6bAesDIgR3sg" name="NotImplentedVisualization" specification="_x_iWMGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVRVoWRREe6bAesDIgR3sg" type="_x_hvIGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVRVomRREe6bAesDIgR3sg" name="NotImplentedVisualization" specification="_x_iWNGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVRVo2RREe6bAesDIgR3sg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVRVpGRREe6bAesDIgR3sg" type="_x_hvIGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVRVpWRREe6bAesDIgR3sg" name="visualization" specification="_x_i9RGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVRVpmRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_iWMGRREe6bAesDIgR3sg" name="NotImplentedVisualization" visibility="package" method="_yVRVoGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x_iWMWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x_iWMmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x_iWM2RREe6bAesDIgR3sg" type="_x_hvIGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x_iWNGRREe6bAesDIgR3sg" name="NotImplentedVisualization" visibility="package" method="_yVRVomRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x_i9QWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x_i9QmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x_i9QGRREe6bAesDIgR3sg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_i9Q2RREe6bAesDIgR3sg" type="_x_hvIGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x_i9RGRREe6bAesDIgR3sg" name="visualization" method="_yVRVpWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPk9VmRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_kLYGRREe6bAesDIgR3sg" name="PeriodComparator">
              <interfaceRealization xmi:id="_yR7GsGRREe6bAesDIgR3sg" client="_x_kLYGRREe6bAesDIgR3sg" supplier="_yPF1IGRREe6bAesDIgR3sg" contract="_yPF1IGRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVRVp2RREe6bAesDIgR3sg" name="compare" specification="_yR7twWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVRVqGRREe6bAesDIgR3sg" name="obj1" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVRVqWRREe6bAesDIgR3sg" name="obj2" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVRVqmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yR7twWRREe6bAesDIgR3sg" name="compare" method="_yVRVp2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yR7twmRREe6bAesDIgR3sg" name="obj1" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yR7tw2RREe6bAesDIgR3sg" name="obj2" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yR8U0GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_mAkGRREe6bAesDIgR3sg" name="PreemptiveSchedule">
              <ownedComment xmi:id="_yWIRRGRREe6bAesDIgR3sg">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yPrD9GRREe6bAesDIgR3sg" general="_yAW1kGRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVR8sGRREe6bAesDIgR3sg" name="PreemptiveSchedule" specification="_yPnZkGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVR8sWRREe6bAesDIgR3sg" name="poset" type="_yCh_0GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVR8smRREe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVR8s2RREe6bAesDIgR3sg" type="_x_mAkGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVR8tGRREe6bAesDIgR3sg" name="continueSearch" specification="_yPoAoGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVR8tWRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVR8tmRREe6bAesDIgR3sg" name="activation" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVR8t2RREe6bAesDIgR3sg" type="_yR874GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVR8uGRREe6bAesDIgR3sg" name="toProgram" specification="_x_mnoGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVR8uWRREe6bAesDIgR3sg" type="_x_suQGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVTK0GRREe6bAesDIgR3sg" name="findPreeptiveChannelAndTime" specification="_yPons2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVTK0WRREe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVTK0mRREe6bAesDIgR3sg" name="schedulableObject" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVTK02RREe6bAesDIgR3sg" type="_yR874GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVTK1GRREe6bAesDIgR3sg" name="findAdditionalTime" specification="_yPpOwGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVTK1WRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVTK1mRREe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVTK12RREe6bAesDIgR3sg" name="a1" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVTK2GRREe6bAesDIgR3sg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVTK2WRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVTK2mRREe6bAesDIgR3sg" name="findMaxTimeAvailable" specification="_yPp10WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVTK22RREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVTK3GRREe6bAesDIgR3sg" name="schedulableObject" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVTK3WRREe6bAesDIgR3sg" type="_yR874GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVTx4GRREe6bAesDIgR3sg" name="availableTime" specification="_yPqc4GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVTx4WRREe6bAesDIgR3sg" name="a1" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVTx4mRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVTx42RREe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVTx5GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVUY8GRREe6bAesDIgR3sg" name="addToSchedule" specification="_yPqc5WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVUY8WRREe6bAesDIgR3sg" name="next" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVUY8mRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVUY82RREe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVUY9GRREe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVUY9WRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVUY9mRREe6bAesDIgR3sg" name="addToSchedule" specification="_yPqc62RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVUY92RREe6bAesDIgR3sg" name="next" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVUY-GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_mnoGRREe6bAesDIgR3sg" name="toProgram" method="_yVR8uGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPonsmRREe6bAesDIgR3sg" type="_x_suQGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPnZkGRREe6bAesDIgR3sg" name="PreemptiveSchedule" visibility="package" method="_yVR8sGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPnZk2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPnZlGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPnZkWRREe6bAesDIgR3sg" name="poset" type="_yCh_0GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPnZkmRREe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPnZlWRREe6bAesDIgR3sg" type="_x_mAkGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPoAoGRREe6bAesDIgR3sg" name="continueSearch" visibility="protected" method="_yVR8tGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPoAoWRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPoAomRREe6bAesDIgR3sg" name="activation" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yR874mRREe6bAesDIgR3sg" type="_yR874GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPons2RREe6bAesDIgR3sg" name="findPreeptiveChannelAndTime" visibility="private" method="_yVTK0GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPontGRREe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPontWRREe6bAesDIgR3sg" name="schedulableObject" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yR9i8GRREe6bAesDIgR3sg" type="_yR874GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPpOwGRREe6bAesDIgR3sg" name="findAdditionalTime" visibility="private" method="_yVTK1GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPpOwWRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPpOwmRREe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPpOw2RREe6bAesDIgR3sg" name="a1" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPpOxGRREe6bAesDIgR3sg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yR9i8WRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPp10WRREe6bAesDIgR3sg" name="findMaxTimeAvailable" visibility="private" method="_yVTK2mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPp10mRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPp102RREe6bAesDIgR3sg" name="schedulableObject" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yR9i8mRREe6bAesDIgR3sg" type="_yR874GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPqc4GRREe6bAesDIgR3sg" name="availableTime" visibility="private" method="_yVTx4GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPqc4WRREe6bAesDIgR3sg" name="a1" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPqc4mRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPqc42RREe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPqc5GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPqc5WRREe6bAesDIgR3sg" name="addToSchedule" visibility="private" method="_yVUY8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPqc5mRREe6bAesDIgR3sg" name="next" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPqc52RREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPqc6GRREe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPqc6WRREe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPqc6mRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPqc62RREe6bAesDIgR3sg" name="addToSchedule" visibility="protected" method="_yVUY9mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPqc7GRREe6bAesDIgR3sg" name="next" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPrD8GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_qSAGRREe6bAesDIgR3sg" name="PriorityComparator">
              <interfaceRealization xmi:id="_yR9i82RREe6bAesDIgR3sg" client="_x_qSAGRREe6bAesDIgR3sg" supplier="_yPF1IGRREe6bAesDIgR3sg" contract="_yPF1IGRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVVAAGRREe6bAesDIgR3sg" name="compare" specification="_yR-xEGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVVAAWRREe6bAesDIgR3sg" name="obj1" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVVAAmRREe6bAesDIgR3sg" name="obj2" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVVAA2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yR-xEGRREe6bAesDIgR3sg" name="compare" method="_yVVAAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yR-xEWRREe6bAesDIgR3sg" name="obj1" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yR-xEmRREe6bAesDIgR3sg" name="obj2" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yR-xE2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_rgIGRREe6bAesDIgR3sg" name="WarpPoset">
              <ownedComment xmi:id="_yWIRRWRREe6bAesDIgR3sg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_yPsSFWRREe6bAesDIgR3sg" general="_yCh_0GRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVVABGRREe6bAesDIgR3sg" name="WarpPoset" specification="_yPsSEGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVVABWRREe6bAesDIgR3sg" name="workload" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVVABmRREe6bAesDIgR3sg" type="_x_rgIGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVVAB2RREe6bAesDIgR3sg" name="findCoordinator" specification="_yR__MGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVVACGRREe6bAesDIgR3sg" name="nodesInFlow" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVVACWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yPsSEGRREe6bAesDIgR3sg" name="WarpPoset" visibility="package" method="_yVVABGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPsSEmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPsSE2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPsSEWRREe6bAesDIgR3sg" name="workload" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPsSFGRREe6bAesDIgR3sg" type="_x_rgIGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR__MGRREe6bAesDIgR3sg" name="findCoordinator" visibility="protected" method="_yVVAB2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySAmQGRREe6bAesDIgR3sg" name="nodesInFlow" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySAmQWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_suQGRREe6bAesDIgR3sg" name="ProgramSchedule">
              <generalization xmi:id="_yPs5IGRREe6bAesDIgR3sg" general="_yAR9EGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTnIwmRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTnIw2RREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVVACmRREe6bAesDIgR3sg" name="ProgramSchedule" specification="_x_suQWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVVAC2RREe6bAesDIgR3sg" type="_x_suQGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVVADGRREe6bAesDIgR3sg" name="ProgramSchedule" specification="_x_tVUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVVADWRREe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVVADmRREe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVVAD2RREe6bAesDIgR3sg" type="_x_suQGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_suQWRREe6bAesDIgR3sg" name="ProgramSchedule" method="_yVVACmRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x_suQmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x_suQ2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x_suRGRREe6bAesDIgR3sg" type="_x_suQGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x_tVUGRREe6bAesDIgR3sg" name="ProgramSchedule" visibility="package" method="_yVVADGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x_tVU2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x_tVVGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x_tVUWRREe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_tVUmRREe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_tVVWRREe6bAesDIgR3sg" type="_x_suQGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_t8YGRREe6bAesDIgR3sg" name="ProgramVisualization">
              <ownedComment xmi:id="_yWIRRmRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yPuHQWRREe6bAesDIgR3sg" general="_yAq-oGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTnv0GRREe6bAesDIgR3sg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTnv0WRREe6bAesDIgR3sg" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTnv0mRREe6bAesDIgR3sg" name="sourceCode" visibility="private" type="_x_suQGRREe6bAesDIgR3sg" association="_yXFTgGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yToW4WRREe6bAesDIgR3sg" name="program" visibility="private" type="_yBmywGRREe6bAesDIgR3sg" association="_yXGhoWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yToW42RREe6bAesDIgR3sg" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVVnEGRREe6bAesDIgR3sg" name="ProgramVisualization" specification="_yPtgMGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVVnEWRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVVnEmRREe6bAesDIgR3sg" type="_x_t8YGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVVnE2RREe6bAesDIgR3sg" name="displayVisualization" specification="_x_ujcGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVVnFGRREe6bAesDIgR3sg" type="_x_HfcGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVW1MGRREe6bAesDIgR3sg" name="createHeader" specification="_x_vKgmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVW1MWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVW1MmRREe6bAesDIgR3sg" name="createFooter" specification="_x_vxk2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVW1M2RREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVXcQGRREe6bAesDIgR3sg" name="createColumnHeader" specification="_x_wYo2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVXcQWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yVXcQmRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVYDUGRREe6bAesDIgR3sg" name="createVisualizationData" specification="_x_xmwmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVYDUWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yVYDUmRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVYDU2RREe6bAesDIgR3sg" name="createTitle" specification="_x_yN02RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVYDVGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_ujcGRREe6bAesDIgR3sg" name="displayVisualization" method="_yVVnE2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPtgNWRREe6bAesDIgR3sg" type="_x_HfcGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x_vKgmRREe6bAesDIgR3sg" name="createHeader" visibility="protected" method="_yVW1MGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPtgNmRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x_vxk2RREe6bAesDIgR3sg" name="createFooter" visibility="protected" method="_yVW1MmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPuHQGRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x_wYo2RREe6bAesDIgR3sg" name="createColumnHeader" visibility="protected" method="_yVXcQGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_w_sGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_x_w_sWRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_xmwmRREe6bAesDIgR3sg" name="createVisualizationData" visibility="protected" method="_yVYDUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_xmw2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_x_xmxGRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_x_yN02RREe6bAesDIgR3sg" name="createTitle" visibility="private" method="_yVYDU2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_yN1GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPtgMGRREe6bAesDIgR3sg" name="ProgramVisualization" visibility="package" method="_yVVnEGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPtgMmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPtgM2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPtgMWRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPtgNGRREe6bAesDIgR3sg" type="_x_t8YGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_0DAGRREe6bAesDIgR3sg" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_ySCbcGRREe6bAesDIgR3sg" client="_x_0DAGRREe6bAesDIgR3sg" supplier="_yPF1IGRREe6bAesDIgR3sg" contract="_yPF1IGRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVYqYGRREe6bAesDIgR3sg" name="compare" specification="_ySDCgWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVYqYWRREe6bAesDIgR3sg" name="obj1" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVYqYmRREe6bAesDIgR3sg" name="obj2" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVYqY2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySDCgWRREe6bAesDIgR3sg" name="compare" method="_yVYqYGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySDCgmRREe6bAesDIgR3sg" name="obj1" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySDCg2RREe6bAesDIgR3sg" name="obj2" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySDpkGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_1RIGRREe6bAesDIgR3sg" name="ReleaseTimeQueue">
              <generalization xmi:id="_x_3GUWRREe6bAesDIgR3sg" general="_x_2fRGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTo98WRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTplAGRREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVZRcGRREe6bAesDIgR3sg" name="ReleaseTimeQueue" specification="_x_2fQGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVZRcWRREe6bAesDIgR3sg" type="_x_1RIGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVZRcmRREe6bAesDIgR3sg" name="ReleaseTimeQueue" specification="_yPvVYWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVZRc2RREe6bAesDIgR3sg" name="schedulableObjects" type="_yPuuUGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVZRdGRREe6bAesDIgR3sg" type="_x_1RIGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_2fQGRREe6bAesDIgR3sg" name="ReleaseTimeQueue" visibility="package" method="_yVZRcGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x_2fQWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x_2fQmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x_2fQ2RREe6bAesDIgR3sg" type="_x_1RIGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPvVYWRREe6bAesDIgR3sg" name="ReleaseTimeQueue" visibility="package" method="_yVZRcmRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPvVY2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPvVZGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPvVYmRREe6bAesDIgR3sg" name="schedulableObjects" type="_yPuuUGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPvVZWRREe6bAesDIgR3sg" type="_x_1RIGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_4UcGRREe6bAesDIgR3sg" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_yWIRR2RREe6bAesDIgR3sg">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVZRdWRREe6bAesDIgR3sg" name="ReliabilityAnalysis" specification="_yPv8cWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVZRdmRREe6bAesDIgR3sg" name="program" type="_yBmywGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVZRd2RREe6bAesDIgR3sg" type="_x_4UcGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVZ4gGRREe6bAesDIgR3sg" name="verifyReliabilities" specification="_x_4UcWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVZ4gWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_4UcWRREe6bAesDIgR3sg" name="verifyReliabilities" method="_yVZ4gGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_x_47gGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPv8cWRREe6bAesDIgR3sg" name="ReliabilityAnalysis" method="_yVZRdWRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPv8c2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPv8dGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPv8cmRREe6bAesDIgR3sg" name="program" type="_yBmywGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPv8dWRREe6bAesDIgR3sg" type="_x_4UcGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_x_47gWRREe6bAesDIgR3sg" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_yWI4UGRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_x_5ikGRREe6bAesDIgR3sg" name="minPacketReceptionRate" type="_ySEQoGRREe6bAesDIgR3sg" isReadOnly="true"/>
              <ownedAttribute xmi:id="_x_6JoGRREe6bAesDIgR3sg" name="e2e" type="_ySEQoGRREe6bAesDIgR3sg" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_6wsGRREe6bAesDIgR3sg" name="ReliabilityRow">
              <generalization xmi:id="_yPwjgGRREe6bAesDIgR3sg" general="_yABeYGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTplAWRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTplAmRREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVZ4gmRREe6bAesDIgR3sg" name="ReliabilityRow" specification="_x_7XwGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVZ4g2RREe6bAesDIgR3sg" type="_x_6wsGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVafkGRREe6bAesDIgR3sg" name="ReliabilityRow" specification="_ySFewGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVafkWRREe6bAesDIgR3sg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVafkmRREe6bAesDIgR3sg" name="element" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVafk2RREe6bAesDIgR3sg" type="_x_6wsGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVaflGRREe6bAesDIgR3sg" name="ReliabilityRow" specification="_ySGF0GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVaflWRREe6bAesDIgR3sg" name="rowArray" type="_ySEQoGRREe6bAesDIgR3sg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yVaflmRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVafl2RREe6bAesDIgR3sg" type="_x_6wsGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_7XwGRREe6bAesDIgR3sg" name="ReliabilityRow" method="_yVZ4gmRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x_7XwWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x_7XwmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x_7Xw2RREe6bAesDIgR3sg" type="_x_6wsGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySFewGRREe6bAesDIgR3sg" name="ReliabilityRow" visibility="package" method="_yVafkGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_ySFew2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySFexGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySFewWRREe6bAesDIgR3sg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySFewmRREe6bAesDIgR3sg" name="element" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySFexWRREe6bAesDIgR3sg" type="_x_6wsGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySGF0GRREe6bAesDIgR3sg" name="ReliabilityRow" visibility="package" method="_yVaflGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_ySGF0mRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySGF02RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySGF0WRREe6bAesDIgR3sg" name="rowArray" type="_ySEQoGRREe6bAesDIgR3sg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ySGF1WRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySGF1GRREe6bAesDIgR3sg" type="_x_6wsGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_8l4GRREe6bAesDIgR3sg" name="ReliabilityTable">
              <generalization xmi:id="_yPxKkGRREe6bAesDIgR3sg" general="_yAR9EGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTqMEGRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTqMEWRREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVbGoGRREe6bAesDIgR3sg" name="ReliabilityTable" specification="_x_9M8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVbGoWRREe6bAesDIgR3sg" type="_x_8l4GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVbGomRREe6bAesDIgR3sg" name="ReliabilityTable" specification="_x_90AGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVbGo2RREe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVbGpGRREe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVbGpWRREe6bAesDIgR3sg" type="_x_8l4GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x_9M8GRREe6bAesDIgR3sg" name="ReliabilityTable" method="_yVbGoGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x_9M8WRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x_9M8mRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x_9M82RREe6bAesDIgR3sg" type="_x_8l4GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_x_90AGRREe6bAesDIgR3sg" name="ReliabilityTable" visibility="package" method="_yVbGomRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_x_90A2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_x_90BGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_x_90AWRREe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_90AmRREe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_x_90BWRREe6bAesDIgR3sg" type="_x_8l4GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x_-bEGRREe6bAesDIgR3sg" name="ReliabilityVisualization">
              <ownedComment xmi:id="_yWI4UWRREe6bAesDIgR3sg">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yPxxpmRREe6bAesDIgR3sg" general="_yAq-oGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTqzIGRREe6bAesDIgR3sg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTqzIWRREe6bAesDIgR3sg" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTqzImRREe6bAesDIgR3sg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTqzI2RREe6bAesDIgR3sg" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTqzJGRREe6bAesDIgR3sg" name="warp" visibility="private" type="_yAD6oGRREe6bAesDIgR3sg" association="_yXHvwWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTraMWRREe6bAesDIgR3sg" name="ra" visibility="private" type="_x_4UcGRREe6bAesDIgR3sg" association="_yXIW0WRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVbtsGRREe6bAesDIgR3sg" name="ReliabilityVisualization" specification="_yPxxoWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVbtsWRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVbtsmRREe6bAesDIgR3sg" type="_x_-bEGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yPxxoWRREe6bAesDIgR3sg" name="ReliabilityVisualization" visibility="package" method="_yVbtsGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPxxo2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPxxpGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPxxomRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPxxpWRREe6bAesDIgR3sg" type="_x_-bEGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_x__CIGRREe6bAesDIgR3sg" name="ReportVisualization">
              <generalization xmi:id="_yPy_x2RREe6bAesDIgR3sg" general="_yAq-oGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTsBQGRREe6bAesDIgR3sg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTsBQWRREe6bAesDIgR3sg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTsBQmRREe6bAesDIgR3sg" name="content" visibility="private" type="_x-xhMGRREe6bAesDIgR3sg" association="_yXI94WRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTsoUWRREe6bAesDIgR3sg" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVbts2RREe6bAesDIgR3sg" name="ReportVisualization" specification="_yPyYsGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVbttGRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVbttWRREe6bAesDIgR3sg" name="warp" type="_yAOSsWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVbttmRREe6bAesDIgR3sg" name="content" type="_x-xhMGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVbtt2RREe6bAesDIgR3sg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVbtuGRREe6bAesDIgR3sg" type="_x__CIGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVbtuWRREe6bAesDIgR3sg" name="visualization" specification="_x__pMGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVbtumRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVcUwGRREe6bAesDIgR3sg" name="createReport" specification="_yAAQQ2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVcUwWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_x__pMGRREe6bAesDIgR3sg" name="visualization" method="_yVbtuWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPy_xWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAAQQ2RREe6bAesDIgR3sg" name="createReport" visibility="private" method="_yVcUwGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yPy_xmRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPyYsGRREe6bAesDIgR3sg" name="ReportVisualization" visibility="package" method="_yVbts2RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yPy_wmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPy_w2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPyYsWRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPyYsmRREe6bAesDIgR3sg" name="warp" type="_yAOSsWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPy_wGRREe6bAesDIgR3sg" name="content" type="_x-xhMGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yPy_wWRREe6bAesDIgR3sg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPy_xGRREe6bAesDIgR3sg" type="_x__CIGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yABeYGRREe6bAesDIgR3sg" name="Row">
              <generalization xmi:id="_ySJJJmRREe6bAesDIgR3sg" general="_yO3LoGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTtPYGRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTtPYWRREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVcUwmRREe6bAesDIgR3sg" name="Row" specification="_yACFcWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVcUw2RREe6bAesDIgR3sg" type="_yABeYGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVcUxGRREe6bAesDIgR3sg" name="Row" specification="_ySH7AGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVcUxWRREe6bAesDIgR3sg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVcUxmRREe6bAesDIgR3sg" name="element" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVcUx2RREe6bAesDIgR3sg" type="_yABeYGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVcUyGRREe6bAesDIgR3sg" name="Row" specification="_ySJJIGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVcUyWRREe6bAesDIgR3sg" name="rowArray" type="_yRtEQWRREe6bAesDIgR3sg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yVcUymRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVcUy2RREe6bAesDIgR3sg" type="_yABeYGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVc70GRREe6bAesDIgR3sg" name="Row" specification="_yACsgGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVc70WRREe6bAesDIgR3sg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVc70mRREe6bAesDIgR3sg" type="_yABeYGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yACFcWRREe6bAesDIgR3sg" name="Row" method="_yVcUwmRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yACFcmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yACFc2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yACFdGRREe6bAesDIgR3sg" type="_yABeYGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yACsgGRREe6bAesDIgR3sg" name="Row" visibility="package" method="_yVc70GRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yACsgmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yACsg2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yACsgWRREe6bAesDIgR3sg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yACshGRREe6bAesDIgR3sg" type="_yABeYGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySH7AGRREe6bAesDIgR3sg" name="Row" visibility="package" method="_yVcUxGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_ySIiEGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySIiEWRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySH7AWRREe6bAesDIgR3sg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySH7AmRREe6bAesDIgR3sg" name="element" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySIiEmRREe6bAesDIgR3sg" type="_yABeYGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySJJIGRREe6bAesDIgR3sg" name="Row" visibility="package" method="_yVcUyGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_ySJJImRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySJJI2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySJJIWRREe6bAesDIgR3sg" name="rowArray" type="_yRtEQWRREe6bAesDIgR3sg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ySJJJWRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySJJJGRREe6bAesDIgR3sg" type="_yABeYGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yAD6oGRREe6bAesDIgR3sg" name="WarpInterface">
              <ownedComment xmi:id="_yWI4UmRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_yP0N4GRREe6bAesDIgR3sg" general="_yAOSsWRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yAD6oWRREe6bAesDIgR3sg" name="toWorkload">
                <ownedParameter xmi:id="_yP0N4WRREe6bAesDIgR3sg" type="_yCI-QGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAD6omRREe6bAesDIgR3sg" name="toProgram">
                <ownedParameter xmi:id="_yP008GRREe6bAesDIgR3sg" type="_yBmywGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAEhsGRREe6bAesDIgR3sg" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_yP008WRREe6bAesDIgR3sg" type="_x_4UcGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAEhsWRREe6bAesDIgR3sg" name="toSimulator">
                <ownedParameter xmi:id="_yP008mRREe6bAesDIgR3sg" type="_yAMdgGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAEhsmRREe6bAesDIgR3sg" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_yP0082RREe6bAesDIgR3sg" type="_x_QCUGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAFIwGRREe6bAesDIgR3sg" name="toChannelAnalysis">
                <ownedParameter xmi:id="_yP009GRREe6bAesDIgR3sg" type="_x-Rx8GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAFIwWRREe6bAesDIgR3sg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_yAFIwmRREe6bAesDIgR3sg" name="reliabilitiesMet">
                <ownedParameter xmi:id="_yAFIw2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yAFIxGRREe6bAesDIgR3sg" name="deadlinesMet">
                <ownedParameter xmi:id="_yAFv0GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yAGW4GRREe6bAesDIgR3sg" name="SchedulableObjectQueue">
              <generalization xmi:id="_yAHlAGRREe6bAesDIgR3sg" general="_x_2fRGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTt2cGRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTt2cWRREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVc702RREe6bAesDIgR3sg" name="SchedulableObjectQueue" specification="_ySKXQGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVc71GRREe6bAesDIgR3sg" name="comparitor" type="_yPF1IGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVc71WRREe6bAesDIgR3sg" type="_yAGW4GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVdi4GRREe6bAesDIgR3sg" name="SchedulableObjectQueue" specification="_ySK-UWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVdi4WRREe6bAesDIgR3sg" name="comparitor" type="_yPF1IGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVdi4mRREe6bAesDIgR3sg" name="schedulableObjects" type="_yPuuUGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVdi42RREe6bAesDIgR3sg" type="_yAGW4GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySKXQGRREe6bAesDIgR3sg" name="SchedulableObjectQueue" visibility="package" method="_yVc702RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_ySKXQmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySKXQ2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySKXQWRREe6bAesDIgR3sg" name="comparitor" type="_yPF1IGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySKXRGRREe6bAesDIgR3sg" type="_yAGW4GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySK-UWRREe6bAesDIgR3sg" name="SchedulableObjectQueue" visibility="package" method="_yVdi4GRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_ySK-VGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySK-VWRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySK-UmRREe6bAesDIgR3sg" name="comparitor" type="_yPF1IGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySK-U2RREe6bAesDIgR3sg" name="schedulableObjects" type="_yPuuUGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySK-VmRREe6bAesDIgR3sg" type="_yAGW4GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yAIzIGRREe6bAesDIgR3sg" name="VisualizationFactory">
              <ownedComment xmi:id="_yWI4U2RREe6bAesDIgR3sg">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVdi5GRREe6bAesDIgR3sg" name="createProgramVisualization" specification="_yP2DEWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVdi5WRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVdi5mRREe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVdi52RREe6bAesDIgR3sg" name="choice" type="_yAVAYWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVdi6GRREe6bAesDIgR3sg" type="_yAVAYGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVeJ8GRREe6bAesDIgR3sg" name="createWorkLoadVisualization" specification="_yP2qIWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVeJ8WRREe6bAesDIgR3sg" name="workload" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVeJ8mRREe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVeJ82RREe6bAesDIgR3sg" name="choice" type="_yAWOgGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVeJ9GRREe6bAesDIgR3sg" type="_yAVAYGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yP2DEWRREe6bAesDIgR3sg" name="createProgramVisualization" isStatic="true" method="_yVdi5GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yP2DEmRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP2DE2RREe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP2DFGRREe6bAesDIgR3sg" name="choice" type="_yAVAYWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP2qIGRREe6bAesDIgR3sg" type="_yAVAYGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yP2qIWRREe6bAesDIgR3sg" name="createWorkLoadVisualization" isStatic="true" method="_yVeJ8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yP2qImRREe6bAesDIgR3sg" name="workload" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP2qI2RREe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP2qJGRREe6bAesDIgR3sg" name="choice" type="_yAWOgGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP2qJWRREe6bAesDIgR3sg" type="_yAVAYGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yAKBQGRREe6bAesDIgR3sg" name="ScheduleTable">
              <generalization xmi:id="_yP3RMGRREe6bAesDIgR3sg" general="_yAR9EGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTt2cmRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTt2c2RREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVeJ9WRREe6bAesDIgR3sg" name="ScheduleTable" specification="_yAKoUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVeJ9mRREe6bAesDIgR3sg" type="_yAKBQGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVeJ92RREe6bAesDIgR3sg" name="ScheduleTable" specification="_yAKoVGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVeJ-GRREe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVeJ-WRREe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVeJ-mRREe6bAesDIgR3sg" type="_yAKBQGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yAKoUGRREe6bAesDIgR3sg" name="ScheduleTable" visibility="package" method="_yVeJ9WRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yAKoUWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yAKoUmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yAKoU2RREe6bAesDIgR3sg" type="_yAKBQGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAKoVGRREe6bAesDIgR3sg" name="ScheduleTable" visibility="package" method="_yVeJ92RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yALPYWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yALPYmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yAKoVWRREe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yALPYGRREe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yALPY2RREe6bAesDIgR3sg" type="_yAKBQGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yALPZGRREe6bAesDIgR3sg" name="ScheduleTime">
              <ownedAttribute xmi:id="_yTudgGRREe6bAesDIgR3sg" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTudgWRREe6bAesDIgR3sg" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVexAGRREe6bAesDIgR3sg" name="ScheduleTime" specification="_yAL2cGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVexAWRREe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVexAmRREe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVexA2RREe6bAesDIgR3sg" type="_yALPZGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yAL2cGRREe6bAesDIgR3sg" name="ScheduleTime" visibility="package" method="_yVexAGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yAL2c2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yAL2dGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yAL2cWRREe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yAL2cmRREe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yAL2dWRREe6bAesDIgR3sg" type="_yALPZGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yAMdgGRREe6bAesDIgR3sg" name="SimulatorInput">
              <ownedComment xmi:id="_yWI4VGRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yAMdgWRREe6bAesDIgR3sg" name="SortedPeriodQueue">
              <generalization xmi:id="_yANro2RREe6bAesDIgR3sg" general="_x_2fRGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTudgmRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTvEkGRREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVexBGRREe6bAesDIgR3sg" name="SortedPeriodQueue" specification="_yANEkWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVexBWRREe6bAesDIgR3sg" type="_yAMdgWRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVfYEGRREe6bAesDIgR3sg" name="SortedPeriodQueue" specification="_yP34QGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVfYEWRREe6bAesDIgR3sg" name="schedulableObjects" type="_yPuuUGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVfYEmRREe6bAesDIgR3sg" type="_yAMdgWRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yANEkWRREe6bAesDIgR3sg" name="SortedPeriodQueue" visibility="package" method="_yVexBGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yANroGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yANroWRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yANromRREe6bAesDIgR3sg" type="_yAMdgWRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yP34QGRREe6bAesDIgR3sg" name="SortedPeriodQueue" visibility="package" method="_yVfYEGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yP34QmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yP34Q2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yP34QWRREe6bAesDIgR3sg" name="schedulableObjects" type="_yPuuUGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP34RGRREe6bAesDIgR3sg" type="_yAMdgWRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yAOSsWRREe6bAesDIgR3sg" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_yP4fUWRREe6bAesDIgR3sg" general="_x_47gWRREe6bAesDIgR3sg"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_yAO5wGRREe6bAesDIgR3sg" name="ScheduleChoices">
                <ownedLiteral xmi:id="_yAO5wmRREe6bAesDIgR3sg" name="PRIORITY"/>
                <ownedLiteral xmi:id="_yAO5w2RREe6bAesDIgR3sg" name="RM"/>
                <ownedLiteral xmi:id="_yAO5xGRREe6bAesDIgR3sg" name="DM"/>
                <ownedLiteral xmi:id="_yAO5xWRREe6bAesDIgR3sg" name="RTHART"/>
                <ownedLiteral xmi:id="_yAPg0GRREe6bAesDIgR3sg" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_yAPg0WRREe6bAesDIgR3sg" name="POSET_RM"/>
                <ownedLiteral xmi:id="_yAPg0mRREe6bAesDIgR3sg" name="POSET_DM"/>
                <ownedLiteral xmi:id="_yAPg02RREe6bAesDIgR3sg" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_yAPg1GRREe6bAesDIgR3sg" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_yAPg1WRREe6bAesDIgR3sg" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_yAPg1mRREe6bAesDIgR3sg" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_yAPg12RREe6bAesDIgR3sg" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_yAPg2GRREe6bAesDIgR3sg" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_yAPg2WRREe6bAesDIgR3sg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yAQH4GRREe6bAesDIgR3sg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yAQH4WRREe6bAesDIgR3sg" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yAQH4mRREe6bAesDIgR3sg" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yAQu8GRREe6bAesDIgR3sg" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yAQu8WRREe6bAesDIgR3sg" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yARWAGRREe6bAesDIgR3sg" name="SystemFactory">
              <ownedComment xmi:id="_yWI4VWRREe6bAesDIgR3sg">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVfYE2RREe6bAesDIgR3sg" name="create" specification="_yP5tcGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVfYFGRREe6bAesDIgR3sg" name="workload" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVfYFWRREe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVfYFmRREe6bAesDIgR3sg" name="choice" type="_yAO5wGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVfYF2RREe6bAesDIgR3sg" type="_yAD6oGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yP5tcGRREe6bAesDIgR3sg" name="create" isStatic="true" method="_yVfYE2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yP5tcWRREe6bAesDIgR3sg" name="workload" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP5tcmRREe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP5tc2RREe6bAesDIgR3sg" name="choice" type="_yAO5wGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP6UgGRREe6bAesDIgR3sg" type="_yAD6oGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yAR9EGRREe6bAesDIgR3sg" name="Table">
              <generalization xmi:id="_ySOBo2RREe6bAesDIgR3sg" general="_yO3LoGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTvEkWRREe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTvEkmRREe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVf_IGRREe6bAesDIgR3sg" name="Table" specification="_yATLMGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVf_IWRREe6bAesDIgR3sg" type="_yAR9EGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVf_ImRREe6bAesDIgR3sg" name="Table" specification="_yATLNGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVf_I2RREe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVf_JGRREe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVf_JWRREe6bAesDIgR3sg" type="_yAR9EGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVf_JmRREe6bAesDIgR3sg" name="getNumRows" specification="_yATyQWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVf_J2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVf_KGRREe6bAesDIgR3sg" name="getNumColumns" specification="_yATyQ2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVf_KWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVf_KmRREe6bAesDIgR3sg" name="set" specification="_ySNakGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVf_K2RREe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVf_LGRREe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVf_LWRREe6bAesDIgR3sg" name="element" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVf_LmRREe6bAesDIgR3sg" name="get" specification="_yAUZUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVf_L2RREe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVf_MGRREe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVf_MWRREe6bAesDIgR3sg" type="_yRtEQWRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yATLMGRREe6bAesDIgR3sg" name="Table" method="_yVf_IGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yATLMWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yATLMmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yATLM2RREe6bAesDIgR3sg" type="_yAR9EGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yATLNGRREe6bAesDIgR3sg" name="Table" method="_yVf_ImRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yATLN2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yATLOGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yATLNWRREe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yATLNmRREe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yATyQGRREe6bAesDIgR3sg" type="_yAR9EGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yATyQWRREe6bAesDIgR3sg" name="getNumRows" method="_yVf_JmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yATyQmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yATyQ2RREe6bAesDIgR3sg" name="getNumColumns" method="_yVf_KGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yATyRGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yAUZUGRREe6bAesDIgR3sg" name="get" method="_yVf_LmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yAUZUWRREe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yAUZUmRREe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySOBomRREe6bAesDIgR3sg" type="_yRtEQWRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySNakGRREe6bAesDIgR3sg" name="set" method="_yVf_KmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySNakWRREe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySOBoGRREe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySOBoWRREe6bAesDIgR3sg" name="element" type="_yRtEQWRREe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yAVAYGRREe6bAesDIgR3sg" name="Visualization">
              <ownedComment xmi:id="_yWI4VmRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_yAVAYWRREe6bAesDIgR3sg" name="SystemChoices">
                <ownedLiteral xmi:id="_yAVncWRREe6bAesDIgR3sg" name="SOURCE"/>
                <ownedLiteral xmi:id="_yAVncmRREe6bAesDIgR3sg" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_yAVnc2RREe6bAesDIgR3sg" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_yAVndGRREe6bAesDIgR3sg" name="LATENCY"/>
                <ownedLiteral xmi:id="_yAVndWRREe6bAesDIgR3sg" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_yAVndmRREe6bAesDIgR3sg" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_yAVnd2RREe6bAesDIgR3sg" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_yAWOgGRREe6bAesDIgR3sg" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_yAWOgmRREe6bAesDIgR3sg" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_yAWOg2RREe6bAesDIgR3sg" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_yAWOhGRREe6bAesDIgR3sg" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_yAWOhWRREe6bAesDIgR3sg" name="toDisplay"/>
              <ownedOperation xmi:id="_yAWOhmRREe6bAesDIgR3sg" name="toFile"/>
              <ownedOperation xmi:id="_yAWOh2RREe6bAesDIgR3sg" name="toString">
                <ownedParameter xmi:id="_yAWOiGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yAW1kGRREe6bAesDIgR3sg" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_yWI4V2RREe6bAesDIgR3sg">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yTvroGRREe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTvroWRREe6bAesDIgR3sg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTvromRREe6bAesDIgR3sg" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTwSsGRREe6bAesDIgR3sg" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTwSsmRREe6bAesDIgR3sg" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yTwSs2RREe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTwStWRREe6bAesDIgR3sg" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTw5wWRREe6bAesDIgR3sg" name="schedule" visibility="protected" type="_yAKBQGRREe6bAesDIgR3sg" association="_yXJk8GRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTw5w2RREe6bAesDIgR3sg" name="poset" visibility="protected" type="_yCh_0GRREe6bAesDIgR3sg" association="_yXJk82RREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVhNQGRREe6bAesDIgR3sg" name="Schedule" specification="_yP7ioGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVhNQWRREe6bAesDIgR3sg" name="poset" type="_yCh_0GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVhNQmRREe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVhNQ2RREe6bAesDIgR3sg" type="_yAW1kGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVhNTmRREe6bAesDIgR3sg" name="getSchedule" specification="_yAYqxGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVhNT2RREe6bAesDIgR3sg" type="_yAKBQGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVhNUGRREe6bAesDIgR3sg" name="buildSchedule" specification="_yAZR0GRREe6bAesDIgR3sg">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVhNUWRREe6bAesDIgR3sg" name="toProgram" specification="_yAZR0WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVhNUmRREe6bAesDIgR3sg" type="_x_suQGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0UGRREe6bAesDIgR3sg" name="replaceNullWithSleep" specification="_yP8JsmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0UWRREe6bAesDIgR3sg" name="program" type="_x_suQGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0UmRREe6bAesDIgR3sg" name="fakeSchedulingToTestRest" specification="_yP8JtGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0U2RREe6bAesDIgR3sg" name="next" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0VGRREe6bAesDIgR3sg" name="getChannelAndSetStartTime" specification="_yP8wwGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0VWRREe6bAesDIgR3sg" name="schedulableObject" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVh0VmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0V2RREe6bAesDIgR3sg" name="findChannelAndTime" specification="_yP8ww2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0WGRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0WWRREe6bAesDIgR3sg" name="schedulableObject" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVh0WmRREe6bAesDIgR3sg" type="_yAXcoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0W2RREe6bAesDIgR3sg" name="continueSearch" specification="_yP9X0WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0XGRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0XWRREe6bAesDIgR3sg" name="activation" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVh0XmRREe6bAesDIgR3sg" type="_yAXcoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0X2RREe6bAesDIgR3sg" name="noOtherChannelConflicts" specification="_yP9X1WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0YGRREe6bAesDIgR3sg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0YWRREe6bAesDIgR3sg" name="schedulableObject" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVh0YmRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0Y2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0ZGRREe6bAesDIgR3sg" name="conflictsExist" specification="_yP9-4GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0ZWRREe6bAesDIgR3sg" name="obj" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVh0ZmRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0Z2RREe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0aGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0aWRREe6bAesDIgR3sg" name="freeOfCoordinatorConflicts" specification="_yP-l8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0amRREe6bAesDIgR3sg" name="obj" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVh0a2RREe6bAesDIgR3sg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0bGRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0bWRREe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0bmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0b2RREe6bAesDIgR3sg" name="isAvailable" specification="_yP-l9mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0cGRREe6bAesDIgR3sg" name="a1" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVh0cWRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0cmRREe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0c2RREe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0dGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0dWRREe6bAesDIgR3sg" name="isAvailable" specification="_yP_NBWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0dmRREe6bAesDIgR3sg" name="a1" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVh0d2RREe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0eGRREe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0eWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0emRREe6bAesDIgR3sg" name="timeRemaining" specification="_yAZ44GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0e2RREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0fGRREe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0fWRREe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0fmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0f2RREe6bAesDIgR3sg" name="canCombineEntriesInPlace" specification="_yP_0EGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0gGRREe6bAesDIgR3sg" name="a1" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVh0gWRREe6bAesDIgR3sg" name="a2" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVh0gmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0g2RREe6bAesDIgR3sg" name="combinedEntriesInPlace" specification="_yP_0FGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0hGRREe6bAesDIgR3sg" name="a1" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVh0hWRREe6bAesDIgR3sg" name="a2" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVh0hmRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVh0h2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0iGRREe6bAesDIgR3sg" name="addToSchedule" specification="_yQAbIGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0iWRREe6bAesDIgR3sg" name="next" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVh0imRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0i2RREe6bAesDIgR3sg" name="reportNotSchedulable" specification="_yQAbI2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVh0jGRREe6bAesDIgR3sg" name="object" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0jWRREe6bAesDIgR3sg" name="printVerbose" specification="_yAbHAGRREe6bAesDIgR3sg">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVh0jmRREe6bAesDIgR3sg" name="print" specification="_yAbHAWRREe6bAesDIgR3sg">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yAYqxGRREe6bAesDIgR3sg" name="getSchedule" method="_yVhNTmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWJfYmRREe6bAesDIgR3sg">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_yP8JsGRREe6bAesDIgR3sg" type="_yAKBQGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAZR0GRREe6bAesDIgR3sg" name="buildSchedule" visibility="private" method="_yVhNUGRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yAZR0WRREe6bAesDIgR3sg" name="toProgram" method="_yVhNUWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yP8JsWRREe6bAesDIgR3sg" type="_x_suQGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAZ44GRREe6bAesDIgR3sg" name="timeRemaining" visibility="protected" method="_yVh0emRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWJfaGRREe6bAesDIgR3sg">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_yAaf8GRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yAaf8WRREe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yAaf8mRREe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yAaf82RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yAbHAGRREe6bAesDIgR3sg" name="printVerbose" method="_yVh0jWRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yAbHAWRREe6bAesDIgR3sg" name="print" method="_yVh0jmRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yP7ioGRREe6bAesDIgR3sg" name="Schedule" visibility="package" method="_yVhNQGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yP7io2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yP7ipGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yP7ioWRREe6bAesDIgR3sg" name="poset" type="_yCh_0GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP7iomRREe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP7ipWRREe6bAesDIgR3sg" type="_yAW1kGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yP8JsmRREe6bAesDIgR3sg" name="replaceNullWithSleep" visibility="private" method="_yVh0UGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWJfY2RREe6bAesDIgR3sg">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_yP8Js2RREe6bAesDIgR3sg" name="program" type="_x_suQGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yP8JtGRREe6bAesDIgR3sg" name="fakeSchedulingToTestRest" visibility="private" method="_yVh0UmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yP8JtWRREe6bAesDIgR3sg" name="next" type="_yDQYkGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yP8wwGRREe6bAesDIgR3sg" name="getChannelAndSetStartTime" visibility="protected" method="_yVh0VGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWJfZGRREe6bAesDIgR3sg">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_yP8wwWRREe6bAesDIgR3sg" name="schedulableObject" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP8wwmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yP8ww2RREe6bAesDIgR3sg" name="findChannelAndTime" visibility="protected" method="_yVh0V2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yP8wxGRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP8wxWRREe6bAesDIgR3sg" name="schedulableObject" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP9X0GRREe6bAesDIgR3sg" type="_yAXcoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yP9X0WRREe6bAesDIgR3sg" name="continueSearch" visibility="protected" method="_yVh0W2RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWJfZWRREe6bAesDIgR3sg">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_yP9X0mRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP9X02RREe6bAesDIgR3sg" name="activation" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP9X1GRREe6bAesDIgR3sg" type="_yAXcoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yP9X1WRREe6bAesDIgR3sg" name="noOtherChannelConflicts" visibility="protected" method="_yVh0X2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yP9X1mRREe6bAesDIgR3sg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP9X12RREe6bAesDIgR3sg" name="schedulableObject" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP9X2GRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP9X2WRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yP9-4GRREe6bAesDIgR3sg" name="conflictsExist" visibility="protected" method="_yVh0ZGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yP9-4WRREe6bAesDIgR3sg" name="obj" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP9-4mRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP9-42RREe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP9-5GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yP-l8GRREe6bAesDIgR3sg" name="freeOfCoordinatorConflicts" visibility="protected" method="_yVh0aWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yP-l8WRREe6bAesDIgR3sg" name="obj" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP-l8mRREe6bAesDIgR3sg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP-l82RREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP-l9GRREe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP-l9WRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yP-l9mRREe6bAesDIgR3sg" name="isAvailable" visibility="protected" method="_yVh0b2RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWJfZmRREe6bAesDIgR3sg">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_yP_NAGRREe6bAesDIgR3sg" name="a1" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP_NAWRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP_NAmRREe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP_NA2RREe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP_NBGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yP_NBWRREe6bAesDIgR3sg" name="isAvailable" visibility="protected" method="_yVh0dWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWJfZ2RREe6bAesDIgR3sg">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_yP_NBmRREe6bAesDIgR3sg" name="a1" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP_NB2RREe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP_NCGRREe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP_NCWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yP_0EGRREe6bAesDIgR3sg" name="canCombineEntriesInPlace" visibility="private" method="_yVh0f2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yP_0EWRREe6bAesDIgR3sg" name="a1" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP_0EmRREe6bAesDIgR3sg" name="a2" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP_0E2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yP_0FGRREe6bAesDIgR3sg" name="combinedEntriesInPlace" visibility="private" method="_yVh0g2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yP_0FWRREe6bAesDIgR3sg" name="a1" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP_0FmRREe6bAesDIgR3sg" name="a2" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yP_0F2RREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yP_0GGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQAbIGRREe6bAesDIgR3sg" name="addToSchedule" visibility="protected" method="_yVh0iGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQAbIWRREe6bAesDIgR3sg" name="next" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQAbImRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQAbI2RREe6bAesDIgR3sg" name="reportNotSchedulable" visibility="private" method="_yVh0i2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQAbJGRREe6bAesDIgR3sg" name="object" type="_yDQYkGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yAXcoGRREe6bAesDIgR3sg" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_yTxg0WRREe6bAesDIgR3sg" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yTyH4GRREe6bAesDIgR3sg" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVhNRGRREe6bAesDIgR3sg" name="ScheduleLocation" specification="_yAYDsGRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVhNRWRREe6bAesDIgR3sg" type="_yAXcoGRREe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVhNRmRREe6bAesDIgR3sg" name="ScheduleLocation" specification="_yAYDtGRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVhNR2RREe6bAesDIgR3sg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yVhNSGRREe6bAesDIgR3sg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yVhNSWRREe6bAesDIgR3sg" type="_yAXcoGRREe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVhNSmRREe6bAesDIgR3sg" name="getChannel" specification="_yAYqwGRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVhNS2RREe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVhNTGRREe6bAesDIgR3sg" name="getTime" specification="_yAYqwmRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVhNTWRREe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yAYDsGRREe6bAesDIgR3sg" name="ScheduleLocation" visibility="package" method="_yVhNRGRREe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_yAYDsWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yAYDsmRREe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yAYDs2RREe6bAesDIgR3sg" type="_yAXcoGRREe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yAYDtGRREe6bAesDIgR3sg" name="ScheduleLocation" visibility="package" method="_yVhNRmRREe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_yAYDt2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yAYDuGRREe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yAYDtWRREe6bAesDIgR3sg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yAYDtmRREe6bAesDIgR3sg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yAYDuWRREe6bAesDIgR3sg" type="_yAXcoGRREe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yAYqwGRREe6bAesDIgR3sg" name="getChannel" visibility="protected" method="_yVhNSmRREe6bAesDIgR3sg">
                  <ownedComment xmi:id="_yWJfYGRREe6bAesDIgR3sg">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yAYqwWRREe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yAYqwmRREe6bAesDIgR3sg" name="getTime" visibility="protected" method="_yVhNTGRREe6bAesDIgR3sg">
                  <ownedComment xmi:id="_yWJfYWRREe6bAesDIgR3sg">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yAYqw2RREe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yAgmkGRREe6bAesDIgR3sg" name="VisualizationImplementation">
              <ownedComment xmi:id="_yWJfaWRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@author Frank Forliano (for java doc comments)&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yTyu8GRREe6bAesDIgR3sg" name="visualization" visibility="private" type="_x-xhMGRREe6bAesDIgR3sg" association="_yXKzEGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTzWAWRREe6bAesDIgR3sg" name="fileContent" visibility="private" type="_x-xhMGRREe6bAesDIgR3sg" association="_yXLaIGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTzWA2RREe6bAesDIgR3sg" name="window" visibility="private" type="_x_HfcGRREe6bAesDIgR3sg" association="_yXMBMWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yTz9EGRREe6bAesDIgR3sg" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTz9EmRREe6bAesDIgR3sg" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yTz9FGRREe6bAesDIgR3sg" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT0kIGRREe6bAesDIgR3sg" name="fm" visibility="private" type="_x-6rIGRREe6bAesDIgR3sg" association="_yXMoQGRREe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT0kIWRREe6bAesDIgR3sg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT0kI2RREe6bAesDIgR3sg" name="warp" visibility="private" type="_yAD6oGRREe6bAesDIgR3sg" association="_yXMoQ2RREe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT0kJGRREe6bAesDIgR3sg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT1LMWRREe6bAesDIgR3sg" name="workLoad" visibility="private" type="_yCI-QGRREe6bAesDIgR3sg" association="_yXNPUWRREe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT1LMmRREe6bAesDIgR3sg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT1LNGRREe6bAesDIgR3sg" name="visualizationObject" visibility="private" type="_yAq-oGRREe6bAesDIgR3sg" association="_yXN2YWRREe6bAesDIgR3sg"/>
              <interfaceRealization xmi:id="_yQBpQGRREe6bAesDIgR3sg" client="_yAgmkGRREe6bAesDIgR3sg" supplier="_yAVAYGRREe6bAesDIgR3sg" contract="_yAVAYGRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVjCcGRREe6bAesDIgR3sg" name="VisualizationImplementation" specification="_ySP20mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVjCcWRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVjCcmRREe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVjCc2RREe6bAesDIgR3sg" name="choice" type="_ySP20GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVjCdGRREe6bAesDIgR3sg" type="_yAgmkGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVjCdWRREe6bAesDIgR3sg" name="VisualizationImplementation" specification="_ySQd4mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVjCdmRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVjCd2RREe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVjCeGRREe6bAesDIgR3sg" name="choice" type="_ySQd4GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVjCeWRREe6bAesDIgR3sg" type="_yAgmkGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVjCemRREe6bAesDIgR3sg" name="toDisplay" specification="_yAjC0GRREe6bAesDIgR3sg">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVjpgGRREe6bAesDIgR3sg" name="toFile" specification="_yAjp4mRREe6bAesDIgR3sg">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVjpgWRREe6bAesDIgR3sg" name="toString" specification="_yAkQ8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVjpgmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVjpg2RREe6bAesDIgR3sg" name="createVisualization" specification="_ySRE9WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVjphGRREe6bAesDIgR3sg" name="choice" type="_ySP20GRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVjphWRREe6bAesDIgR3sg" name="createVisualization" specification="_ySRsAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVjphmRREe6bAesDIgR3sg" name="choice" type="_ySQd4GRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVjph2RREe6bAesDIgR3sg" name="createVisualization" specification="_ySRsAmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVjpiGRREe6bAesDIgR3sg" name="obj" type="_yRtEQWRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVjpiWRREe6bAesDIgR3sg" name="createFileNameTemplate" specification="_yAlfEGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVjpimRREe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVjpi2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yAjC0GRREe6bAesDIgR3sg" name="toDisplay" method="_yVjCemRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yAjp4mRREe6bAesDIgR3sg" name="toFile" method="_yVjpgGRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yAkQ8GRREe6bAesDIgR3sg" name="toString" method="_yVjpgWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yAkQ8WRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yAlfEGRREe6bAesDIgR3sg" name="createFileNameTemplate" visibility="private" method="_yVjpiWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKGcGRREe6bAesDIgR3sg">
                  <body>&#xD;
   * Creates a file name template based on the outputDirectory and FileName. &#xD;
   * @param outputDirectory&#xD;
   * @return fileNameTemplate</body>
                </ownedComment>
                <ownedParameter xmi:id="_yAlfEWRREe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yAlfEmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySP20mRREe6bAesDIgR3sg" name="VisualizationImplementation" method="_yVjCcGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_ySP21mRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySP212RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWJfamRREe6bAesDIgR3sg">
                  <body>@param warp&#xD;
@param outputDirectory&#xD;
@param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySP202RREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySP21GRREe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySP21WRREe6bAesDIgR3sg" name="choice" type="_ySP20GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySP22GRREe6bAesDIgR3sg" type="_yAgmkGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySQd4mRREe6bAesDIgR3sg" name="VisualizationImplementation" method="_yVjCdWRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_ySRE8mRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySRE82RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWJfa2RREe6bAesDIgR3sg">
                  <body>@param WorkLoad&#xD;
@param outputDirectory&#xD;
@param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySQd42RREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySRE8GRREe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySRE8WRREe6bAesDIgR3sg" name="choice" type="_ySQd4GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySRE9GRREe6bAesDIgR3sg" type="_yAgmkGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySRE9WRREe6bAesDIgR3sg" name="createVisualization" visibility="private" method="_yVjpg2RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWJfbGRREe6bAesDIgR3sg">
                  <body>Create visualizations based on SystemChoices.&#xD;
   * The visualization is created by enumerating the SystemChoices.&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySRE9mRREe6bAesDIgR3sg" name="choice" type="_ySP20GRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySRsAGRREe6bAesDIgR3sg" name="createVisualization" visibility="private" method="_yVjphWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWJfbWRREe6bAesDIgR3sg">
                  <body>Create visualization based off WorkLoadChoices.&#xD;
  * &#xD;
  * @param The choice of the visualization for the workload.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySRsAWRREe6bAesDIgR3sg" name="choice" type="_ySQd4GRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySRsAmRREe6bAesDIgR3sg" name="createVisualization" visibility="private" method="_yVjph2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySRsA2RREe6bAesDIgR3sg" name="obj" type="_yRtEQWRREe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yAq-oGRREe6bAesDIgR3sg" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_yWKGcWRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@author srgoddard (for java doc comments)&#xD;
@version 1.5&#xD;
 *&#xD;
 *Visualizes the information of the node into a readable name with the needed information.&#xD;
 *Includes faults and schedule name.&#xD;
 *Contains:&#xD;
 *nameExtension()&#xD;
 *displayVisualization()&#xD;
 *fileVisualization()&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yT2ZUGRREe6bAesDIgR3sg" name="fm" visibility="private" type="_x-6rIGRREe6bAesDIgR3sg" association="_yXOdcGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yT2ZUmRREe6bAesDIgR3sg" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT3AYGRREe6bAesDIgR3sg" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT3AYmRREe6bAesDIgR3sg" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT3AY2RREe6bAesDIgR3sg" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT3AZGRREe6bAesDIgR3sg" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yT3ncGRREe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVjpjGRREe6bAesDIgR3sg" name="VisualizationObject" specification="_yQEFgGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVjpjWRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVjpjmRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVjpj2RREe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVjpkGRREe6bAesDIgR3sg" type="_yAq-oGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVkQkGRREe6bAesDIgR3sg" name="VisualizationObject" specification="_yQEskmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVkQkWRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVkQkmRREe6bAesDIgR3sg" name="warp" type="_yAOSsWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVkQk2RREe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVkQlGRREe6bAesDIgR3sg" type="_yAq-oGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVkQlWRREe6bAesDIgR3sg" name="VisualizationObject" specification="_yQFTpmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVkQlmRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVkQl2RREe6bAesDIgR3sg" name="warp" type="_yAOSsWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVkQmGRREe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVkQmWRREe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVkQmmRREe6bAesDIgR3sg" type="_yAq-oGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVkQm2RREe6bAesDIgR3sg" name="VisualizationObject" specification="_yQF6sWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVkQnGRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVkQnWRREe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVkQnmRREe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVkQn2RREe6bAesDIgR3sg" type="_yAq-oGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVkQoGRREe6bAesDIgR3sg" name="nameExtension" specification="_ySThMGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVkQoWRREe6bAesDIgR3sg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVkQomRREe6bAesDIgR3sg" name="m" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVkQo2RREe6bAesDIgR3sg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVkQpGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVkQpWRREe6bAesDIgR3sg" name="nameExtension" specification="_yAta4GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVkQpmRREe6bAesDIgR3sg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVkQp2RREe6bAesDIgR3sg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVkQqGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVkQqWRREe6bAesDIgR3sg" name="getFileManager" specification="_yAta5GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVkQqmRREe6bAesDIgR3sg" type="_x-6rIGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVkQq2RREe6bAesDIgR3sg" name="visualization" specification="_yAuB8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVk3oGRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVk3oWRREe6bAesDIgR3sg" name="createFile" specification="_yAupAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVk3omRREe6bAesDIgR3sg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVk3o2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVk3pGRREe6bAesDIgR3sg" name="fileVisualization" specification="_yAupA2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVk3pWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVk3pmRREe6bAesDIgR3sg" name="displayVisualization" specification="_yAupBGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVk3p2RREe6bAesDIgR3sg" type="_x_HfcGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVk3qGRREe6bAesDIgR3sg" name="createHeader" specification="_yAvQEGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVk3qWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVk3qmRREe6bAesDIgR3sg" name="createFooter" specification="_yAvQEWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVk3q2RREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVk3rGRREe6bAesDIgR3sg" name="createColumnHeader" specification="_yAv3IGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVk3rWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yVk3rmRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVk3r2RREe6bAesDIgR3sg" name="createVisualizationData" specification="_yAv3JGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVk3sGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yVk3sWRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yAta4GRREe6bAesDIgR3sg" name="nameExtension" visibility="private" method="_yVkQpWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKGd2RREe6bAesDIgR3sg">
                  <body>&#xD;
  * This method is used to attach the faults of each node to the name of the same node.&#xD;
  * @param extension formats the input data into a readable format</body>
                </ownedComment>
                <ownedParameter xmi:id="_yAta4WRREe6bAesDIgR3sg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yAta4mRREe6bAesDIgR3sg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yAta42RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yAta5GRREe6bAesDIgR3sg" name="getFileManager" method="_yVkQqWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKGeGRREe6bAesDIgR3sg">
                  <body>&#xD;
   * @return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQF6uGRREe6bAesDIgR3sg" type="_x-6rIGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAuB8GRREe6bAesDIgR3sg" name="visualization" method="_yVkQq2RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKGeWRREe6bAesDIgR3sg">
                  <body>&#xD;
  * This method is the initial step to visualize the data in a readible format.&#xD;
  * @param content is created to be used as a description to hold the new ColumnHeader() and data&#xD;
  * @param data is used to hold NULL through the createVisualizationData() method which returns NULL&#xD;
  * @return content</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQGhwGRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAupAGRREe6bAesDIgR3sg" name="createFile" method="_yVk3oWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKGemRREe6bAesDIgR3sg">
                  <body>&#xD;
  * Method creates the file name by adding the extension and suffix.&#xD;
  * @return fm.createFile() which calls itself to create the file as a fileNameTemplate</body>
                </ownedComment>
                <ownedParameter xmi:id="_yAupAWRREe6bAesDIgR3sg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yAupAmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yAupA2RREe6bAesDIgR3sg" name="fileVisualization" method="_yVk3pGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKtgGRREe6bAesDIgR3sg">
                  <body>*&#xD;
  * Method is the final step to combine the header/data and footer together and returns fileContent.&#xD;
  * @param fileContent is created to contain all the data for nodes into a readible format</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQGhwWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAupBGRREe6bAesDIgR3sg" name="displayVisualization" method="_yVk3pmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKtgWRREe6bAesDIgR3sg">
                  <body>&#xD;
  * @return null</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQGhwmRREe6bAesDIgR3sg" type="_x_HfcGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAvQEGRREe6bAesDIgR3sg" name="createHeader" visibility="protected" method="_yVk3qGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKtgmRREe6bAesDIgR3sg">
                  <body>&#xD;
  * @return new Description header</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQGhw2RREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAvQEWRREe6bAesDIgR3sg" name="createFooter" visibility="protected" method="_yVk3qmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKtg2RREe6bAesDIgR3sg">
                  <body>&#xD;
  * @return new Description footer</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQGhxGRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yAv3IGRREe6bAesDIgR3sg" name="createColumnHeader" visibility="protected" method="_yVk3rGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKthGRREe6bAesDIgR3sg">
                  <body>&#xD;
  * @return NOT_IMPLEMENTED</body>
                </ownedComment>
                <ownedParameter xmi:id="_yAv3IWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yAv3ImRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yAv3JGRREe6bAesDIgR3sg" name="createVisualizationData" visibility="protected" method="_yVk3r2RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKthWRREe6bAesDIgR3sg">
                  <body>&#xD;
  * @return visualizationData which is not implemented and returns null</body>
                </ownedComment>
                <ownedParameter xmi:id="_yAweMGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yAweMWRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQEFgGRREe6bAesDIgR3sg" name="VisualizationObject" visibility="package" method="_yVjpjGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yQEFhGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQEskGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWKGcmRREe6bAesDIgR3sg">
                  <body>&#xD;
  * Class Object that links together the filemanager with the workload and suffix.&#xD;
  * @param nameExtension is the string variable to be added onto the name of the node&#xD;
  * @param suffix is the&#xD;
  *</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQEFgWRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQEFgmRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQEFg2RREe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQEskWRREe6bAesDIgR3sg" type="_yAq-oGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQEskmRREe6bAesDIgR3sg" name="VisualizationObject" visibility="package" method="_yVkQkGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yQFTo2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQFTpGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWKGc2RREe6bAesDIgR3sg">
                  <body>&#xD;
  * Class object that links together the filemanager to the specific node warp attributes and suffix.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQFToGRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQFToWRREe6bAesDIgR3sg" name="warp" type="_yAOSsWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQFTomRREe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQFTpWRREe6bAesDIgR3sg" type="_yAq-oGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQFTpmRREe6bAesDIgR3sg" name="VisualizationObject" visibility="package" method="_yVkQlWRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yQFTq2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQFTrGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWKGdGRREe6bAesDIgR3sg">
                  <body>&#xD;
  * Class object to manage any faults that are attached to the nodes.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQFTp2RREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQFTqGRREe6bAesDIgR3sg" name="warp" type="_yAOSsWRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQFTqWRREe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQFTqmRREe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQF6sGRREe6bAesDIgR3sg" type="_yAq-oGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQF6sWRREe6bAesDIgR3sg" name="VisualizationObject" visibility="package" method="_yVkQm2RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yQF6tWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQF6tmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWKGdWRREe6bAesDIgR3sg">
                  <body>*&#xD;
  * Class object of managing the file for each node</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQF6smRREe6bAesDIgR3sg" name="fm" type="_x-6rIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQF6s2RREe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQF6tGRREe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQF6t2RREe6bAesDIgR3sg" type="_yAq-oGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySThMGRREe6bAesDIgR3sg" name="nameExtension" visibility="private" method="_yVkQoGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKGdmRREe6bAesDIgR3sg">
                  <body>&#xD;
  * This method is used to attach the data of the node to the schedule name of the nodes.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySThMWRREe6bAesDIgR3sg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySThMmRREe6bAesDIgR3sg" name="m" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySThM2RREe6bAesDIgR3sg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySThNGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yAyTYGRREe6bAesDIgR3sg" name="Warp">
              <ownedComment xmi:id="_yWKthmRREe6bAesDIgR3sg">
                <body>&#xD;
@author Frank Forliano (of java doc comments)&#xD;
@author Steve Goddard&#xD;
@version 1.5&#xD;
&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yT4OgGRREe6bAesDIgR3sg" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT4OgWRREe6bAesDIgR3sg" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT4OgmRREe6bAesDIgR3sg" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_ySEQoGRREe6bAesDIgR3sg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT4Og2RREe6bAesDIgR3sg" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT4OhGRREe6bAesDIgR3sg" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_ySEQoGRREe6bAesDIgR3sg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT41kGRREe6bAesDIgR3sg" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT41kWRREe6bAesDIgR3sg" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT41kmRREe6bAesDIgR3sg" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT41k2RREe6bAesDIgR3sg" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_yAO5wGRREe6bAesDIgR3sg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT41lGRREe6bAesDIgR3sg" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT41lWRREe6bAesDIgR3sg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT41lmRREe6bAesDIgR3sg" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT41l2RREe6bAesDIgR3sg" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT5coWRREe6bAesDIgR3sg" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT5co2RREe6bAesDIgR3sg" name="minLQ" visibility="private" isStatic="true" type="_ySEQoGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yT6DsWRREe6bAesDIgR3sg" name="e2e" visibility="private" isStatic="true" type="_ySEQoGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yT6Ds2RREe6bAesDIgR3sg" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT6qwWRREe6bAesDIgR3sg" name="guiRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT6qw2RREe6bAesDIgR3sg" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT7R0WRREe6bAesDIgR3sg" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT744GRREe6bAesDIgR3sg" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT744mRREe6bAesDIgR3sg" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT745GRREe6bAesDIgR3sg" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT8f8WRREe6bAesDIgR3sg" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT9HAWRREe6bAesDIgR3sg" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT9HA2RREe6bAesDIgR3sg" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT9uEWRREe6bAesDIgR3sg" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT9uEmRREe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT9uFGRREe6bAesDIgR3sg" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT-VIGRREe6bAesDIgR3sg" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT-VImRREe6bAesDIgR3sg" name="schedulerSelected" visibility="private" isStatic="true" type="_yAO5wGRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVlesGRREe6bAesDIgR3sg" name="main" specification="_yA0voGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVlesWRREe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yVlesmRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVles2RREe6bAesDIgR3sg" name="visualize" specification="_yQJlEGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVletGRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVletWRREe6bAesDIgR3sg" name="choice" type="_yAWOgGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVletmRREe6bAesDIgR3sg" name="visualize" specification="_yQJlE2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVlet2RREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVleuGRREe6bAesDIgR3sg" name="choice" type="_yAVAYWRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVleuWRREe6bAesDIgR3sg" name="verifyPerformanceRequirements" specification="_yQKMImRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVleumRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVleu2RREe6bAesDIgR3sg" name="verifyReliabilities" specification="_yQKMJGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVlevGRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVlevWRREe6bAesDIgR3sg" name="verifyDeadlines" specification="_yQKzMWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVlevmRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVlev2RREe6bAesDIgR3sg" name="verifyNoChannelConflicts" specification="_yQLaQGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVlewGRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVmFwGRREe6bAesDIgR3sg" name="setWarpParameters" specification="_yA2k0GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVmFwWRREe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yVmFwmRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVmFw2RREe6bAesDIgR3sg" name="printWarpParameters" specification="_yA3L4mRREe6bAesDIgR3sg">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yA0voGRREe6bAesDIgR3sg" name="main" isStatic="true" method="_yVlesGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yA0voWRREe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yA1WsGRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yA2k0GRREe6bAesDIgR3sg" name="setWarpParameters" visibility="private" isStatic="true" method="_yVmFwGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yA2k0WRREe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yA3L4GRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yA3L4mRREe6bAesDIgR3sg" name="printWarpParameters" visibility="private" isStatic="true" method="_yVmFw2RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKtjWRREe6bAesDIgR3sg">
                  <body>Print parameters of the Warp System.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yQJlEGRREe6bAesDIgR3sg" name="visualize" visibility="private" isStatic="true" method="_yVles2RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKth2RREe6bAesDIgR3sg">
                  <body>Visualizes the given workload choice.&#xD;
   * &#xD;
   * @param workLoad The workload to visualize&#xD;
   * @param choice The choice of visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQJlEWRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQJlEmRREe6bAesDIgR3sg" name="choice" type="_yAWOgGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQJlE2RREe6bAesDIgR3sg" name="visualize" visibility="private" isStatic="true" method="_yVletmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKtiGRREe6bAesDIgR3sg">
                  <body>Visualizes the data from the warp network flow.&#xD;
   * @param warp&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQKMIGRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQKMIWRREe6bAesDIgR3sg" name="choice" type="_yAVAYWRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQKMImRREe6bAesDIgR3sg" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_yVleuWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKtiWRREe6bAesDIgR3sg">
                  <body>Verifies performance requirements of the warp system&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQKMI2RREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQKMJGRREe6bAesDIgR3sg" name="verifyReliabilities" visibility="private" isStatic="true" method="_yVleu2RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKtimRREe6bAesDIgR3sg">
                  <body>Verifies the reliabilities of the WARP module&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQKzMGRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQKzMWRREe6bAesDIgR3sg" name="verifyDeadlines" visibility="private" isStatic="true" method="_yVlevWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKti2RREe6bAesDIgR3sg">
                  <body>Verify the deadlines of the given warp system&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQKzMmRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQLaQGRREe6bAesDIgR3sg" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_yVlev2RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWKtjGRREe6bAesDIgR3sg">
                  <body>Verify if there is not any channel conflicts&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQLaQWRREe6bAesDIgR3sg" name="warp" type="_yAD6oGRREe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yBCLAGRREe6bAesDIgR3sg" name="WarpDSL">
              <ownedComment xmi:id="_yWKtjmRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yT_jQGRREe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT_jQWRREe6bAesDIgR3sg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT_jQmRREe6bAesDIgR3sg" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT_jQ2RREe6bAesDIgR3sg" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT_jRGRREe6bAesDIgR3sg" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yT_jRWRREe6bAesDIgR3sg" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVms2mRREe6bAesDIgR3sg" name="getInstructionParameters" specification="_yBIRoGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVms22RREe6bAesDIgR3sg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVms3GRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yBIRoGRREe6bAesDIgR3sg" name="getInstructionParameters" method="_yVms2mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBIRoWRREe6bAesDIgR3sg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySXyoGRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yBEAMGRREe6bAesDIgR3sg" name="InstructionParameters">
                <ownedAttribute xmi:id="_yUAKUGRREe6bAesDIgR3sg" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUAKUWRREe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yUAKUmRREe6bAesDIgR3sg" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUAKU2RREe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yUAKVGRREe6bAesDIgR3sg" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUAKVWRREe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yUAKVmRREe6bAesDIgR3sg" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUAxYGRREe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yUAxYWRREe6bAesDIgR3sg" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUAxYmRREe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yUAxY2RREe6bAesDIgR3sg" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUAxZGRREe6bAesDIgR3sg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yUAxZmRREe6bAesDIgR3sg" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUBYcGRREe6bAesDIgR3sg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVmFxGRREe6bAesDIgR3sg" name="getCoordinator" specification="_yBEnQGRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVmFxWRREe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVmFxmRREe6bAesDIgR3sg" name="setCoordinator" specification="_yBFOUWRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVmFx2RREe6bAesDIgR3sg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVmFyGRREe6bAesDIgR3sg" name="setName" specification="_yBF1YGRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVmFyWRREe6bAesDIgR3sg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVms0GRREe6bAesDIgR3sg" name="setFlow" specification="_yBF1YmRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVms0WRREe6bAesDIgR3sg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVms0mRREe6bAesDIgR3sg" name="setSrc" specification="_yBGccGRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVms02RREe6bAesDIgR3sg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVms1GRREe6bAesDIgR3sg" name="setSnk" specification="_yBHDgGRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVms1WRREe6bAesDIgR3sg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVms1mRREe6bAesDIgR3sg" name="setChannel" specification="_yBHDgmRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVms12RREe6bAesDIgR3sg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVms2GRREe6bAesDIgR3sg" name="unused" specification="_yBHqkGRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVms2WRREe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yBEnQGRREe6bAesDIgR3sg" name="getCoordinator" method="_yVmFxGRREe6bAesDIgR3sg">
                  <ownedComment xmi:id="_yWKtj2RREe6bAesDIgR3sg">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yBFOUGRREe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yBFOUWRREe6bAesDIgR3sg" name="setCoordinator" method="_yVmFxmRREe6bAesDIgR3sg">
                  <ownedComment xmi:id="_yWLUkGRREe6bAesDIgR3sg">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yBFOUmRREe6bAesDIgR3sg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yBF1YGRREe6bAesDIgR3sg" name="setName" visibility="private" method="_yVmFyGRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yBF1YWRREe6bAesDIgR3sg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yBF1YmRREe6bAesDIgR3sg" name="setFlow" visibility="private" method="_yVms0GRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yBF1Y2RREe6bAesDIgR3sg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yBGccGRREe6bAesDIgR3sg" name="setSrc" visibility="private" method="_yVms0mRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yBGccWRREe6bAesDIgR3sg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yBHDgGRREe6bAesDIgR3sg" name="setSnk" visibility="private" method="_yVms1GRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yBHDgWRREe6bAesDIgR3sg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yBHDgmRREe6bAesDIgR3sg" name="setChannel" visibility="private" method="_yVms1mRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yBHDg2RREe6bAesDIgR3sg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yBHqkGRREe6bAesDIgR3sg" name="unused" method="_yVms2GRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yBHqkWRREe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yBJfwGRREe6bAesDIgR3sg" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_ySZAwGRREe6bAesDIgR3sg" general="_ySXyoWRREe6bAesDIgR3sg"/>
                <ownedAttribute xmi:id="_yUBYcWRREe6bAesDIgR3sg" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yUB_gWRREe6bAesDIgR3sg" name="instructionParametersArrayList" visibility="package" type="_yO3LoGRREe6bAesDIgR3sg" association="_yXPEgGRREe6bAesDIgR3sg"/>
                <ownedAttribute xmi:id="_yUCmkWRREe6bAesDIgR3sg" name="instructionParameters" visibility="package" type="_yBEAMGRREe6bAesDIgR3sg" association="_yXPEg2RREe6bAesDIgR3sg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVms3WRREe6bAesDIgR3sg" name="ListenerDsl" specification="_yBKG0GRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVms3mRREe6bAesDIgR3sg" type="_yBJfwGRREe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVms32RREe6bAesDIgR3sg" name="getInstructionParameters" specification="_yBKt4GRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVms4GRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVms4WRREe6bAesDIgR3sg" name="enterAction" specification="_yQQSwWRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVms4mRREe6bAesDIgR3sg" name="ctx" type="_yQPrsGRREe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVnT4GRREe6bAesDIgR3sg" name="exitAction" specification="_yQRg5GRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVnT4WRREe6bAesDIgR3sg" name="ctx" type="_yQPrsGRREe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVnT4mRREe6bAesDIgR3sg" name="exitFlowName" specification="_yQTWEWRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVnT42RREe6bAesDIgR3sg" name="ctx" type="_yQSvAGRREe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVnT5GRREe6bAesDIgR3sg" name="exitCmd" specification="_yQVLQmRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVnT5WRREe6bAesDIgR3sg" name="ctx" type="_yQVLQGRREe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVnT5mRREe6bAesDIgR3sg" name="exitSrcNode" specification="_yQVyVWRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVnT52RREe6bAesDIgR3sg" name="ctx" type="_yQVyU2RREe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVnT6GRREe6bAesDIgR3sg" name="exitSnkNode" specification="_yQXngGRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVnT6WRREe6bAesDIgR3sg" name="ctx" type="_yQXAcmRREe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVnT6mRREe6bAesDIgR3sg" name="exitChannel" specification="_yQYOkmRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yVnT62RREe6bAesDIgR3sg" name="ctx" type="_yQYOkGRREe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yBKG0GRREe6bAesDIgR3sg" name="ListenerDsl" visibility="package" method="_yVms3WRREe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_yBKG0WRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yBKG0mRREe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yBKG02RREe6bAesDIgR3sg" type="_yBJfwGRREe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yBKt4GRREe6bAesDIgR3sg" name="getInstructionParameters" method="_yVms32RREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_ySYZsWRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yQQSwWRREe6bAesDIgR3sg" name="enterAction" method="_yVms4WRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yQRg4GRREe6bAesDIgR3sg" name="ctx" type="_yQPrsGRREe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yQRg5GRREe6bAesDIgR3sg" name="exitAction" method="_yVnT4GRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yQRg5WRREe6bAesDIgR3sg" name="ctx" type="_yQPrsGRREe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yQTWEWRREe6bAesDIgR3sg" name="exitFlowName" method="_yVnT4mRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yQT9IGRREe6bAesDIgR3sg" name="ctx" type="_yQSvAGRREe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yQVLQmRREe6bAesDIgR3sg" name="exitCmd" method="_yVnT5GRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yQVLQ2RREe6bAesDIgR3sg" name="ctx" type="_yQVLQGRREe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yQVyVWRREe6bAesDIgR3sg" name="exitSrcNode" method="_yVnT5mRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yQVyVmRREe6bAesDIgR3sg" name="ctx" type="_yQVyU2RREe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yQXngGRREe6bAesDIgR3sg" name="exitSnkNode" method="_yVnT6GRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yQXngWRREe6bAesDIgR3sg" name="ctx" type="_yQXAcmRREe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yQYOkmRREe6bAesDIgR3sg" name="exitChannel" method="_yVnT6mRREe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_yQYOk2RREe6bAesDIgR3sg" name="ctx" type="_yQYOkGRREe6bAesDIgR3sg"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yBQNcGRREe6bAesDIgR3sg" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_yUD0sGRREe6bAesDIgR3sg" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUD0sWRREe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUD0smRREe6bAesDIgR3sg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUEbwGRREe6bAesDIgR3sg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUEbwWRREe6bAesDIgR3sg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUEbwmRREe6bAesDIgR3sg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUEbw2RREe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUFC0GRREe6bAesDIgR3sg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUFC0WRREe6bAesDIgR3sg" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUFC0mRREe6bAesDIgR3sg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUFp4WRREe6bAesDIgR3sg" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUFp4mRREe6bAesDIgR3sg" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUFp42RREe6bAesDIgR3sg" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUGQ82RREe6bAesDIgR3sg" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUG4AWRREe6bAesDIgR3sg" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUG4AmRREe6bAesDIgR3sg" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUG4A2RREe6bAesDIgR3sg" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUG4BGRREe6bAesDIgR3sg" name="predecessor" type="_yBQNcGRREe6bAesDIgR3sg" association="_yWLUkWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUHfEGRREe6bAesDIgR3sg" name="endTimes" visibility="private" type="_x_2fRGRREe6bAesDIgR3sg" association="_yXPrkWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUIGIWRREe6bAesDIgR3sg" name="subObjects" type="_yQaq0WRREe6bAesDIgR3sg" isReadOnly="true" association="_yXQSoWRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVn68GRREe6bAesDIgR3sg" name="SchedulableObject" specification="_yBT30GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVn68WRREe6bAesDIgR3sg" type="_yBQNcGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVn68mRREe6bAesDIgR3sg" name="SchedulableObject" specification="_yQbR4GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVn682RREe6bAesDIgR3sg" name="obj" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVn69GRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVn69WRREe6bAesDIgR3sg" type="_yBQNcGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVn69mRREe6bAesDIgR3sg" name="SchedulableObject" specification="_yBVF8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVn692RREe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVn6-GRREe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVn6-WRREe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVn6-mRREe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVn6-2RREe6bAesDIgR3sg" type="_yBQNcGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVn6_GRREe6bAesDIgR3sg" name="SchedulableObject" specification="_yBVtBmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVn6_WRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVn6_mRREe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVn6_2RREe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVn7AGRREe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVn7AWRREe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVn7AmRREe6bAesDIgR3sg" type="_yBQNcGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVoiAGRREe6bAesDIgR3sg" name="setDefaultParameters" specification="_yBW7I2RREe6bAesDIgR3sg">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVoiAWRREe6bAesDIgR3sg" name="getAllEndTimes" specification="_yBW7JGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVoiAmRREe6bAesDIgR3sg" type="_x_2fRGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVoiA2RREe6bAesDIgR3sg" name="addToEndTimes" specification="_yBXiMWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVoiBGRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVoiBWRREe6bAesDIgR3sg" name="peekEndTimes" specification="_yBXiM2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVoiBmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVoiB2RREe6bAesDIgR3sg" name="pollEndTimes" specification="_yBYJQWRREe6bAesDIgR3sg">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVoiCGRREe6bAesDIgR3sg" name="addSubObject" specification="_yQb49GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVoiCWRREe6bAesDIgR3sg" name="obj" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVoiCmRREe6bAesDIgR3sg" name="getName" specification="_yBYJQmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVoiC2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVoiDGRREe6bAesDIgR3sg" name="setName" specification="_yBYwUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVoiDWRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVoiDmRREe6bAesDIgR3sg" name="getReleaseTime" specification="_yBYwUmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVoiD2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVoiEGRREe6bAesDIgR3sg" name="getPhase" specification="_yBYwVGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVoiEWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVoiEmRREe6bAesDIgR3sg" name="getStartTime" specification="_yBZXYWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVoiE2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVoiFGRREe6bAesDIgR3sg" name="setEndTime" specification="_yBZXY2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVoiFWRREe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJEGRREe6bAesDIgR3sg" name="setStartTime" specification="_yBalgWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJEWRREe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJEmRREe6bAesDIgR3sg" name="setReleaseTime" specification="_yBbMkGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJE2RREe6bAesDIgR3sg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJFGRREe6bAesDIgR3sg" name="setPeriod" specification="_yBbzoGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJFWRREe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJFmRREe6bAesDIgR3sg" name="setPhase" specification="_yBbzomRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJF2RREe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJGGRREe6bAesDIgR3sg" name="setNextReleaseTime" specification="_yBcasGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJGWRREe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJGmRREe6bAesDIgR3sg" name="maxPhaseComparison" specification="_yQb49mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJG2RREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJHGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJHWRREe6bAesDIgR3sg" name="maxPhaseComparison" specification="_yQdHEGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJHmRREe6bAesDIgR3sg" name="obj1" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJH2RREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJIGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJIWRREe6bAesDIgR3sg" name="deadlineComparison" specification="_yQdHFGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJImRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJI2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJJGRREe6bAesDIgR3sg" name="deadlineComparison" specification="_yQduIGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJJWRREe6bAesDIgR3sg" name="obj1" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJJmRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJJ2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJKGRREe6bAesDIgR3sg" name="periodComparison" specification="_yQduJGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJKWRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJKmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJK2RREe6bAesDIgR3sg" name="periodComparison" specification="_yQduJ2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJLGRREe6bAesDIgR3sg" name="obj1" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJLWRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJLmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJL2RREe6bAesDIgR3sg" name="priorityComparison" specification="_yQduK2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJMGRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJMWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJMmRREe6bAesDIgR3sg" name="priorityComparison" specification="_yQeVMGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJM2RREe6bAesDIgR3sg" name="obj1" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJNGRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJNWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJNmRREe6bAesDIgR3sg" name="releaseTimeComparison" specification="_yQeVNGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJN2RREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJOGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJOWRREe6bAesDIgR3sg" name="releaseTimeComparison" specification="_yQeVN2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJOmRREe6bAesDIgR3sg" name="obj1" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJO2RREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJPGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpJPWRREe6bAesDIgR3sg" name="LatestReleaseTimeComparison" specification="_yQe8QWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpJPmRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpJP2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpwIGRREe6bAesDIgR3sg" name="LatestReleaseTimeComparison" specification="_yQe8RGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpwIWRREe6bAesDIgR3sg" name="obj1" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpwImRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVpwI2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpwJGRREe6bAesDIgR3sg" name="compareAscendingOrder" specification="_yBeP4GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpwJWRREe6bAesDIgR3sg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVpwJmRREe6bAesDIgR3sg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVpwJ2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVpwKGRREe6bAesDIgR3sg" name="compareDescendingOrder" specification="_yBeP5GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVpwKWRREe6bAesDIgR3sg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVpwKmRREe6bAesDIgR3sg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVpwK2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVqXMGRREe6bAesDIgR3sg" name="print" specification="_yBfeAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVqXMWRREe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVqXMmRREe6bAesDIgR3sg" name="print" specification="_yBfeAmRREe6bAesDIgR3sg">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yBT30GRREe6bAesDIgR3sg" name="SchedulableObject" visibility="package" method="_yVn68GRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yBT30WRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yBT30mRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yBT302RREe6bAesDIgR3sg" type="_yBQNcGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBVF8GRREe6bAesDIgR3sg" name="SchedulableObject" visibility="package" method="_yVn69mRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yBVtA2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yBVtBGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yBVF8WRREe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBVtAGRREe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBVtAWRREe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBVtAmRREe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBVtBWRREe6bAesDIgR3sg" type="_yBQNcGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBVtBmRREe6bAesDIgR3sg" name="SchedulableObject" visibility="package" method="_yVn6_GRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yBW7IGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yBW7IWRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yBVtB2RREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBVtCGRREe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBVtCWRREe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBVtCmRREe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBVtC2RREe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBW7ImRREe6bAesDIgR3sg" type="_yBQNcGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBW7I2RREe6bAesDIgR3sg" name="setDefaultParameters" visibility="private" method="_yVoiAGRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yBW7JGRREe6bAesDIgR3sg" name="getAllEndTimes" method="_yVoiAWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWL7oWRREe6bAesDIgR3sg">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQb482RREe6bAesDIgR3sg" type="_x_2fRGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBXiMWRREe6bAesDIgR3sg" name="addToEndTimes" method="_yVoiA2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBXiMmRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBXiM2RREe6bAesDIgR3sg" name="peekEndTimes" method="_yVoiBWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBYJQGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBYJQWRREe6bAesDIgR3sg" name="pollEndTimes" method="_yVoiB2RREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yBYJQmRREe6bAesDIgR3sg" name="getName" method="_yVoiCmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWL7omRREe6bAesDIgR3sg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_yBYJQ2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBYwUGRREe6bAesDIgR3sg" name="setName" method="_yVoiDGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWL7o2RREe6bAesDIgR3sg">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yBYwUWRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBYwUmRREe6bAesDIgR3sg" name="getReleaseTime" method="_yVoiDmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWL7pGRREe6bAesDIgR3sg">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yBYwU2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBYwVGRREe6bAesDIgR3sg" name="getPhase" method="_yVoiEGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWL7pWRREe6bAesDIgR3sg">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_yBZXYGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBZXYWRREe6bAesDIgR3sg" name="getStartTime" method="_yVoiEmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWL7pmRREe6bAesDIgR3sg">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yBZXYmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBZXY2RREe6bAesDIgR3sg" name="setEndTime" method="_yVoiFGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWL7p2RREe6bAesDIgR3sg">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yBalgGRREe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBalgWRREe6bAesDIgR3sg" name="setStartTime" method="_yVpJEGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWL7qGRREe6bAesDIgR3sg">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yBalgmRREe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBbMkGRREe6bAesDIgR3sg" name="setReleaseTime" method="_yVpJEmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWL7qWRREe6bAesDIgR3sg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yBbMkWRREe6bAesDIgR3sg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBbzoGRREe6bAesDIgR3sg" name="setPeriod" method="_yVpJFGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWL7qmRREe6bAesDIgR3sg">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yBbzoWRREe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBbzomRREe6bAesDIgR3sg" name="setPhase" method="_yVpJFmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWL7q2RREe6bAesDIgR3sg">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yBbzo2RREe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBcasGRREe6bAesDIgR3sg" name="setNextReleaseTime" method="_yVpJGGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWL7rGRREe6bAesDIgR3sg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yBcasWRREe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBeP4GRREe6bAesDIgR3sg" name="compareAscendingOrder" method="_yVpwJGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBeP4WRREe6bAesDIgR3sg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBeP4mRREe6bAesDIgR3sg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBeP42RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBeP5GRREe6bAesDIgR3sg" name="compareDescendingOrder" method="_yVpwKGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBeP5WRREe6bAesDIgR3sg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBeP5mRREe6bAesDIgR3sg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBe28GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBfeAGRREe6bAesDIgR3sg" name="print" method="_yVqXMGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBfeAWRREe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBfeAmRREe6bAesDIgR3sg" name="print" method="_yVqXMmRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yQbR4GRREe6bAesDIgR3sg" name="SchedulableObject" visibility="package" method="_yVn68mRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yQb48GRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQb48WRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWL7oGRREe6bAesDIgR3sg">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQbR4WRREe6bAesDIgR3sg" name="obj" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQbR4mRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQb48mRREe6bAesDIgR3sg" type="_yBQNcGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQb49GRREe6bAesDIgR3sg" name="addSubObject" method="_yVoiCGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQb49WRREe6bAesDIgR3sg" name="obj" type="_yBQNcGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQb49mRREe6bAesDIgR3sg" name="maxPhaseComparison" method="_yVpJGmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQb492RREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQb4-GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQdHEGRREe6bAesDIgR3sg" name="maxPhaseComparison" method="_yVpJHWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQdHEWRREe6bAesDIgR3sg" name="obj1" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQdHEmRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQdHE2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQdHFGRREe6bAesDIgR3sg" name="deadlineComparison" method="_yVpJIWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQdHFWRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQdHFmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQduIGRREe6bAesDIgR3sg" name="deadlineComparison" method="_yVpJJGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQduIWRREe6bAesDIgR3sg" name="obj1" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQduImRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQduI2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQduJGRREe6bAesDIgR3sg" name="periodComparison" method="_yVpJKGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQduJWRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQduJmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQduJ2RREe6bAesDIgR3sg" name="periodComparison" method="_yVpJK2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQduKGRREe6bAesDIgR3sg" name="obj1" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQduKWRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQduKmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQduK2RREe6bAesDIgR3sg" name="priorityComparison" method="_yVpJL2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQduLGRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQduLWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQeVMGRREe6bAesDIgR3sg" name="priorityComparison" method="_yVpJMmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQeVMWRREe6bAesDIgR3sg" name="obj1" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQeVMmRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQeVM2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQeVNGRREe6bAesDIgR3sg" name="releaseTimeComparison" method="_yVpJNmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQeVNWRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQeVNmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQeVN2RREe6bAesDIgR3sg" name="releaseTimeComparison" method="_yVpJOWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQeVOGRREe6bAesDIgR3sg" name="obj1" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQeVOWRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQe8QGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQe8QWRREe6bAesDIgR3sg" name="LatestReleaseTimeComparison" method="_yVpJPWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQe8QmRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQe8Q2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQe8RGRREe6bAesDIgR3sg" name="LatestReleaseTimeComparison" method="_yVpwIGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQe8RWRREe6bAesDIgR3sg" name="obj1" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQe8RmRREe6bAesDIgR3sg" name="obj2" type="_yBQNcGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQgKYGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yBmywGRREe6bAesDIgR3sg" name="Program">
              <ownedComment xmi:id="_yWMisGRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@author Frank Forliano (for java doc comments)&#xD;
@author srgoddard (for java doc comments)&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yUJUQGRREe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUJ7UGRREe6bAesDIgR3sg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUJ7UWRREe6bAesDIgR3sg" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUJ7UmRREe6bAesDIgR3sg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUJ7U2RREe6bAesDIgR3sg" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUJ7VGRREe6bAesDIgR3sg" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUJ7VWRREe6bAesDIgR3sg" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUJ7VmRREe6bAesDIgR3sg" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUJ7V2RREe6bAesDIgR3sg" name="workLoad" visibility="package" type="_yCI-QGRREe6bAesDIgR3sg" association="_yXQ5sWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUKiYWRREe6bAesDIgR3sg" name="scheduleBuilt" visibility="package" type="_x_suQGRREe6bAesDIgR3sg" association="_yXRgwGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUKiY2RREe6bAesDIgR3sg" name="SchedulerSelected" visibility="package" type="_yScrIGRREe6bAesDIgR3sg" association="_yXRgw2RREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yULJcWRREe6bAesDIgR3sg" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yULJc2RREe6bAesDIgR3sg" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yULJdWRREe6bAesDIgR3sg" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yULwgWRREe6bAesDIgR3sg" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yULwg2RREe6bAesDIgR3sg" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yULwhWRREe6bAesDIgR3sg" name="channelsAvailable" visibility="package" type="_x-WqcGRREe6bAesDIgR3sg" association="_yXSH0WRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUMXkWRREe6bAesDIgR3sg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUMXk2RREe6bAesDIgR3sg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUMXlWRREe6bAesDIgR3sg" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUM-oWRREe6bAesDIgR3sg" name="deadlineMisses" visibility="private" type="_x-xhMGRREe6bAesDIgR3sg" association="_yXSu4GRREe6bAesDIgR3sg"/>
              <interfaceRealization xmi:id="_yQjNsmRREe6bAesDIgR3sg" client="_yBmywGRREe6bAesDIgR3sg" supplier="_yAOSsWRREe6bAesDIgR3sg" contract="_yAOSsWRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVq-QGRREe6bAesDIgR3sg" name="Program" specification="_ySd5QGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVq-QWRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVq-QmRREe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVq-Q2RREe6bAesDIgR3sg" name="choice" type="_yScrIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVq-RGRREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVq-RWRREe6bAesDIgR3sg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVq-RmRREe6bAesDIgR3sg" type="_yBmywGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVq-R2RREe6bAesDIgR3sg" name="Program" specification="_ySegU2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVq-SGRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVq-SWRREe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVq-SmRREe6bAesDIgR3sg" name="choice" type="_yScrIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVq-S2RREe6bAesDIgR3sg" type="_yBmywGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVq-TGRREe6bAesDIgR3sg" name="setDefaultParameters" specification="_yQkb0GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVq-TWRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVq-TmRREe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVq-T2RREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVq-UGRREe6bAesDIgR3sg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVq-UWRREe6bAesDIgR3sg" name="toWorkLoad" specification="_yBpPAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVq-UmRREe6bAesDIgR3sg" type="_yCI-QGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVq-U2RREe6bAesDIgR3sg" name="buildProgram" specification="_ySfHZmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVq-VGRREe6bAesDIgR3sg" name="choice" type="_yScrIGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVq-VWRREe6bAesDIgR3sg" name="buildOriginalProgram" specification="_yBp2EGRREe6bAesDIgR3sg">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVq-VmRREe6bAesDIgR3sg" name="waitInstruction" specification="_yBqdIGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVq-V2RREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVq-WGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVsMYGRREe6bAesDIgR3sg" name="elseWaitInstruction" specification="_yBrEMGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVsMYWRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMYmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVsMY2RREe6bAesDIgR3sg" name="elsePullClause" specification="_yBsSUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVsMZGRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMZWRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMZmRREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMZ2RREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMaGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVsMaWRREe6bAesDIgR3sg" name="hasPushInstruction" specification="_yBs5YGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVsMamRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMa2RREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMbGRREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMbWRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMbmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVsMb2RREe6bAesDIgR3sg" name="pushInstruction" specification="_yBtgcWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVsMcGRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMcWRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMcmRREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMc2RREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMdGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVsMdWRREe6bAesDIgR3sg" name="getFirstChannelInInstruction" specification="_yBuHgWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVsMdmRREe6bAesDIgR3sg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsMd2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszcGRREe6bAesDIgR3sg" name="findNextAvailableInstructionTimeSlot" specification="_yQlC4WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVszcWRREe6bAesDIgR3sg" name="schedule" type="_x_suQGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVszcmRREe6bAesDIgR3sg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszc2RREe6bAesDIgR3sg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszdGRREe6bAesDIgR3sg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszdWRREe6bAesDIgR3sg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszdmRREe6bAesDIgR3sg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yVszd2RREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszeGRREe6bAesDIgR3sg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yVszeWRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszemRREe6bAesDIgR3sg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsze2RREe6bAesDIgR3sg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszfGRREe6bAesDIgR3sg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszfWRREe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszfmRREe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszf2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszgGRREe6bAesDIgR3sg" name="slotIsAvailable" specification="_yQlp9mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVszgWRREe6bAesDIgR3sg" name="currentInstructionTimeSlot" type="_x_NmEGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVszgmRREe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszg2RREe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszhGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszhWRREe6bAesDIgR3sg" name="findNextAvailableChannel" specification="_yQmRAWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVszhmRREe6bAesDIgR3sg" name="schedule" type="_x_suQGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVszh2RREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsziGRREe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVsziWRREe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszimRREe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVszi2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszjGRREe6bAesDIgR3sg" name="selectPriority" specification="_yBv8sGRREe6bAesDIgR3sg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszjWRREe6bAesDIgR3sg" name="selectRM" specification="_yBv8sWRREe6bAesDIgR3sg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszjmRREe6bAesDIgR3sg" name="selectDM" specification="_yBv8smRREe6bAesDIgR3sg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszj2RREe6bAesDIgR3sg" name="selectRtHART" specification="_yBv8s2RREe6bAesDIgR3sg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszkGRREe6bAesDIgR3sg" name="setScheduleSelected" specification="_ySfucWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVszkWRREe6bAesDIgR3sg" name="choice" type="_yScrIGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszkmRREe6bAesDIgR3sg" name="setSchedule" specification="_yQmRCGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVszk2RREe6bAesDIgR3sg" name="schedule" type="_x_suQGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszlGRREe6bAesDIgR3sg" name="getSchedule" specification="_yBwjwGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVszlWRREe6bAesDIgR3sg" type="_x_suQGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszlmRREe6bAesDIgR3sg" name="getSchedulerName" specification="_yBwjwWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVszl2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszmGRREe6bAesDIgR3sg" name="getSchChoice" specification="_yBxK0mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVszmWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszmmRREe6bAesDIgR3sg" name="getNumChannels" specification="_yBxK1GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVszm2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVsznGRREe6bAesDIgR3sg" name="getNumTransmissions" specification="_yByY9GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVsznWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVsznmRREe6bAesDIgR3sg" name="getRealTimeHartFlag" specification="_yByY-WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVszn2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVszoGRREe6bAesDIgR3sg" name="setRealTimeHartFlag" specification="_yBzAAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVszoWRREe6bAesDIgR3sg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVtagGRREe6bAesDIgR3sg" name="getMinPacketReceptionRate" specification="_yBzAAmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVtagWRREe6bAesDIgR3sg" type="_ySEQoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVtagmRREe6bAesDIgR3sg" name="getE2e" specification="_yBzABmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVtag2RREe6bAesDIgR3sg" type="_ySEQoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVtahGRREe6bAesDIgR3sg" name="getName" specification="_yBznE2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVtahWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVtahmRREe6bAesDIgR3sg" name="getOptimizationFlag" specification="_yB0OI2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVtah2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVtaiGRREe6bAesDIgR3sg" name="deadlineMisses" specification="_yB01NGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVtaiWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVtaimRREe6bAesDIgR3sg" name="getNumFaults" specification="_yB1cQGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVtai2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVtajGRREe6bAesDIgR3sg" name="getNodeMapIndex" specification="_yB1cRWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVtajWRREe6bAesDIgR3sg" type="_yOv24GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yBpPAGRREe6bAesDIgR3sg" name="toWorkLoad" method="_yVq-UWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWMisWRREe6bAesDIgR3sg">
                  <body>&#xD;
  * @return workLoad</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQlC4GRREe6bAesDIgR3sg" type="_yCI-QGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBp2EGRREe6bAesDIgR3sg" name="buildOriginalProgram" method="_yVq-VWRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yBqdIGRREe6bAesDIgR3sg" name="waitInstruction" visibility="private" method="_yVq-VmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBqdIWRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBqdImRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBrEMGRREe6bAesDIgR3sg" name="elseWaitInstruction" visibility="private" method="_yVsMYGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBrEMWRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBrEMmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBsSUGRREe6bAesDIgR3sg" name="elsePullClause" visibility="private" method="_yVsMY2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBsSUWRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBsSUmRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBsSU2RREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBsSVGRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBsSVWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBs5YGRREe6bAesDIgR3sg" name="hasPushInstruction" visibility="private" method="_yVsMaWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBs5YWRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBs5YmRREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBs5Y2RREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBs5ZGRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBtgcGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBtgcWRREe6bAesDIgR3sg" name="pushInstruction" visibility="private" method="_yVsMb2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBtgcmRREe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBtgc2RREe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBtgdGRREe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBtgdWRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBuHgGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBuHgWRREe6bAesDIgR3sg" name="getFirstChannelInInstruction" visibility="private" method="_yVsMdWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBuHgmRREe6bAesDIgR3sg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yBuukGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBv8sGRREe6bAesDIgR3sg" name="selectPriority" method="_yVszjGRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yBv8sWRREe6bAesDIgR3sg" name="selectRM" method="_yVszjWRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yBv8smRREe6bAesDIgR3sg" name="selectDM" method="_yVszjmRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yBv8s2RREe6bAesDIgR3sg" name="selectRtHART" method="_yVszj2RREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yBwjwGRREe6bAesDIgR3sg" name="getSchedule" method="_yVszlGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWNJwGRREe6bAesDIgR3sg">
                  <body>Returns the program schedule of the flows.&#xD;
   * @return scheduleBuilt</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQm4EGRREe6bAesDIgR3sg" type="_x_suQGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBwjwWRREe6bAesDIgR3sg" name="getSchedulerName" method="_yVszlmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBwjwmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBxK0mRREe6bAesDIgR3sg" name="getSchChoice" method="_yVszmGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBxK02RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBxK1GRREe6bAesDIgR3sg" name="getNumChannels" method="_yVszmmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yByY8GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yByY9GRREe6bAesDIgR3sg" name="getNumTransmissions" method="_yVsznGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yByY9WRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yByY-WRREe6bAesDIgR3sg" name="getRealTimeHartFlag" visibility="private" method="_yVsznmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yByY-mRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBzAAGRREe6bAesDIgR3sg" name="setRealTimeHartFlag" visibility="private" method="_yVszoGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBzAAWRREe6bAesDIgR3sg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBzAAmRREe6bAesDIgR3sg" name="getMinPacketReceptionRate" method="_yVtagGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySgVgGRREe6bAesDIgR3sg" type="_ySEQoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBzABmRREe6bAesDIgR3sg" name="getE2e" method="_yVtagmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySgVgWRREe6bAesDIgR3sg" type="_ySEQoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBznE2RREe6bAesDIgR3sg" name="getName" method="_yVtahGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yBznFGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yB0OI2RREe6bAesDIgR3sg" name="getOptimizationFlag" method="_yVtahmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yB01MGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yB01NGRREe6bAesDIgR3sg" name="deadlineMisses" method="_yVtaiGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQm4EWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yB1cQGRREe6bAesDIgR3sg" name="getNumFaults" method="_yVtaimRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yB1cQWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yB1cRWRREe6bAesDIgR3sg" name="getNodeMapIndex" method="_yVtajGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWNJwWRREe6bAesDIgR3sg">
                  <body>Maps the names of the nodes to the respective indicies.&#xD;
   * @return A HashMap -> Keys = NODE NAMES // Values = Indicies in Schedule Table</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySgVgmRREe6bAesDIgR3sg" type="_yOv24GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQkb0GRREe6bAesDIgR3sg" name="setDefaultParameters" visibility="private" method="_yVq-TGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQkb0WRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQkb0mRREe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQkb02RREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQkb1GRREe6bAesDIgR3sg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQlC4WRREe6bAesDIgR3sg" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_yVszcGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQlC4mRREe6bAesDIgR3sg" name="schedule" type="_x_suQGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQlC42RREe6bAesDIgR3sg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQlC5GRREe6bAesDIgR3sg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQlC5WRREe6bAesDIgR3sg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQlC5mRREe6bAesDIgR3sg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQlC52RREe6bAesDIgR3sg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yQlp9GRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQlC6GRREe6bAesDIgR3sg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yQlp9WRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQlC6WRREe6bAesDIgR3sg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQlC6mRREe6bAesDIgR3sg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQlp8GRREe6bAesDIgR3sg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQlp8WRREe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQlp8mRREe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQlp82RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQlp9mRREe6bAesDIgR3sg" name="slotIsAvailable" visibility="private" method="_yVszgGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQlp92RREe6bAesDIgR3sg" name="currentInstructionTimeSlot" type="_x_NmEGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQlp-GRREe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQlp-WRREe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQmRAGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQmRAWRREe6bAesDIgR3sg" name="findNextAvailableChannel" visibility="private" method="_yVszhWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQmRAmRREe6bAesDIgR3sg" name="schedule" type="_x_suQGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQmRA2RREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQmRBGRREe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQmRBWRREe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQmRBmRREe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQmRB2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQmRCGRREe6bAesDIgR3sg" name="setSchedule" visibility="private" method="_yVszkmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQmRCWRREe6bAesDIgR3sg" name="schedule" type="_x_suQGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySd5QGRREe6bAesDIgR3sg" name="Program" visibility="package" method="_yVq-QGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_ySegUGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySegUWRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySd5QWRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySd5QmRREe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySd5Q2RREe6bAesDIgR3sg" name="choice" type="_yScrIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySd5RGRREe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySd5RWRREe6bAesDIgR3sg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySegUmRREe6bAesDIgR3sg" type="_yBmywGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySegU2RREe6bAesDIgR3sg" name="Program" visibility="package" method="_yVq-R2RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_ySfHY2RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySfHZGRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySfHYGRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySfHYWRREe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySfHYmRREe6bAesDIgR3sg" name="choice" type="_yScrIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySfHZWRREe6bAesDIgR3sg" type="_yBmywGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySfHZmRREe6bAesDIgR3sg" name="buildProgram" method="_yVq-U2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySfucGRREe6bAesDIgR3sg" name="choice" type="_yScrIGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySfucWRREe6bAesDIgR3sg" name="setScheduleSelected" visibility="private" method="_yVszkGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySfucmRREe6bAesDIgR3sg" name="choice" type="_yScrIGRREe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yB8xAGRREe6bAesDIgR3sg" name="WarpSystem">
              <ownedComment xmi:id="_yWNJwmRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yUOMwGRREe6bAesDIgR3sg" name="program" visibility="private" type="_yBmywGRREe6bAesDIgR3sg" association="_yXSu42RREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUOMwmRREe6bAesDIgR3sg" name="workLoad" visibility="private" type="_yCI-QGRREe6bAesDIgR3sg" association="_yXSu5mRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUOz0WRREe6bAesDIgR3sg" name="ra" visibility="private" type="_x_4UcGRREe6bAesDIgR3sg" association="_yXTV8WRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUOz02RREe6bAesDIgR3sg" name="la" visibility="private" type="_x_QCUGRREe6bAesDIgR3sg" association="_yXT9AGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUOz1WRREe6bAesDIgR3sg" name="ca" visibility="private" type="_x-Rx8GRREe6bAesDIgR3sg" association="_yXUkEGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUPa4WRREe6bAesDIgR3sg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUQB82RREe6bAesDIgR3sg" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUQB9GRREe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUQpAWRREe6bAesDIgR3sg" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUQpAmRREe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yQp7YGRREe6bAesDIgR3sg" client="_yB8xAGRREe6bAesDIgR3sg" supplier="_yAD6oGRREe6bAesDIgR3sg" contract="_yAD6oGRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVuoomRREe6bAesDIgR3sg" name="WarpSystem" specification="_ySiKsGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVuoo2RREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVuopGRREe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVuopWRREe6bAesDIgR3sg" name="choice" type="_yScrIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVuopmRREe6bAesDIgR3sg" type="_yB8xAGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVuop2RREe6bAesDIgR3sg" name="toWorkload" specification="_yB9YEGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVuoqGRREe6bAesDIgR3sg" type="_yCI-QGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVvPsGRREe6bAesDIgR3sg" name="toProgram" specification="_yB-mM2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVvPsWRREe6bAesDIgR3sg" type="_yBmywGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVvPsmRREe6bAesDIgR3sg" name="toReliabilityAnalysis" specification="_yB_NQ2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVvPs2RREe6bAesDIgR3sg" type="_x_4UcGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVvPtGRREe6bAesDIgR3sg" name="toSimulator" specification="_yB_0UmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVvPtWRREe6bAesDIgR3sg" type="_yAMdgGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVvPtmRREe6bAesDIgR3sg" name="toLatencyAnalysis" specification="_yB_0VmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVvPt2RREe6bAesDIgR3sg" type="_x_QCUGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVvPuGRREe6bAesDIgR3sg" name="toChannelAnalysis" specification="_yCBCc2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVvPuWRREe6bAesDIgR3sg" type="_x-Rx8GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVvPumRREe6bAesDIgR3sg" name="reliabilitiesMet" specification="_yCBpgmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVvPu2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVvPvGRREe6bAesDIgR3sg" name="deadlinesMet" specification="_yCCQkmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVvPvWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVvPvmRREe6bAesDIgR3sg" name="createProgram" specification="_ySixwGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVvPv2RREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVvPwGRREe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVvPwWRREe6bAesDIgR3sg" name="choice" type="_yScrIGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVvPwmRREe6bAesDIgR3sg" name="getNumFaults" specification="_yCC3oGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVvPw2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVvPxGRREe6bAesDIgR3sg" name="getMinPacketReceptionRate" specification="_yCDesWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVvPxWRREe6bAesDIgR3sg" type="_ySEQoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVvPxmRREe6bAesDIgR3sg" name="getE2e" specification="_yCEFwWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVvPx2RREe6bAesDIgR3sg" type="_ySEQoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVvPyGRREe6bAesDIgR3sg" name="getName" specification="_yCEs0mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVwd0GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVwd0WRREe6bAesDIgR3sg" name="getSchedulerName" specification="_yCFT4mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVwd0mRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVwd02RREe6bAesDIgR3sg" name="getNumTransmissions" specification="_yCF68GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVwd1GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVwd1WRREe6bAesDIgR3sg" name="getOptimizationFlag" specification="_yCF69WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVwd1mRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yB9YEGRREe6bAesDIgR3sg" name="toWorkload" method="_yVuop2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQqicGRREe6bAesDIgR3sg" type="_yCI-QGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yB-mM2RREe6bAesDIgR3sg" name="toProgram" method="_yVvPsGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQqicWRREe6bAesDIgR3sg" type="_yBmywGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yB_NQ2RREe6bAesDIgR3sg" name="toReliabilityAnalysis" method="_yVvPsmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQqicmRREe6bAesDIgR3sg" type="_x_4UcGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yB_0UmRREe6bAesDIgR3sg" name="toSimulator" method="_yVvPtGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQqic2RREe6bAesDIgR3sg" type="_yAMdgGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yB_0VmRREe6bAesDIgR3sg" name="toLatencyAnalysis" method="_yVvPtmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQqidGRREe6bAesDIgR3sg" type="_x_QCUGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCBCc2RREe6bAesDIgR3sg" name="toChannelAnalysis" method="_yVvPuGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQqidWRREe6bAesDIgR3sg" type="_x-Rx8GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCBpgmRREe6bAesDIgR3sg" name="reliabilitiesMet" method="_yVvPumRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCBpg2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCCQkmRREe6bAesDIgR3sg" name="deadlinesMet" method="_yVvPvGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCCQk2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCC3oGRREe6bAesDIgR3sg" name="getNumFaults" method="_yVvPwmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCC3oWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCDesWRREe6bAesDIgR3sg" name="getMinPacketReceptionRate" method="_yVvPxGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySixxGRREe6bAesDIgR3sg" type="_ySEQoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCEFwWRREe6bAesDIgR3sg" name="getE2e" method="_yVvPxmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySjY0GRREe6bAesDIgR3sg" type="_ySEQoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCEs0mRREe6bAesDIgR3sg" name="getName" method="_yVvPyGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCEs02RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCFT4mRREe6bAesDIgR3sg" name="getSchedulerName" method="_yVwd0WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCFT42RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCF68GRREe6bAesDIgR3sg" name="getNumTransmissions" method="_yVwd02RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCF68WRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCF69WRREe6bAesDIgR3sg" name="getOptimizationFlag" method="_yVwd1WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCF69mRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCGiA2RREe6bAesDIgR3sg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_ySiKsGRREe6bAesDIgR3sg" name="WarpSystem" method="_yVuoomRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_ySiKtGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySiKtWRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySiKsWRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySiKsmRREe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySiKs2RREe6bAesDIgR3sg" name="choice" type="_yScrIGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySiKtmRREe6bAesDIgR3sg" type="_yB8xAGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySixwGRREe6bAesDIgR3sg" name="createProgram" visibility="private" method="_yVvPvmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySixwWRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySixwmRREe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySixw2RREe6bAesDIgR3sg" name="choice" type="_yScrIGRREe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yCI-QGRREe6bAesDIgR3sg" name="WorkLoad">
              <ownedComment xmi:id="_yWNJw2RREe6bAesDIgR3sg">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@author Frank Forliano (for java doc comments)&#xD;
@author srgoddard (for java doc comments)&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yQzFVGRREe6bAesDIgR3sg" general="_yCb5MGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yURQEGRREe6bAesDIgR3sg" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUR3IGRREe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUR3IWRREe6bAesDIgR3sg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUR3ImRREe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUR3I2RREe6bAesDIgR3sg" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUR3JGRREe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUR3JWRREe6bAesDIgR3sg" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUR3JmRREe6bAesDIgR3sg" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUSeMGRREe6bAesDIgR3sg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUSeMWRREe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUSeMmRREe6bAesDIgR3sg" name="minPacketReceptionRate" type="_ySEQoGRREe6bAesDIgR3sg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUSeM2RREe6bAesDIgR3sg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUSeNGRREe6bAesDIgR3sg" name="e2e" visibility="private" type="_ySEQoGRREe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUSeNWRREe6bAesDIgR3sg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUTFQGRREe6bAesDIgR3sg" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUTFQWRREe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUTFQmRREe6bAesDIgR3sg" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUTFQ2RREe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUTFRWRREe6bAesDIgR3sg" name="flows" type="_x--8kGRREe6bAesDIgR3sg" association="_yWNw0GRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUTFRmRREe6bAesDIgR3sg" name="nodes" type="_x_fS4GRREe6bAesDIgR3sg" association="_yWNw0mRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUTsUGRREe6bAesDIgR3sg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUTsUmRREe6bAesDIgR3sg" name="flowNamesInOriginalOrder" type="_yO3LoGRREe6bAesDIgR3sg" association="_yXVLIWRREe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUUTYWRREe6bAesDIgR3sg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUUTYmRREe6bAesDIgR3sg" name="flowNamesInPriorityOrder" type="_yO3LoGRREe6bAesDIgR3sg" association="_yXVyMWRREe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUU6cWRREe6bAesDIgR3sg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yQwpEWRREe6bAesDIgR3sg" client="_yCI-QGRREe6bAesDIgR3sg" supplier="_x_47gWRREe6bAesDIgR3sg" contract="_x_47gWRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVwd12RREe6bAesDIgR3sg" name="WorkLoad" specification="_ySlOAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVwd2GRREe6bAesDIgR3sg" name="m" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVwd2WRREe6bAesDIgR3sg" name="e2e" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVwd2mRREe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVwd22RREe6bAesDIgR3sg" type="_yCI-QGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVwd3GRREe6bAesDIgR3sg" name="WorkLoad" specification="_ySl1EGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVwd3WRREe6bAesDIgR3sg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVwd3mRREe6bAesDIgR3sg" name="m" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVwd32RREe6bAesDIgR3sg" name="e2e" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVwd4GRREe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVwd4WRREe6bAesDIgR3sg" type="_yCI-QGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVwd4mRREe6bAesDIgR3sg" name="setDefaultParameters" specification="_yCKzcGRREe6bAesDIgR3sg">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVwd42RREe6bAesDIgR3sg" name="getE2e" specification="_yCKzcWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVwd5GRREe6bAesDIgR3sg" type="_ySEQoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVwd5WRREe6bAesDIgR3sg" name="getIntForFlowNames" specification="_yCLagGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVwd5mRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVwd52RREe6bAesDIgR3sg" name="getName" specification="_yCLagmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVwd6GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVwd6WRREe6bAesDIgR3sg" name="setMinPacketReceptionRate" specification="_ySmcIGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVwd6mRREe6bAesDIgR3sg" name="minPacketReceptionRate" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVwd62RREe6bAesDIgR3sg" name="getMaxPhase" specification="_yCMBkGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVwd7GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxr8GRREe6bAesDIgR3sg" name="getMinPeriod" specification="_yCMBkmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxr8WRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxr8mRREe6bAesDIgR3sg" name="setE2e" specification="_ySmcImRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxr82RREe6bAesDIgR3sg" name="e2e" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxr9GRREe6bAesDIgR3sg" name="setIntForFlowNames" specification="_yCMBlGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxr9WRREe6bAesDIgR3sg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxr9mRREe6bAesDIgR3sg" name="setName" specification="_yCMooWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxr92RREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxr-GRREe6bAesDIgR3sg" name="setNodeChannel" specification="_yCNPsGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxr-WRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVxr-mRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxr-2RREe6bAesDIgR3sg" name="getNodeChannel" specification="_yCNPs2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxr_GRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVxr_WRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxr_mRREe6bAesDIgR3sg" name="addFlow" specification="_yCN2wWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxr_2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxsAGRREe6bAesDIgR3sg" name="isIntForNodeNames" specification="_yCN2w2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxsAWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxsAmRREe6bAesDIgR3sg" name="isIntForFlowNames" specification="_yCOd0GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxsA2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxsBGRREe6bAesDIgR3sg" name="addNodeToFlow" specification="_yCOd0mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxsBWRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVxsBmRREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxsB2RREe6bAesDIgR3sg" name="getFlowPriority" specification="_yCPE4WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxsCGRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVxsCWRREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVxsCmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxsC2RREe6bAesDIgR3sg" name="setFlowPriority" specification="_yCPr8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxsDGRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVxsDWRREe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxsDmRREe6bAesDIgR3sg" name="setFlowPeriod" specification="_yCPr82RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxsD2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVxsEGRREe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxsEWRREe6bAesDIgR3sg" name="setFlowDeadline" specification="_yCPr9mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxsEmRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVxsE2RREe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxsFGRREe6bAesDIgR3sg" name="setFlowPhase" specification="_yCQTAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxsFWRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVxsFmRREe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxsF2RREe6bAesDIgR3sg" name="getFlowIndex" specification="_yCQTA2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxsGGRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVxsGWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVxsGmRREe6bAesDIgR3sg" name="getFlowPriority" specification="_yCQTBmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVxsG2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVxsHGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVy6EGRREe6bAesDIgR3sg" name="getFlowPeriod" specification="_yCQ6EWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVy6EWRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVy6EmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVy6E2RREe6bAesDIgR3sg" name="getFlowDeadline" specification="_yCQ6FGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVy6FGRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVy6FWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVy6FmRREe6bAesDIgR3sg" name="getFlowPhase" specification="_yCQ6F2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVy6F2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVy6GGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVy6GWRREe6bAesDIgR3sg" name="getFlowTxAttemptsPerLink" specification="_yCRhIWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVy6GmRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVy6G2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVy6HGRREe6bAesDIgR3sg" name="setFlowsInPriorityOrder" specification="_yCRhJGRREe6bAesDIgR3sg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVy6HWRREe6bAesDIgR3sg" name="setFlowsInDMorder" specification="_yCRhJWRREe6bAesDIgR3sg">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVy6HmRREe6bAesDIgR3sg" name="setFlowsInRMorder" specification="_yCRhJmRREe6bAesDIgR3sg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVy6H2RREe6bAesDIgR3sg" name="setFlowsInRealTimeHARTorder" specification="_yCSIMGRREe6bAesDIgR3sg">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVzhIGRREe6bAesDIgR3sg" name="finalizeCurrentFlow" specification="_yCSIMWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVzhIWRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVzhImRREe6bAesDIgR3sg" name="nextReleaseTime" specification="_yCSIM2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVzhI2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVzhJGRREe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVzhJWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVzhJmRREe6bAesDIgR3sg" name="nextAbsoluteDeadline" specification="_yCSvQGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVzhJ2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVzhKGRREe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVzhKWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVzhKmRREe6bAesDIgR3sg" name="finalizeFlowWithE2eParameters" specification="_yCSvRGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVzhK2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVzhLGRREe6bAesDIgR3sg" name="finalizeFlowWithFixedFaultTolerance" specification="_yCSvRmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVzhLWRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yVzhLmRREe6bAesDIgR3sg" name="getFixedTxPerLinkAndTotalTxCost" specification="_yQx3MGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yVzhL2RREe6bAesDIgR3sg" name="flow" type="_yDJq4GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yVzhMGRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV0IMGRREe6bAesDIgR3sg" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_ySnDMWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV0IMWRREe6bAesDIgR3sg" name="flow" type="_yDJq4GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV0IMmRREe6bAesDIgR3sg" name="e2e" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV0IM2RREe6bAesDIgR3sg" name="M" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV0INGRREe6bAesDIgR3sg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV0INWRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
                                                                                       // to&#xD;
                                                                                       // handle&#xD;
                                                                                       // rounding&#xD;
                                                                                       // error&#xD;
                                                                                       // when&#xD;
                                                                                       // e2e ==&#xD;
                                                                                       // 1.0&#xD;
 // Now compute reliability of packet reaching each node in the given time slot&#xD;
 // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
 // each row is a time slot, stating at time 0&#xD;
 // each column represents the reliability of the packet reaching that node at the&#xD;
 // current time slot (i.e., the row it is in)&#xD;
 // will add rows as we compute reliabilities until the final reliability is reached&#xD;
 // for all nodes.&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end&#xD;
                                                                       // when the 2e2&#xD;
                                                                       // reliability metrix is&#xD;
                                                                       // met, initially the&#xD;
                                                                       // state is not met and&#xD;
                                                                       // will be 0 with this&#xD;
                                                                       // statement&#xD;
 var timeSlot = 0; // start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
                                     // we don't know how long this schedule window will last&#xD;
   var prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would&#xD;
                                                                                            // be&#xD;
                                                                                            // reliabilityWindow[timeSlot]&#xD;
                                                                                            // if&#xD;
                                                                                            // working&#xD;
                                                                                            // through&#xD;
                                                                                            // a&#xD;
                                                                                            // schedule&#xD;
   // Now use each flow:src->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
                                                                          // node in the flow and&#xD;
                                                                          // update the sates for&#xD;
                                                                          // each link (i.e.,&#xD;
                                                                          // sink->src pair)&#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
                                                                                // until PrevSnk&#xD;
                                                                                // state > e2e to&#xD;
                                                                                // ensure next&#xD;
                                                                                // node reaches&#xD;
                                                                                // target E2E BUT&#xD;
                                                                                // skip if no&#xD;
                                                                                // chance of&#xD;
                                                                                // success (i.e.,&#xD;
                                                                                // source doesn't&#xD;
                                                                                // have packet)&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
                                                                               // continue&#xD;
                                                                               // attempting to&#xD;
                                                                               // Tx, so update&#xD;
                                                                               // current state&#xD;
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
                                        // next node and record the reliability met&#xD;
     }&#xD;
&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities&#xD;
                                                                                           // are&#xD;
                                                                                           // non-decreasing&#xD;
                                                                                           // so&#xD;
                                                                                           // update&#xD;
                                                                                           // if&#xD;
                                                                                           // we&#xD;
                                                                                           // were&#xD;
                                                                                           // higher&#xD;
                                                                                           // by&#xD;
                                                                                           // carring&#xD;
                                                                                           // old&#xD;
                                                                                           // value&#xD;
                                                                                           // forward&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry&#xD;
                                                                                       // forward&#xD;
                                                                                       // the&#xD;
                                                                                       // previous&#xD;
                                                                                       // state&#xD;
                                                                                       // for the&#xD;
                                                                                       // src&#xD;
                                                                                       // node,&#xD;
                                                                                       // which&#xD;
                                                                                       // may get&#xD;
                                                                                       // over&#xD;
                                                                                       // written&#xD;
                                                                                       // later&#xD;
                                                                                       // by&#xD;
                                                                                       // another&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in this&#xD;
                                                                                       // slot&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV0INmRREe6bAesDIgR3sg" name="getNodeNamesOrderedAlphabetically" specification="_yCTWUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV0IN2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yV0IOGRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV0IOWRREe6bAesDIgR3sg" name="getFlow" specification="_yCTWVGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV0IOmRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV0IO2RREe6bAesDIgR3sg" type="_yDJq4GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV0IPGRREe6bAesDIgR3sg" name="getFlowNames" specification="_yCT9YWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV0IPWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yV0IPmRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV0IP2RREe6bAesDIgR3sg" name="getNodeIndex" specification="_yCT9ZWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV0IQGRREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV0IQWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV0vQGRREe6bAesDIgR3sg" name="getNodesInFlow" specification="_yCUkcmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV0vQWRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV0vQmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yV0vQ2RREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV0vRGRREe6bAesDIgR3sg" name="getHyperPeriod" specification="_yCVLgGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV0vRWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV0vRmRREe6bAesDIgR3sg" name="getTotalTxAttemptsInFlow" specification="_yCVLgmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV0vR2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV0vSGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV0vSWRREe6bAesDIgR3sg" name="getNumTxAttemptsPerLink" specification="_yCVykGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV0vSmRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV0vS2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yV0vTGRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV0vTWRREe6bAesDIgR3sg" name="addEdge" specification="_yQzFUWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV0vTmRREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV0vT2RREe6bAesDIgR3sg" name="edge" type="_x-zWYmRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV0vUGRREe6bAesDIgR3sg" name="maxFlowLength" specification="_yCVylWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV0vUWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yCKzcGRREe6bAesDIgR3sg" name="setDefaultParameters" visibility="private" method="_yVwd4mRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yCKzcWRREe6bAesDIgR3sg" name="getE2e" method="_yVwd42RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWNw1mRREe6bAesDIgR3sg">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySl1GGRREe6bAesDIgR3sg" type="_ySEQoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCLagGRREe6bAesDIgR3sg" name="getIntForFlowNames" method="_yVwd5WRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWNw12RREe6bAesDIgR3sg">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCLagWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCLagmRREe6bAesDIgR3sg" name="getName" method="_yVwd52RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWNw2GRREe6bAesDIgR3sg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCLag2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCMBkGRREe6bAesDIgR3sg" name="getMaxPhase" method="_yVwd62RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWOX4GRREe6bAesDIgR3sg">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCMBkWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCMBkmRREe6bAesDIgR3sg" name="getMinPeriod" method="_yVxr8GRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWOX4WRREe6bAesDIgR3sg">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCMBk2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCMBlGRREe6bAesDIgR3sg" name="setIntForFlowNames" method="_yVxr9GRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWOX42RREe6bAesDIgR3sg">
                  <body>The intForFlowNames to set.&#xD;
   * @param intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCMooGRREe6bAesDIgR3sg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCMooWRREe6bAesDIgR3sg" name="setName" method="_yVxr9mRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWOX5GRREe6bAesDIgR3sg">
                  <body>The name to set.&#xD;
   * @param name</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCMoomRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCNPsGRREe6bAesDIgR3sg" name="setNodeChannel" method="_yVxr-GRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWOX5WRREe6bAesDIgR3sg">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCNPsWRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCNPsmRREe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCNPs2RREe6bAesDIgR3sg" name="getNodeChannel" method="_yVxr-2RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWOX5mRREe6bAesDIgR3sg">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCNPtGRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCN2wGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCN2wWRREe6bAesDIgR3sg" name="addFlow" method="_yVxr_mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCN2wmRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCN2w2RREe6bAesDIgR3sg" name="isIntForNodeNames" method="_yVxsAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCN2xGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCOd0GRREe6bAesDIgR3sg" name="isIntForFlowNames" method="_yVxsAmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCOd0WRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCOd0mRREe6bAesDIgR3sg" name="addNodeToFlow" method="_yVxsBGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCOd02RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCPE4GRREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCPE4WRREe6bAesDIgR3sg" name="getFlowPriority" method="_yVxsB2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCPE4mRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCPE42RREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCPE5GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCPr8GRREe6bAesDIgR3sg" name="setFlowPriority" method="_yVxsC2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCPr8WRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCPr8mRREe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCPr82RREe6bAesDIgR3sg" name="setFlowPeriod" method="_yVxsDmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCPr9GRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCPr9WRREe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCPr9mRREe6bAesDIgR3sg" name="setFlowDeadline" method="_yVxsEWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCPr92RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCPr-GRREe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCQTAGRREe6bAesDIgR3sg" name="setFlowPhase" method="_yVxsFGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCQTAWRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCQTAmRREe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCQTA2RREe6bAesDIgR3sg" name="getFlowIndex" method="_yVxsF2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCQTBGRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCQTBWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCQTBmRREe6bAesDIgR3sg" name="getFlowPriority" method="_yVxsGmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCQTB2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCQ6EGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCQ6EWRREe6bAesDIgR3sg" name="getFlowPeriod" method="_yVy6EGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCQ6EmRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCQ6E2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCQ6FGRREe6bAesDIgR3sg" name="getFlowDeadline" method="_yVy6E2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCQ6FWRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCQ6FmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCQ6F2RREe6bAesDIgR3sg" name="getFlowPhase" method="_yVy6FmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCQ6GGRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCRhIGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCRhIWRREe6bAesDIgR3sg" name="getFlowTxAttemptsPerLink" method="_yVy6GWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCRhImRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCRhI2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCRhJGRREe6bAesDIgR3sg" name="setFlowsInPriorityOrder" method="_yVy6HGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWO-8GRREe6bAesDIgR3sg">
                  <body>&#xD;
  * This collects the Flows in a list format from the FlowMap,&#xD;
  * then sorts by a secondary key via index,&#xD;
  * then sorts by priority order.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yCRhJWRREe6bAesDIgR3sg" name="setFlowsInDMorder" method="_yVy6HWRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yCRhJmRREe6bAesDIgR3sg" name="setFlowsInRMorder" method="_yVy6HmRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yCSIMGRREe6bAesDIgR3sg" name="setFlowsInRealTimeHARTorder" method="_yVy6H2RREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yCSIMWRREe6bAesDIgR3sg" name="finalizeCurrentFlow" method="_yVzhIGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCSIMmRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCSIM2RREe6bAesDIgR3sg" name="nextReleaseTime" method="_yVzhImRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWO-8WRREe6bAesDIgR3sg">
                  <body>&#xD;
  * Updates the LastUpdateTime and NextReleaseTime. Returns the next release Time at&#xD;
  * or after currentTime.&#xD;
  * @param flowName&#xD;
  * @param currentTime&#xD;
  * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCSINGRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCSINWRREe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCSINmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCSvQGRREe6bAesDIgR3sg" name="nextAbsoluteDeadline" method="_yVzhJmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWO-8mRREe6bAesDIgR3sg">
                  <body>&#xD;
  * Combines the release time for the schedule and the next deadline after currentTime&#xD;
  * @param flowName is past to var flow&#xD;
  * @param flow is used to hold getFlow(flowName)&#xD;
  * @param currentTime is used to set the LastUpdateTime and NextReleaseTime&#xD;
  * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCSvQWRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCSvQmRREe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCSvQ2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCSvRGRREe6bAesDIgR3sg" name="finalizeFlowWithE2eParameters" visibility="private" method="_yVzhKmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCSvRWRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCSvRmRREe6bAesDIgR3sg" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_yVzhLGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCSvR2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCTWUGRREe6bAesDIgR3sg" name="getNodeNamesOrderedAlphabetically" method="_yV0INmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCTWUWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yCTWUmRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCTWVGRREe6bAesDIgR3sg" name="getFlow" visibility="private" method="_yV0IOWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCT9YGRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQzFUGRREe6bAesDIgR3sg" type="_yDJq4GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCT9YWRREe6bAesDIgR3sg" name="getFlowNames" method="_yV0IPGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCT9YmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yCT9Y2RREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCT9ZWRREe6bAesDIgR3sg" name="getNodeIndex" method="_yV0IP2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCUkcGRREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCUkcWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCUkcmRREe6bAesDIgR3sg" name="getNodesInFlow" method="_yV0vQGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWO-82RREe6bAesDIgR3sg">
                  <body>&#xD;
  * get the flow node for requested Flow and then loop through the&#xD;
  * nodes in the flow to create an array of the node names in&#xD;
  * the same order as they exist in the flow specification (i.e., Graph file)&#xD;
  * @param flowName used to pass the node list to flow&#xD;
  * @param flow used to continue along the node list&#xD;
  * @return nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCUkc2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCUkdGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yCUkdWRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCVLgGRREe6bAesDIgR3sg" name="getHyperPeriod" method="_yV0vRGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWO-9GRREe6bAesDIgR3sg">
                  <body>*Calculates the HyperPeriod which is the LCM of all flows.&#xD;
   * &#xD;
   * @return hyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCVLgWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCVLgmRREe6bAesDIgR3sg" name="getTotalTxAttemptsInFlow" method="_yV0vRmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCVLg2RREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCVLhGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCVykGRREe6bAesDIgR3sg" name="getNumTxAttemptsPerLink" method="_yV0vSWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWO-9WRREe6bAesDIgR3sg">
                  <body>&#xD;
   * @param flowName&#xD;
   * @return Array of integers that represents the transmission attempts</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCVykWRREe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCVykmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yCVyk2RREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCVylWRREe6bAesDIgR3sg" name="maxFlowLength" method="_yV0vUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCVylmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQx3MGRREe6bAesDIgR3sg" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_yVzhLmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQx3MWRREe6bAesDIgR3sg" name="flow" type="_yDJq4GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySnDMGRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQzFUWRREe6bAesDIgR3sg" name="addEdge" method="_yV0vTWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQzFUmRREe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQzFU2RREe6bAesDIgR3sg" name="edge" type="_x-zWYmRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySlOAGRREe6bAesDIgR3sg" name="WorkLoad" visibility="package" method="_yVwd12RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_ySlOBGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySlOBWRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWNw1GRREe6bAesDIgR3sg">
                  <body>&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  *</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySlOAWRREe6bAesDIgR3sg" name="m" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySlOAmRREe6bAesDIgR3sg" name="e2e" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySlOA2RREe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySlOBmRREe6bAesDIgR3sg" type="_yCI-QGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySl1EGRREe6bAesDIgR3sg" name="WorkLoad" visibility="package" method="_yVwd3GRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_ySl1FWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySl1FmRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWNw1WRREe6bAesDIgR3sg">
                  <body>*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySl1EWRREe6bAesDIgR3sg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySl1EmRREe6bAesDIgR3sg" name="m" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySl1E2RREe6bAesDIgR3sg" name="e2e" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySl1FGRREe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySl1F2RREe6bAesDIgR3sg" type="_yCI-QGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySmcIGRREe6bAesDIgR3sg" name="setMinPacketReceptionRate" method="_yVwd6WRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWNw2WRREe6bAesDIgR3sg">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySmcIWRREe6bAesDIgR3sg" name="minPacketReceptionRate" type="_ySEQoGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySmcImRREe6bAesDIgR3sg" name="setE2e" method="_yVxr8mRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWOX4mRREe6bAesDIgR3sg">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySmcI2RREe6bAesDIgR3sg" name="e2e" type="_ySEQoGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySnDMWRREe6bAesDIgR3sg" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_yV0IMGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySnDMmRREe6bAesDIgR3sg" name="flow" type="_yDJq4GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySnDM2RREe6bAesDIgR3sg" name="e2e" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySnDNGRREe6bAesDIgR3sg" name="M" type="_ySEQoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySnDNWRREe6bAesDIgR3sg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySnqQWRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yCb5MGRREe6bAesDIgR3sg" name="WorkLoadDescription">
              <ownedComment xmi:id="_yWPmAGRREe6bAesDIgR3sg">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
Modified by srgoddard&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_yQ3Ww2RREe6bAesDIgR3sg" general="_yAq-oGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUWIkGRREe6bAesDIgR3sg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUWIkWRREe6bAesDIgR3sg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUWvoGRREe6bAesDIgR3sg" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUWvoWRREe6bAesDIgR3sg" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUWvomRREe6bAesDIgR3sg" name="description" visibility="private" type="_x-xhMGRREe6bAesDIgR3sg" association="_yXWZQWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUWvpGRREe6bAesDIgR3sg" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUWvpmRREe6bAesDIgR3sg" name="fm" visibility="private" type="_x-6rIGRREe6bAesDIgR3sg" association="_yXXnYGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUXWsWRREe6bAesDIgR3sg" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV1WUGRREe6bAesDIgR3sg" name="WorkLoadDescription" specification="_yCcgQGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV1WUWRREe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV1WUmRREe6bAesDIgR3sg" type="_yCb5MGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV19YGRREe6bAesDIgR3sg" name="visualization" specification="_yCcgRWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV19YWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV19YmRREe6bAesDIgR3sg" name="fileVisualization" specification="_yCdHU2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV19Y2RREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV19ZGRREe6bAesDIgR3sg" name="toString" specification="_yCduYGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV19ZWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV19ZmRREe6bAesDIgR3sg" name="initialize" specification="_yCduZWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV19Z2RREe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV19aGRREe6bAesDIgR3sg" name="main" specification="_yCeVcGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV19aWRREe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yV19amRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoadDescription test = new WorkLoadDescription(&quot;stresstest.txt&quot;);&#xD;
	String [] arr = new String [20];//Primary storage of information&#xD;
	String temp = new String(); //A temporary string to use for information transfer&#xD;
	int trackArraySize = 0; //Used to track the positions in an Array that has information stored.&#xD;
	//This is where the information is put into an array.&#xD;
	Scanner input = new Scanner(test.toString());//Used to process information from test to arr&#xD;
	while (input.hasNextLine()) {&#xD;
		temp = input.nextLine();&#xD;
		temp = temp.replace(&quot;}&quot;, &quot; &quot;);&#xD;
		temp = temp.replace(&quot;{&quot;, &quot; &quot;);&#xD;
		arr[trackArraySize]= temp;&#xD;
		trackArraySize++;&#xD;
	}&#xD;
	input.close();&#xD;
	//The following is where the information is sorted reverse alphabetically.&#xD;
	for(int i=1; i&lt;trackArraySize;i++) {&#xD;
		for(int j=i+1; j&lt;trackArraySize; j++) {&#xD;
			if(arr[j].compareTo(arr[i]) > 0) {&#xD;
				temp = arr[i];&#xD;
				arr[i] = arr[j];&#xD;
				arr[j] = temp;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
	//The following is to print out the sorted array&#xD;
	System.out.println(arr[0]);&#xD;
	for(int i=1; i&lt;trackArraySize-1; i++) {&#xD;
		System.out.println(&quot;Flow &quot; + i + &quot;: &quot; + arr[i]);&#xD;
	}&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yCcgQGRREe6bAesDIgR3sg" name="WorkLoadDescription" visibility="package" method="_yV1WUGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yCcgQmRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yCcgQ2RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yCcgQWRREe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yCcgRGRREe6bAesDIgR3sg" type="_yCb5MGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCcgRWRREe6bAesDIgR3sg" name="visualization" method="_yV19YGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQ3WwWRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCdHU2RREe6bAesDIgR3sg" name="fileVisualization" method="_yV19YmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQ3WwmRREe6bAesDIgR3sg" type="_x-xhMGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCduYGRREe6bAesDIgR3sg" name="toString" method="_yV19ZGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCduYWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCduZWRREe6bAesDIgR3sg" name="initialize" visibility="private" method="_yV19ZmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCduZmRREe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCeVcGRREe6bAesDIgR3sg" name="main" isStatic="true" method="_yV19aGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCeVcWRREe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yCeVcmRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yCfjkGRREe6bAesDIgR3sg" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_yWQNEGRREe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ySqGgGRREe6bAesDIgR3sg" general="_yPQNM2RREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUXWsmRREe6bAesDIgR3sg" name="workLoad" visibility="package" type="_yCI-QGRREe6bAesDIgR3sg" association="_yXXnY2RREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUX9wWRREe6bAesDIgR3sg" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV19a2RREe6bAesDIgR3sg" name="WorkLoadListener" specification="_yQ4k4GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV19bGRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV19bWRREe6bAesDIgR3sg" type="_yCfjkGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV3LgGRREe6bAesDIgR3sg" name="buildNodesAndFlows" specification="_yQ4k5WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV3LgWRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV3ykGRREe6bAesDIgR3sg" name="testPrintStdOut" specification="_yCgKoGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV3ykWRREe6bAesDIgR3sg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV4ZoGRREe6bAesDIgR3sg" name="enterWarpName" specification="_yQ5L8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV4ZoWRREe6bAesDIgR3sg" name="ctx" type="_yPRbV2RREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV4ZomRREe6bAesDIgR3sg" name="enterFlowName" specification="_yQ5zAGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV4Zo2RREe6bAesDIgR3sg" name="ctx" type="_yPTQhGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV4ZpGRREe6bAesDIgR3sg" name="exitPriority" specification="_yQ6aEWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV4ZpWRREe6bAesDIgR3sg" name="ctx" type="_yQ5zBWRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV4ZpmRREe6bAesDIgR3sg" name="exitPeriod" specification="_yQ7BIWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV4Zp2RREe6bAesDIgR3sg" name="ctx" type="_yQ6aFmRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV4ZqGRREe6bAesDIgR3sg" name="exitDeadline" specification="_yQ7oMmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV4ZqWRREe6bAesDIgR3sg" name="ctx" type="_yQ7oMGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV4ZqmRREe6bAesDIgR3sg" name="exitPhase" specification="_yQ82UGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV4Zq2RREe6bAesDIgR3sg" name="ctx" type="_yQ8PQmRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV4ZrGRREe6bAesDIgR3sg" name="exitSrcNode" specification="_yQ9dYmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV4ZrWRREe6bAesDIgR3sg" name="ctx" type="_yPT3lGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV4ZrmRREe6bAesDIgR3sg" name="exitSnkNode" specification="_yQ-EcmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV4Zr2RREe6bAesDIgR3sg" name="ctx" type="_yPUepmRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV4ZsGRREe6bAesDIgR3sg" name="exitFlow" specification="_yQ-rg2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV4ZsWRREe6bAesDIgR3sg" name="ctx" type="_yPVswGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yCgKoGRREe6bAesDIgR3sg" name="testPrintStdOut" method="_yV3ykGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCgKoWRREe6bAesDIgR3sg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ4k4GRREe6bAesDIgR3sg" name="WorkLoadListener" visibility="private" method="_yV19a2RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yQ4k4mRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQ4k42RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yQ4k4WRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yQ4k5GRREe6bAesDIgR3sg" type="_yCfjkGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ4k5WRREe6bAesDIgR3sg" name="buildNodesAndFlows" isStatic="true" method="_yV3LgGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQ4k5mRREe6bAesDIgR3sg" name="workLoad" type="_yCI-QGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ5L8GRREe6bAesDIgR3sg" name="enterWarpName" method="_yV4ZoGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQ5L8WRREe6bAesDIgR3sg" name="ctx" type="_yPRbV2RREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ5zAGRREe6bAesDIgR3sg" name="enterFlowName" method="_yV4ZomRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQ5zAWRREe6bAesDIgR3sg" name="ctx" type="_yPTQhGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ6aEWRREe6bAesDIgR3sg" name="exitPriority" method="_yV4ZpGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQ6aEmRREe6bAesDIgR3sg" name="ctx" type="_yQ5zBWRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ7BIWRREe6bAesDIgR3sg" name="exitPeriod" method="_yV4ZpmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQ7BImRREe6bAesDIgR3sg" name="ctx" type="_yQ6aFmRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ7oMmRREe6bAesDIgR3sg" name="exitDeadline" method="_yV4ZqGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQ7oM2RREe6bAesDIgR3sg" name="ctx" type="_yQ7oMGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ82UGRREe6bAesDIgR3sg" name="exitPhase" method="_yV4ZqmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQ82UWRREe6bAesDIgR3sg" name="ctx" type="_yQ8PQmRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ9dYmRREe6bAesDIgR3sg" name="exitSrcNode" method="_yV4ZrGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQ9dY2RREe6bAesDIgR3sg" name="ctx" type="_yPT3lGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ-EcmRREe6bAesDIgR3sg" name="exitSnkNode" method="_yV4ZrmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQ-Ec2RREe6bAesDIgR3sg" name="ctx" type="_yPUepmRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ-rg2RREe6bAesDIgR3sg" name="exitFlow" method="_yV4ZsGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yQ-rhGRREe6bAesDIgR3sg" name="ctx" type="_yPVswGRREe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yCh_0GRREe6bAesDIgR3sg" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_yWQNEWRREe6bAesDIgR3sg">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yUYk0GRREe6bAesDIgR3sg" name="activations" visibility="private" type="_x-PVsGRREe6bAesDIgR3sg" association="_yXYOcWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUYk0mRREe6bAesDIgR3sg" name="workload" visibility="private" type="_yCI-QGRREe6bAesDIgR3sg" association="_yXY1gWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUZL4WRREe6bAesDIgR3sg" name="flows" visibility="protected" type="_yDJq4GRREe6bAesDIgR3sg" association="_yXZckWRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yUZL42RREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yUZL5GRREe6bAesDIgR3sg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yUZL4mRREe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUZL5mRREe6bAesDIgR3sg" name="nodes" visibility="private" type="_x_aaYGRREe6bAesDIgR3sg" association="_yXaqsGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yUZL6GRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yUZL6WRREe6bAesDIgR3sg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yUZL52RREe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUZy8WRREe6bAesDIgR3sg" name="nodeMap" visibility="private" type="_x_fS4GRREe6bAesDIgR3sg" association="_yXb40WRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUZy82RREe6bAesDIgR3sg" name="priorityQueue" visibility="private" type="_x_2fRGRREe6bAesDIgR3sg" association="_yXduAGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUaaAmRREe6bAesDIgR3sg" name="nodeConnectivityMap" visibility="protected" type="_yOv24GRREe6bAesDIgR3sg" association="_yXduA2RREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUboIGRREe6bAesDIgR3sg" name="activationMap" visibility="package" type="_x-_joGRREe6bAesDIgR3sg" association="_yXeVEWRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV5AsGRREe6bAesDIgR3sg" name="Poset" specification="_yRCV4GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV5AsWRREe6bAesDIgR3sg" name="workload" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV5AsmRREe6bAesDIgR3sg" type="_yCh_0GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV5nwGRREe6bAesDIgR3sg" name="getNodeConnectivity" specification="_yCim4GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV5nwWRREe6bAesDIgR3sg" type="_yOv24GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV5nwmRREe6bAesDIgR3sg" name="getNodeNames" specification="_yCjN8WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV5nw2RREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV6O0GRREe6bAesDIgR3sg" name="getNodesNamesOrderedAlphabetically" specification="_yCj1AWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV6O0WRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yV6O0mRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV6O02RREe6bAesDIgR3sg" name="buildPosetOfActivations" specification="_yCkcE2RREe6bAesDIgR3sg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV6O1GRREe6bAesDIgR3sg" name="createEdgeLists" specification="_yCkcFGRREe6bAesDIgR3sg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV6O1WRREe6bAesDIgR3sg" name="createConflictLists" specification="_yCkcFWRREe6bAesDIgR3sg">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV614GRREe6bAesDIgR3sg" name="createGlobalConflictLists" specification="_yCkcFmRREe6bAesDIgR3sg">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV614WRREe6bAesDIgR3sg" name="createLocalConflictLists" specification="_yCkcF2RREe6bAesDIgR3sg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV614mRREe6bAesDIgR3sg" name="findCoordinator" specification="_ySr7sGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV6142RREe6bAesDIgR3sg" name="nodesInFlow" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV615GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV615WRREe6bAesDIgR3sg" name="buildTxArray" specification="_ySsiwGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV615mRREe6bAesDIgR3sg" name="nodesInFlow" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV6152RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yV616GRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV616WRREe6bAesDIgR3sg" name="createInitialActivations" specification="_yClDIGRREe6bAesDIgR3sg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV616mRREe6bAesDIgR3sg" name="getMaxTx" specification="_yRC88GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV6162RREe6bAesDIgR3sg" name="node" type="_x_aaYGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV617GRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV617WRREe6bAesDIgR3sg" name="getActivation" specification="_yRDkAmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV617mRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV6172RREe6bAesDIgR3sg" name="node" type="_x_aaYGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV618GRREe6bAesDIgR3sg" type="_yDQYkGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV618WRREe6bAesDIgR3sg" name="getHyperPeriod" specification="_yClDIWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV618mRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV7c8GRREe6bAesDIgR3sg" name="getMaxPhase" specification="_yClqMWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV7c8WRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV7c8mRREe6bAesDIgR3sg" name="orderActivations" specification="_yClqM2RREe6bAesDIgR3sg">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV7c82RREe6bAesDIgR3sg" name="getNextActivation" specification="_yClqNGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV7c9GRREe6bAesDIgR3sg" type="_yDQYkGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV7c9WRREe6bAesDIgR3sg" name="addActivation" specification="_yRELEWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV7c9mRREe6bAesDIgR3sg" name="activation" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV7c92RREe6bAesDIgR3sg" name="findBaseStation" specification="_yClqNWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV7c-GRREe6bAesDIgR3sg" type="_x_aaYGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yCim4GRREe6bAesDIgR3sg" name="getNodeConnectivity" visibility="private" method="_yV5nwGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySrUoGRREe6bAesDIgR3sg" type="_yOv24GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCjN8WRREe6bAesDIgR3sg" name="getNodeNames" method="_yV5nwmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySrUoWRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCj1AWRREe6bAesDIgR3sg" name="getNodesNamesOrderedAlphabetically" method="_yV6O0GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yCkcEGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yCkcEWRREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCkcE2RREe6bAesDIgR3sg" name="buildPosetOfActivations" method="_yV6O02RREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yCkcFGRREe6bAesDIgR3sg" name="createEdgeLists" visibility="private" method="_yV6O1GRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yCkcFWRREe6bAesDIgR3sg" name="createConflictLists" visibility="private" method="_yV6O1WRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yCkcFmRREe6bAesDIgR3sg" name="createGlobalConflictLists" visibility="private" method="_yV614GRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yCkcF2RREe6bAesDIgR3sg" name="createLocalConflictLists" visibility="private" method="_yV614WRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yClDIGRREe6bAesDIgR3sg" name="createInitialActivations" visibility="private" method="_yV616WRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yClDIWRREe6bAesDIgR3sg" name="getHyperPeriod" method="_yV618WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yClqMGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yClqMWRREe6bAesDIgR3sg" name="getMaxPhase" method="_yV7c8GRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yClqMmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yClqM2RREe6bAesDIgR3sg" name="orderActivations" method="_yV7c8mRREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yClqNGRREe6bAesDIgR3sg" name="getNextActivation" method="_yV7c82RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWQNFGRREe6bAesDIgR3sg">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_yRELEGRREe6bAesDIgR3sg" type="_yDQYkGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yClqNWRREe6bAesDIgR3sg" name="findBaseStation" visibility="protected" method="_yV7c92RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWQ0IGRREe6bAesDIgR3sg">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_yRELE2RREe6bAesDIgR3sg" type="_x_aaYGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRCV4GRREe6bAesDIgR3sg" name="Poset" visibility="package" method="_yV5AsGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yRCV4mRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yRCV42RREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWQNEmRREe6bAesDIgR3sg">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_yRCV4WRREe6bAesDIgR3sg" name="workload" type="_yCI-QGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRCV5GRREe6bAesDIgR3sg" type="_yCh_0GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRC88GRREe6bAesDIgR3sg" name="getMaxTx" visibility="private" method="_yV616mRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRDkAGRREe6bAesDIgR3sg" name="node" type="_x_aaYGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRDkAWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRDkAmRREe6bAesDIgR3sg" name="getActivation" visibility="private" method="_yV617WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRDkA2RREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRDkBGRREe6bAesDIgR3sg" name="node" type="_x_aaYGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRDkBWRREe6bAesDIgR3sg" type="_yDQYkGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRELEWRREe6bAesDIgR3sg" name="addActivation" method="_yV7c9WRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWQNFWRREe6bAesDIgR3sg">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_yRELEmRREe6bAesDIgR3sg" name="activation" type="_yDQYkGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySr7sGRREe6bAesDIgR3sg" name="findCoordinator" visibility="protected" method="_yV614mRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWQNE2RREe6bAesDIgR3sg">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySr7sWRREe6bAesDIgR3sg" name="nodesInFlow" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySr7smRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySsiwGRREe6bAesDIgR3sg" name="buildTxArray" visibility="private" method="_yV615WRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ySsiwWRREe6bAesDIgR3sg" name="nodesInFlow" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_ySsiwmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ySsiw2RREe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yDJq4GRREe6bAesDIgR3sg" name="Flow">
              <ownedComment xmi:id="_yWQ0IWRREe6bAesDIgR3sg">
                <body>&lt;p> This class is for representing network flows.&#xD;
		Network flows are used to model the communication patterns between other flows within the network.&#xD;
		Each flow has the following properties: priority, index, and values that show if data has been transmitted reliably.&#xD;
		Flows are compared based off their priority and contain nodes and edges&#xD;
		&#xD;
&#xD;
@author sgoddard&#xD;
@author Frank Forliano (creating comments, for JavaDoc)</body>
              </ownedComment>
              <generalization xmi:id="_yRJDkmRREe6bAesDIgR3sg" general="_yBQNcGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUc2QGRREe6bAesDIgR3sg" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUddUGRREe6bAesDIgR3sg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUddUWRREe6bAesDIgR3sg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUeEYGRREe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUeEYWRREe6bAesDIgR3sg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUeEYmRREe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUeEY2RREe6bAesDIgR3sg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUercGRREe6bAesDIgR3sg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUercWRREe6bAesDIgR3sg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUercmRREe6bAesDIgR3sg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUerc2RREe6bAesDIgR3sg" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUerdGRREe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUerdWRREe6bAesDIgR3sg" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yUfSgGRREe6bAesDIgR3sg" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUfSgmRREe6bAesDIgR3sg" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUf5kWRREe6bAesDIgR3sg" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yUf5k2RREe6bAesDIgR3sg" name="nodes" visibility="package" type="_yO3LoGRREe6bAesDIgR3sg" association="_yXe8IWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUggomRREe6bAesDIgR3sg" name="linkTxAndTotalCost" visibility="package" type="_yO3LoGRREe6bAesDIgR3sg" association="_yXgKQGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUhuwGRREe6bAesDIgR3sg" name="edges" visibility="package" type="_yO3LoGRREe6bAesDIgR3sg" association="_yXhYYWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUiV0WRREe6bAesDIgR3sg" name="nodePredecessor" visibility="package" type="_x_aaYGRREe6bAesDIgR3sg" association="_yXimgGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUi84WRREe6bAesDIgR3sg" name="edgePredecessor" visibility="package" type="_x-zWYmRREe6bAesDIgR3sg" association="_yXjNkGRREe6bAesDIgR3sg"/>
              <interfaceRealization xmi:id="_ySuX8GRREe6bAesDIgR3sg" client="_yDJq4GRREe6bAesDIgR3sg" supplier="_yRqA8WRREe6bAesDIgR3sg" contract="_yRqA8WRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV7c-WRREe6bAesDIgR3sg" name="Flow" specification="_yDK5AGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV7c-mRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV7c-2RREe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV7c_GRREe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV7c_WRREe6bAesDIgR3sg" type="_yDJq4GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8EAGRREe6bAesDIgR3sg" name="Flow" specification="_yDK5B2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8EAWRREe6bAesDIgR3sg" type="_yDJq4GRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8EAmRREe6bAesDIgR3sg" name="getInitialPriority" specification="_yDLgEGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8EA2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8EBGRREe6bAesDIgR3sg" name="getIndex" specification="_yDLgEmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8EBWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8EBmRREe6bAesDIgR3sg" name="getNumTxPerLink" specification="_yDLgFGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8EB2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8ECGRREe6bAesDIgR3sg" name="getNodes" specification="_yDLgFmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8ECWRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8ECmRREe6bAesDIgR3sg" name="getEdges" specification="_yDMHIWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8EC2RREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8EDGRREe6bAesDIgR3sg" name="addEdge" specification="_yRGnUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8EDWRREe6bAesDIgR3sg" name="edge" type="_x-zWYmRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8rEGRREe6bAesDIgR3sg" name="addNode" specification="_yRHOYGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8rEWRREe6bAesDIgR3sg" name="node" type="_x_aaYGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8rEmRREe6bAesDIgR3sg" name="getLinkTxAndTotalCost" specification="_yDMuMWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8rE2RREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8rFGRREe6bAesDIgR3sg" name="setInitialPriority" specification="_yDNVQWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8rFWRREe6bAesDIgR3sg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8rFmRREe6bAesDIgR3sg" name="setIndex" specification="_yDNVQ2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8rF2RREe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8rGGRREe6bAesDIgR3sg" name="setNumTxPerLink" specification="_yDNVRWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8rGWRREe6bAesDIgR3sg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8rGmRREe6bAesDIgR3sg" name="setNodes" specification="_ySyCUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8rG2RREe6bAesDIgR3sg" name="nodes" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8rHGRREe6bAesDIgR3sg" name="setLinkTxAndTotalCost" specification="_ySz3gGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8rHWRREe6bAesDIgR3sg" name="linkTxAndTotalCost" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8rHmRREe6bAesDIgR3sg" name="compareTo" specification="_yRH1cGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8rH2RREe6bAesDIgR3sg" name="flow" type="_yDJq4GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV8rIGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV8rIWRREe6bAesDIgR3sg" name="toString" specification="_yDN8UGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV8rImRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yDK5AGRREe6bAesDIgR3sg" name="Flow" visibility="package" method="_yV7c-WRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yDK5BGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yDK5BWRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWQ0ImRREe6bAesDIgR3sg">
                  <body>Constructor that sets name, priority, and index&#xD;
     * @param name The name of the Flow&#xD;
     * @param priority The priority of the Flow	&#xD;
     * @param Integer The flow index number</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDK5AWRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yDK5AmRREe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yDK5A2RREe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yDK5BmRREe6bAesDIgR3sg" type="_yDJq4GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yDK5B2RREe6bAesDIgR3sg" name="Flow" visibility="package" method="_yV8EAGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yDK5CGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yDK5CWRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yWQ0I2RREe6bAesDIgR3sg">
                  <body>The default constructor for Flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDK5CmRREe6bAesDIgR3sg" type="_yDJq4GRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yDLgEGRREe6bAesDIgR3sg" name="getInitialPriority" method="_yV8EAmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWQ0JGRREe6bAesDIgR3sg">
                  <body>Use this to see the flow priority)&#xD;
	 * @return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDLgEWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDLgEmRREe6bAesDIgR3sg" name="getIndex" method="_yV8EBGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWQ0JWRREe6bAesDIgR3sg">
                  <body>Return the value of the index.&#xD;
	 * @param index&#xD;
	 * @return the index (use this to get the index of the list))</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDLgE2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDLgFGRREe6bAesDIgR3sg" name="getNumTxPerLink" method="_yV8EBmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWQ0JmRREe6bAesDIgR3sg">
                  <body>Use to see flow transmissions.&#xD;
	 *  @param numTxPerLink&#xD;
	 * @return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDLgFWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDLgFmRREe6bAesDIgR3sg" name="getNodes" method="_yV8ECGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWQ0J2RREe6bAesDIgR3sg">
                  <body>Returns an ArrayList object of the nodes.&#xD;
	 * @return nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySw0MGRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yDMHIWRREe6bAesDIgR3sg" name="getEdges" method="_yV8ECmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWQ0KGRREe6bAesDIgR3sg">
                  <body>Get the edges from the flow.&#xD;
	 * @param edges &#xD;
	 * @return the nodes (returns an ArrayList object of the edges)</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySw0MWRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yDMuMWRREe6bAesDIgR3sg" name="getLinkTxAndTotalCost" method="_yV8rEmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWQ0K2RREe6bAesDIgR3sg">
                  <body>Returns the link transmission and cost of the value.&#xD;
	 * @return An ArrayList that contains the link transmission and the cost of the value.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySxbQGRREe6bAesDIgR3sg" type="_yO3LoGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yDNVQWRREe6bAesDIgR3sg" name="setInitialPriority" method="_yV8rFGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWRbMGRREe6bAesDIgR3sg">
                  <body>The initialPriority to set.&#xD;
	 * @param initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDNVQmRREe6bAesDIgR3sg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDNVQ2RREe6bAesDIgR3sg" name="setIndex" method="_yV8rFmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWRbMWRREe6bAesDIgR3sg">
                  <body>The index value which needs to be set.&#xD;
	 * @param index</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDNVRGRREe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDNVRWRREe6bAesDIgR3sg" name="setNumTxPerLink" method="_yV8rGGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWRbMmRREe6bAesDIgR3sg">
                  <body>The numTxPerLink to set.&#xD;
	 * @param numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDNVRmRREe6bAesDIgR3sg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDN8UGRREe6bAesDIgR3sg" name="toString" method="_yV8rIWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yDN8UWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRGnUGRREe6bAesDIgR3sg" name="addEdge" method="_yV8EDGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWQ0KWRREe6bAesDIgR3sg">
                  <body>Add an edge to the flow.&#xD;
	 * @param edge The edge which is added to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yRGnUWRREe6bAesDIgR3sg" name="edge" type="_x-zWYmRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRHOYGRREe6bAesDIgR3sg" name="addNode" method="_yV8rEGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWQ0KmRREe6bAesDIgR3sg">
                  <body>Add a node to the flow.&#xD;
	 * @param node The node which is added to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yRHOYWRREe6bAesDIgR3sg" name="node" type="_x_aaYGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRH1cGRREe6bAesDIgR3sg" name="compareTo" method="_yV8rHmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRH1cWRREe6bAesDIgR3sg" name="flow" type="_yDJq4GRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRH1cmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySyCUGRREe6bAesDIgR3sg" name="setNodes" method="_yV8rGmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWRbM2RREe6bAesDIgR3sg">
                  <body>The nodes to set.&#xD;
	 * @param nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySyCUWRREe6bAesDIgR3sg" name="nodes" type="_yO3LoGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySz3gGRREe6bAesDIgR3sg" name="setLinkTxAndTotalCost" method="_yV8rHGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWRbNGRREe6bAesDIgR3sg">
                  <body>The linkTxAndTotalCost to set.&#xD;
	 * @param linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySz3gWRREe6bAesDIgR3sg" name="linkTxAndTotalCost" type="_yO3LoGRREe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yDQYkGRREe6bAesDIgR3sg" name="Activation">
              <generalization xmi:id="_yRS0kGRREe6bAesDIgR3sg" general="_yBQNcGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUlZIGRREe6bAesDIgR3sg" name="coordinators" type="_yO3LoGRREe6bAesDIgR3sg" isReadOnly="true" association="_yXj0oWRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUn1YWRREe6bAesDIgR3sg" name="edges" type="_yO3LoGRREe6bAesDIgR3sg" isReadOnly="true" association="_yXlCwGRREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUpDgWRREe6bAesDIgR3sg" name="additionalScheduleTimes" type="_yO3LoGRREe6bAesDIgR3sg" isReadOnly="true" association="_yXlCw2RREe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_yUqRoGRREe6bAesDIgR3sg" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yUqRoWRREe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yS6lMGRREe6bAesDIgR3sg" client="_yDQYkGRREe6bAesDIgR3sg" supplier="_yRqA8WRREe6bAesDIgR3sg" contract="_yRqA8WRREe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV9SIGRREe6bAesDIgR3sg" name="Activation" specification="_yDQ_oGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV9SIWRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV9SImRREe6bAesDIgR3sg" type="_yDQYkGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV9SI2RREe6bAesDIgR3sg" name="Activation" specification="_yRN8EGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV9SJGRREe6bAesDIgR3sg" name="elem" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV9SJWRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV9SJmRREe6bAesDIgR3sg" type="_yDQYkGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV9SJ2RREe6bAesDIgR3sg" name="clone" specification="_yDRms2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV9SKGRREe6bAesDIgR3sg" type="_yDQYkGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV9SKWRREe6bAesDIgR3sg" name="getEdgesByReleaseTime" specification="_yDSNwmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV9SKmRREe6bAesDIgR3sg" type="_x_2fRGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV9SK2RREe6bAesDIgR3sg" name="getEdgesByLatestReleaseTime" specification="_yDpaIGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV9SLGRREe6bAesDIgR3sg" type="_x_2fRGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV9SLWRREe6bAesDIgR3sg" name="getEdgesByPeriod" specification="_yDpaImRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV9SLmRREe6bAesDIgR3sg" type="_x_2fRGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV95MGRREe6bAesDIgR3sg" name="getEdgesByDeadline" specification="_yDqBMWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV95MWRREe6bAesDIgR3sg" type="_x_2fRGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV95MmRREe6bAesDIgR3sg" name="getEdgesByPriority" specification="_yDqoQWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV95M2RREe6bAesDIgR3sg" type="_x_2fRGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV95NGRREe6bAesDIgR3sg" name="addEdges" specification="_yS8aYGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV95NWRREe6bAesDIgR3sg" name="edges" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV95NmRREe6bAesDIgR3sg" name="addEdge" specification="_yRPKNGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV95N2RREe6bAesDIgR3sg" name="edge" type="_x-zWYmRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV95OGRREe6bAesDIgR3sg" name="increaseEdgePhases" specification="_yDrPUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV95OWRREe6bAesDIgR3sg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV95OmRREe6bAesDIgR3sg" name="updatePriorityAndRelease" specification="_yDrPUmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV95O2RREe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV95PGRREe6bAesDIgR3sg" name="addConflict" specification="_yDr2YGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV95PWRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV95PmRREe6bAesDIgR3sg" name="addConflicts" specification="_yS-PkGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV95P2RREe6bAesDIgR3sg" name="conflicts" type="_yQva8WRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV95QGRREe6bAesDIgR3sg" name="addCoordinator" specification="_yDr2YmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV95QWRREe6bAesDIgR3sg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV95QmRREe6bAesDIgR3sg" name="addCoordinators" specification="_yS_dsGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV95Q2RREe6bAesDIgR3sg" name="coordinators" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV-gQGRREe6bAesDIgR3sg" name="addScheduleTimes" specification="_yTAEwWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV-gQWRREe6bAesDIgR3sg" name="scheduleTime" type="_yO3LoGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV-gQmRREe6bAesDIgR3sg" name="getNextScheduleTime" specification="_yDsdcGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV-gQ2RREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV-gRGRREe6bAesDIgR3sg" type="_yALPZGRREe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV-gRWRREe6bAesDIgR3sg" name="getMatchingEndTime" specification="_yDsdcmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV-gRmRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV-gR2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV-gSGRREe6bAesDIgR3sg" name="getNextStartTime" specification="_yDsddWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV-gSWRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV-gSmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV-gS2RREe6bAesDIgR3sg" name="getNextEndTime" specification="_yDtEgmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV-gTGRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV-gTWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV-gTmRREe6bAesDIgR3sg" name="getNumEdges" specification="_yDtEhWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV-gT2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV-gUGRREe6bAesDIgR3sg" name="compareTo" specification="_yRPxQWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV-gUWRREe6bAesDIgR3sg" name="obj" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV-gUmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV-gU2RREe6bAesDIgR3sg" name="conflictExists" specification="_yRQYU2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV-gVGRREe6bAesDIgR3sg" name="obj" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV-gVWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV-gVmRREe6bAesDIgR3sg" name="canCombine" specification="_yRQYVmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV-gV2RREe6bAesDIgR3sg" name="a2" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV-gWGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV-gWWRREe6bAesDIgR3sg" name="getDelta" specification="_yDtrkGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV-gWmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV_HUGRREe6bAesDIgR3sg" name="getExecutionDuration" specification="_yDtrkmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV_HUWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV_HUmRREe6bAesDIgR3sg" name="getCombinedExecutionDuration" specification="_yRQ_YmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV_HU2RREe6bAesDIgR3sg" name="a2" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yV_HVGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV_HVWRREe6bAesDIgR3sg" name="printAll" specification="_yDtrlGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV_HVmRREe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV_HV2RREe6bAesDIgR3sg" name="printAll" specification="_yDuSoGRREe6bAesDIgR3sg">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV_HWGRREe6bAesDIgR3sg" name="printEdges" specification="_yRQ_ZWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV_HWWRREe6bAesDIgR3sg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yV_HWmRREe6bAesDIgR3sg" name="edges" type="_x_1RIGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yV_HW2RREe6bAesDIgR3sg" name="printEdges" specification="_yRRmcmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yV_HXGRREe6bAesDIgR3sg" name="edges" type="_x_1RIGRREe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yDQ_oGRREe6bAesDIgR3sg" name="Activation" visibility="package" method="_yV9SIGRREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yDRmsGRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yDRmsWRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yDQ_oWRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yDRmsmRREe6bAesDIgR3sg" type="_yDQYkGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yDRms2RREe6bAesDIgR3sg" name="clone" method="_yV9SJ2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yROjJGRREe6bAesDIgR3sg" type="_yDQYkGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yDSNwmRREe6bAesDIgR3sg" name="getEdgesByReleaseTime" method="_yV9SKWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWRbNWRREe6bAesDIgR3sg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yROjJWRREe6bAesDIgR3sg" type="_x_2fRGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yDpaIGRREe6bAesDIgR3sg" name="getEdgesByLatestReleaseTime" method="_yV9SK2RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWRbNmRREe6bAesDIgR3sg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yRPKMGRREe6bAesDIgR3sg" type="_x_2fRGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yDpaImRREe6bAesDIgR3sg" name="getEdgesByPeriod" method="_yV9SLWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWRbN2RREe6bAesDIgR3sg">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_yRPKMWRREe6bAesDIgR3sg" type="_x_2fRGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yDqBMWRREe6bAesDIgR3sg" name="getEdgesByDeadline" method="_yV95MGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWRbOGRREe6bAesDIgR3sg">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_yRPKMmRREe6bAesDIgR3sg" type="_x_2fRGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yDqoQWRREe6bAesDIgR3sg" name="getEdgesByPriority" method="_yV95MmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWRbOWRREe6bAesDIgR3sg">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_yRPKM2RREe6bAesDIgR3sg" type="_x_2fRGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yDrPUGRREe6bAesDIgR3sg" name="increaseEdgePhases" method="_yV95OGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWRbOmRREe6bAesDIgR3sg">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDrPUWRREe6bAesDIgR3sg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDrPUmRREe6bAesDIgR3sg" name="updatePriorityAndRelease" method="_yV95OmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWRbO2RREe6bAesDIgR3sg">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_yDrPU2RREe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDr2YGRREe6bAesDIgR3sg" name="addConflict" method="_yV95PGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yDr2YWRREe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDr2YmRREe6bAesDIgR3sg" name="addCoordinator" method="_yV95QGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yDr2Y2RREe6bAesDIgR3sg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDsdcGRREe6bAesDIgR3sg" name="getNextScheduleTime" method="_yV-gQmRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWSCQWRREe6bAesDIgR3sg">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDsdcWRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRPxQGRREe6bAesDIgR3sg" type="_yALPZGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yDsdcmRREe6bAesDIgR3sg" name="getMatchingEndTime" method="_yV-gRWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWSCQmRREe6bAesDIgR3sg">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDsdc2RREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yDsddGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDsddWRREe6bAesDIgR3sg" name="getNextStartTime" method="_yV-gSGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWSCQ2RREe6bAesDIgR3sg">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDtEgGRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yDtEgWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDtEgmRREe6bAesDIgR3sg" name="getNextEndTime" method="_yV-gS2RREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWSCRGRREe6bAesDIgR3sg">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDtEg2RREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yDtEhGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDtEhWRREe6bAesDIgR3sg" name="getNumEdges" method="_yV-gTmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yDtEhmRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDtrkGRREe6bAesDIgR3sg" name="getDelta" method="_yV-gWWRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWSCRWRREe6bAesDIgR3sg">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yDtrkWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDtrkmRREe6bAesDIgR3sg" name="getExecutionDuration" method="_yV_HUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yDtrk2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDtrlGRREe6bAesDIgR3sg" name="printAll" method="_yV_HVWRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yDtrlWRREe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yDuSoGRREe6bAesDIgR3sg" name="printAll" method="_yV_HV2RREe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_yRN8EGRREe6bAesDIgR3sg" name="Activation" visibility="package" method="_yV9SI2RREe6bAesDIgR3sg">
                <eAnnotations xmi:id="_yROjIWRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yROjImRREe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yRN8EWRREe6bAesDIgR3sg" name="elem" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yROjIGRREe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yROjI2RREe6bAesDIgR3sg" type="_yDQYkGRREe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRPKNGRREe6bAesDIgR3sg" name="addEdge" method="_yV95NmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRPKNWRREe6bAesDIgR3sg" name="edge" type="_x-zWYmRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRPxQWRREe6bAesDIgR3sg" name="compareTo" method="_yV-gUGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRPxQmRREe6bAesDIgR3sg" name="obj" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRPxQ2RREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRQYU2RREe6bAesDIgR3sg" name="conflictExists" method="_yV-gU2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRQYVGRREe6bAesDIgR3sg" name="obj" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRQYVWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRQYVmRREe6bAesDIgR3sg" name="canCombine" method="_yV-gVmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRQ_YGRREe6bAesDIgR3sg" name="a2" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRQ_YWRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRQ_YmRREe6bAesDIgR3sg" name="getCombinedExecutionDuration" method="_yV_HUmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRQ_Y2RREe6bAesDIgR3sg" name="a2" type="_yDQYkGRREe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_yRQ_ZGRREe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRQ_ZWRREe6bAesDIgR3sg" name="printEdges" visibility="private" method="_yV_HWGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRQ_ZmRREe6bAesDIgR3sg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRRmcGRREe6bAesDIgR3sg" name="edges" type="_x_1RIGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRRmcmRREe6bAesDIgR3sg" name="printEdges" visibility="private" method="_yV_HW2RREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yRRmc2RREe6bAesDIgR3sg" name="edges" type="_x_1RIGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yS8aYGRREe6bAesDIgR3sg" name="addEdges" method="_yV95NGRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yS8aYWRREe6bAesDIgR3sg" name="edges" type="_yO3LoGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yS-PkGRREe6bAesDIgR3sg" name="addConflicts" method="_yV95PmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yS-PkWRREe6bAesDIgR3sg" name="conflicts" type="_yQva8WRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yS_dsGRREe6bAesDIgR3sg" name="addCoordinators" method="_yV95QmRREe6bAesDIgR3sg">
                <ownedParameter xmi:id="_yS_dsWRREe6bAesDIgR3sg" name="coordinators" type="_yO3LoGRREe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTAEwWRREe6bAesDIgR3sg" name="addScheduleTimes" method="_yV-gQGRREe6bAesDIgR3sg">
                <ownedComment xmi:id="_yWSCQGRREe6bAesDIgR3sg">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_yTAEwmRREe6bAesDIgR3sg" name="scheduleTime" type="_yO3LoGRREe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yRtEQWRREe6bAesDIgR3sg" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yR874GRREe6bAesDIgR3sg" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySP20GRREe6bAesDIgR3sg" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySQd4GRREe6bAesDIgR3sg" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yScrIGRREe6bAesDIgR3sg" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_yWF1AGRREe6bAesDIgR3sg" name="" memberEnd="_yTXRJmRREe6bAesDIgR3sg _yWGcEGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yWGcEGRREe6bAesDIgR3sg" name="" type="_x-zWYmRREe6bAesDIgR3sg" association="_yWF1AGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yWLUkWRREe6bAesDIgR3sg" name="" memberEnd="_yUG4BGRREe6bAesDIgR3sg _yWLUkmRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yWLUkmRREe6bAesDIgR3sg" name="" type="_yBQNcGRREe6bAesDIgR3sg" association="_yWLUkWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yWNw0GRREe6bAesDIgR3sg" name="" memberEnd="_yUTFRWRREe6bAesDIgR3sg _yWNw0WRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yWNw0WRREe6bAesDIgR3sg" name="" type="_yCI-QGRREe6bAesDIgR3sg" association="_yWNw0GRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yWNw0mRREe6bAesDIgR3sg" name="" memberEnd="_yUTFRmRREe6bAesDIgR3sg _yWNw02RREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yWNw02RREe6bAesDIgR3sg" name="" type="_yCI-QGRREe6bAesDIgR3sg" association="_yWNw0mRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yWzmsGRREe6bAesDIgR3sg" name="" memberEnd="_yWzmsWRREe6bAesDIgR3sg _yTOHMmRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yWzmsWRREe6bAesDIgR3sg" name="" type="_x-Rx8GRREe6bAesDIgR3sg" association="_yWzmsGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW000GRREe6bAesDIgR3sg" name="" memberEnd="_yW000WRREe6bAesDIgR3sg _yTOuQWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW000WRREe6bAesDIgR3sg" name="" type="_x-Rx8GRREe6bAesDIgR3sg" association="_yW000GRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW0002RREe6bAesDIgR3sg" name="" memberEnd="_yW001GRREe6bAesDIgR3sg _yTP8YWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW001GRREe6bAesDIgR3sg" name="" type="_x-U1QGRREe6bAesDIgR3sg" association="_yW0002RREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW1b4WRREe6bAesDIgR3sg" name="" memberEnd="_yW1b4mRREe6bAesDIgR3sg _yTP8Y2RREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW1b4mRREe6bAesDIgR3sg" name="" type="_x-U1QGRREe6bAesDIgR3sg" association="_yW1b4WRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW1b5GRREe6bAesDIgR3sg" name="" memberEnd="_yW1b5WRREe6bAesDIgR3sg _yTRxkWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW1b5WRREe6bAesDIgR3sg" name="" type="_x-WqcGRREe6bAesDIgR3sg" association="_yW1b5GRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW2C8WRREe6bAesDIgR3sg" name="" memberEnd="_yW2C8mRREe6bAesDIgR3sg _yTS_sGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW2C8mRREe6bAesDIgR3sg" name="" type="_x-dYIGRREe6bAesDIgR3sg" association="_yW2C8WRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW2qAWRREe6bAesDIgR3sg" name="" memberEnd="_yW2qAmRREe6bAesDIgR3sg _yTTmwWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW2qAmRREe6bAesDIgR3sg" name="" type="_x-dYIGRREe6bAesDIgR3sg" association="_yW2qAWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW3REWRREe6bAesDIgR3sg" name="" memberEnd="_yW3REmRREe6bAesDIgR3sg _yTVb8GRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW3REmRREe6bAesDIgR3sg" name="" type="_x-o-UGRREe6bAesDIgR3sg" association="_yW3REWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW34IWRREe6bAesDIgR3sg" name="" memberEnd="_yW34ImRREe6bAesDIgR3sg _yTWDA2RREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW34ImRREe6bAesDIgR3sg" name="" type="_x-o-UGRREe6bAesDIgR3sg" association="_yW34IWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW6UYWRREe6bAesDIgR3sg" name="" memberEnd="_yW6UYmRREe6bAesDIgR3sg _yTa7gWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW6UYmRREe6bAesDIgR3sg" name="" type="_x_AKsGRREe6bAesDIgR3sg" association="_yW6UYWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW7igGRREe6bAesDIgR3sg" name="" memberEnd="_yW7igWRREe6bAesDIgR3sg _yTbik2RREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW7igWRREe6bAesDIgR3sg" name="" type="_x_AKsGRREe6bAesDIgR3sg" association="_yW7igGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW7ig2RREe6bAesDIgR3sg" name="" memberEnd="_yW7ihGRREe6bAesDIgR3sg _yTcJoGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW7ihGRREe6bAesDIgR3sg" name="" type="_x_FqQGRREe6bAesDIgR3sg" association="_yW7ig2RREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW8woGRREe6bAesDIgR3sg" name="" memberEnd="_yW8woWRREe6bAesDIgR3sg _yTcwsWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW8woWRREe6bAesDIgR3sg" name="" type="_x_HfcGRREe6bAesDIgR3sg" association="_yW8woGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW9XsWRREe6bAesDIgR3sg" name="" memberEnd="_yW9XsmRREe6bAesDIgR3sg _yTdXwWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW9XsmRREe6bAesDIgR3sg" name="" type="_x_HfcGRREe6bAesDIgR3sg" association="_yW9XsWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW-l0WRREe6bAesDIgR3sg" name="" memberEnd="_yW-l0mRREe6bAesDIgR3sg _yTd-0mRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW-l0mRREe6bAesDIgR3sg" name="" type="_x_J7sGRREe6bAesDIgR3sg" association="_yW-l0WRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW_M4WRREe6bAesDIgR3sg" name="" memberEnd="_yW_M4mRREe6bAesDIgR3sg _yThCIGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW_M4mRREe6bAesDIgR3sg" name="" type="_x_QCUGRREe6bAesDIgR3sg" association="_yW_M4WRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yW_z8WRREe6bAesDIgR3sg" name="" memberEnd="_yW_z8mRREe6bAesDIgR3sg _yThCImRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yW_z8mRREe6bAesDIgR3sg" name="" type="_x_QCUGRREe6bAesDIgR3sg" association="_yW_z8WRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXAbAWRREe6bAesDIgR3sg" name="" memberEnd="_yXAbAmRREe6bAesDIgR3sg _yThCJGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXAbAmRREe6bAesDIgR3sg" name="" type="_x_QCUGRREe6bAesDIgR3sg" association="_yXAbAWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXBCEWRREe6bAesDIgR3sg" name="" memberEnd="_yXBCEmRREe6bAesDIgR3sg _yThpMWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXBCEmRREe6bAesDIgR3sg" name="" type="_x_QCUGRREe6bAesDIgR3sg" association="_yXBCEWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXBpIWRREe6bAesDIgR3sg" name="" memberEnd="_yXBpImRREe6bAesDIgR3sg _yTiQQWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXBpImRREe6bAesDIgR3sg" name="" type="_x_QCUGRREe6bAesDIgR3sg" association="_yXBpIWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXC3QWRREe6bAesDIgR3sg" name="" memberEnd="_yXC3QmRREe6bAesDIgR3sg _yTkFcGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXC3QmRREe6bAesDIgR3sg" name="" type="_x_TssGRREe6bAesDIgR3sg" association="_yXC3QWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXDeUWRREe6bAesDIgR3sg" name="" memberEnd="_yXDeUmRREe6bAesDIgR3sg _yTkFcmRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXDeUmRREe6bAesDIgR3sg" name="" type="_x_TssGRREe6bAesDIgR3sg" association="_yXDeUWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXEscGRREe6bAesDIgR3sg" name="" memberEnd="_yXEscWRREe6bAesDIgR3sg _yTlTkWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXEscWRREe6bAesDIgR3sg" name="" type="_x_aaYGRREe6bAesDIgR3sg" association="_yXEscGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXFTgGRREe6bAesDIgR3sg" name="" memberEnd="_yXFTgWRREe6bAesDIgR3sg _yTnv0mRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXFTgWRREe6bAesDIgR3sg" name="" type="_x_t8YGRREe6bAesDIgR3sg" association="_yXFTgGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXGhoWRREe6bAesDIgR3sg" name="" memberEnd="_yXGhomRREe6bAesDIgR3sg _yToW4WRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXGhomRREe6bAesDIgR3sg" name="" type="_x_t8YGRREe6bAesDIgR3sg" association="_yXGhoWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXHvwWRREe6bAesDIgR3sg" name="" memberEnd="_yXHvwmRREe6bAesDIgR3sg _yTqzJGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXHvwmRREe6bAesDIgR3sg" name="" type="_x_-bEGRREe6bAesDIgR3sg" association="_yXHvwWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXIW0WRREe6bAesDIgR3sg" name="" memberEnd="_yXIW0mRREe6bAesDIgR3sg _yTraMWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXIW0mRREe6bAesDIgR3sg" name="" type="_x_-bEGRREe6bAesDIgR3sg" association="_yXIW0WRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXI94WRREe6bAesDIgR3sg" name="" memberEnd="_yXI94mRREe6bAesDIgR3sg _yTsBQmRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXI94mRREe6bAesDIgR3sg" name="" type="_x__CIGRREe6bAesDIgR3sg" association="_yXI94WRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXJk8GRREe6bAesDIgR3sg" name="" memberEnd="_yXJk8WRREe6bAesDIgR3sg _yTw5wWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXJk8WRREe6bAesDIgR3sg" name="" type="_yAW1kGRREe6bAesDIgR3sg" association="_yXJk8GRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXJk82RREe6bAesDIgR3sg" name="" memberEnd="_yXJk9GRREe6bAesDIgR3sg _yTw5w2RREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXJk9GRREe6bAesDIgR3sg" name="" type="_yAW1kGRREe6bAesDIgR3sg" association="_yXJk82RREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXKzEGRREe6bAesDIgR3sg" name="" memberEnd="_yXKzEWRREe6bAesDIgR3sg _yTyu8GRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXKzEWRREe6bAesDIgR3sg" name="" type="_yAgmkGRREe6bAesDIgR3sg" association="_yXKzEGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXLaIGRREe6bAesDIgR3sg" name="" memberEnd="_yXLaIWRREe6bAesDIgR3sg _yTzWAWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXLaIWRREe6bAesDIgR3sg" name="" type="_yAgmkGRREe6bAesDIgR3sg" association="_yXLaIGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXMBMWRREe6bAesDIgR3sg" name="" memberEnd="_yXMBMmRREe6bAesDIgR3sg _yTzWA2RREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXMBMmRREe6bAesDIgR3sg" name="" type="_yAgmkGRREe6bAesDIgR3sg" association="_yXMBMWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXMoQGRREe6bAesDIgR3sg" name="" memberEnd="_yXMoQWRREe6bAesDIgR3sg _yT0kIGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXMoQWRREe6bAesDIgR3sg" name="" type="_yAgmkGRREe6bAesDIgR3sg" association="_yXMoQGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXMoQ2RREe6bAesDIgR3sg" name="" memberEnd="_yXMoRGRREe6bAesDIgR3sg _yT0kI2RREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXMoRGRREe6bAesDIgR3sg" name="" type="_yAgmkGRREe6bAesDIgR3sg" association="_yXMoQ2RREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXNPUWRREe6bAesDIgR3sg" name="" memberEnd="_yXNPUmRREe6bAesDIgR3sg _yT1LMWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXNPUmRREe6bAesDIgR3sg" name="" type="_yAgmkGRREe6bAesDIgR3sg" association="_yXNPUWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXN2YWRREe6bAesDIgR3sg" name="" memberEnd="_yXN2YmRREe6bAesDIgR3sg _yT1LNGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXN2YmRREe6bAesDIgR3sg" name="" type="_yAgmkGRREe6bAesDIgR3sg" association="_yXN2YWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXOdcGRREe6bAesDIgR3sg" name="" memberEnd="_yXOdcWRREe6bAesDIgR3sg _yT2ZUGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXOdcWRREe6bAesDIgR3sg" name="" type="_yAq-oGRREe6bAesDIgR3sg" association="_yXOdcGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXPEgGRREe6bAesDIgR3sg" name="" memberEnd="_yXPEgWRREe6bAesDIgR3sg _yUB_gWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXPEgWRREe6bAesDIgR3sg" name="" type="_yBJfwGRREe6bAesDIgR3sg" association="_yXPEgGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXPEg2RREe6bAesDIgR3sg" name="" memberEnd="_yXPEhGRREe6bAesDIgR3sg _yUCmkWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXPEhGRREe6bAesDIgR3sg" name="" type="_yBJfwGRREe6bAesDIgR3sg" association="_yXPEg2RREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXPrkWRREe6bAesDIgR3sg" name="" memberEnd="_yXPrkmRREe6bAesDIgR3sg _yUHfEGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXPrkmRREe6bAesDIgR3sg" name="" type="_yBQNcGRREe6bAesDIgR3sg" association="_yXPrkWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXQSoWRREe6bAesDIgR3sg" name="" memberEnd="_yXQSomRREe6bAesDIgR3sg _yUIGIWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXQSomRREe6bAesDIgR3sg" name="" type="_yBQNcGRREe6bAesDIgR3sg" association="_yXQSoWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXQ5sWRREe6bAesDIgR3sg" name="" memberEnd="_yXQ5smRREe6bAesDIgR3sg _yUJ7V2RREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXQ5smRREe6bAesDIgR3sg" name="" type="_yBmywGRREe6bAesDIgR3sg" association="_yXQ5sWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXRgwGRREe6bAesDIgR3sg" name="" memberEnd="_yXRgwWRREe6bAesDIgR3sg _yUKiYWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXRgwWRREe6bAesDIgR3sg" name="" type="_yBmywGRREe6bAesDIgR3sg" association="_yXRgwGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXRgw2RREe6bAesDIgR3sg" name="" memberEnd="_yXRgxGRREe6bAesDIgR3sg _yUKiY2RREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXRgxGRREe6bAesDIgR3sg" name="" type="_yBmywGRREe6bAesDIgR3sg" association="_yXRgw2RREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXSH0WRREe6bAesDIgR3sg" name="" memberEnd="_yXSH0mRREe6bAesDIgR3sg _yULwhWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXSH0mRREe6bAesDIgR3sg" name="" type="_yBmywGRREe6bAesDIgR3sg" association="_yXSH0WRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXSu4GRREe6bAesDIgR3sg" name="" memberEnd="_yXSu4WRREe6bAesDIgR3sg _yUM-oWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXSu4WRREe6bAesDIgR3sg" name="" type="_yBmywGRREe6bAesDIgR3sg" association="_yXSu4GRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXSu42RREe6bAesDIgR3sg" name="" memberEnd="_yXSu5GRREe6bAesDIgR3sg _yUOMwGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXSu5GRREe6bAesDIgR3sg" name="" type="_yB8xAGRREe6bAesDIgR3sg" association="_yXSu42RREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXSu5mRREe6bAesDIgR3sg" name="" memberEnd="_yXSu52RREe6bAesDIgR3sg _yUOMwmRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXSu52RREe6bAesDIgR3sg" name="" type="_yB8xAGRREe6bAesDIgR3sg" association="_yXSu5mRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXTV8WRREe6bAesDIgR3sg" name="" memberEnd="_yXTV8mRREe6bAesDIgR3sg _yUOz0WRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXTV8mRREe6bAesDIgR3sg" name="" type="_yB8xAGRREe6bAesDIgR3sg" association="_yXTV8WRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXT9AGRREe6bAesDIgR3sg" name="" memberEnd="_yXT9AWRREe6bAesDIgR3sg _yUOz02RREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXT9AWRREe6bAesDIgR3sg" name="" type="_yB8xAGRREe6bAesDIgR3sg" association="_yXT9AGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXUkEGRREe6bAesDIgR3sg" name="" memberEnd="_yXUkEWRREe6bAesDIgR3sg _yUOz1WRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXUkEWRREe6bAesDIgR3sg" name="" type="_yB8xAGRREe6bAesDIgR3sg" association="_yXUkEGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXVLIWRREe6bAesDIgR3sg" name="" memberEnd="_yXVLImRREe6bAesDIgR3sg _yUTsUmRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXVLImRREe6bAesDIgR3sg" name="" type="_yCI-QGRREe6bAesDIgR3sg" association="_yXVLIWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXVyMWRREe6bAesDIgR3sg" name="" memberEnd="_yXVyMmRREe6bAesDIgR3sg _yUUTYmRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXVyMmRREe6bAesDIgR3sg" name="" type="_yCI-QGRREe6bAesDIgR3sg" association="_yXVyMWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXWZQWRREe6bAesDIgR3sg" name="" memberEnd="_yXWZQmRREe6bAesDIgR3sg _yUWvomRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXWZQmRREe6bAesDIgR3sg" name="" type="_yCb5MGRREe6bAesDIgR3sg" association="_yXWZQWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXXnYGRREe6bAesDIgR3sg" name="" memberEnd="_yXXnYWRREe6bAesDIgR3sg _yUWvpmRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXXnYWRREe6bAesDIgR3sg" name="" type="_yCb5MGRREe6bAesDIgR3sg" association="_yXXnYGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXXnY2RREe6bAesDIgR3sg" name="" memberEnd="_yXXnZGRREe6bAesDIgR3sg _yUXWsmRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXXnZGRREe6bAesDIgR3sg" name="" type="_yCfjkGRREe6bAesDIgR3sg" association="_yXXnY2RREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXYOcWRREe6bAesDIgR3sg" name="" memberEnd="_yXYOcmRREe6bAesDIgR3sg _yUYk0GRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXYOcmRREe6bAesDIgR3sg" name="" type="_yCh_0GRREe6bAesDIgR3sg" association="_yXYOcWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXY1gWRREe6bAesDIgR3sg" name="" memberEnd="_yXY1gmRREe6bAesDIgR3sg _yUYk0mRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXY1gmRREe6bAesDIgR3sg" name="" type="_yCh_0GRREe6bAesDIgR3sg" association="_yXY1gWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXZckWRREe6bAesDIgR3sg" name="" memberEnd="_yXZckmRREe6bAesDIgR3sg _yUZL4WRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXZckmRREe6bAesDIgR3sg" name="" type="_yCh_0GRREe6bAesDIgR3sg" association="_yXZckWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXaqsGRREe6bAesDIgR3sg" name="" memberEnd="_yXaqsWRREe6bAesDIgR3sg _yUZL5mRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXaqsWRREe6bAesDIgR3sg" name="" type="_yCh_0GRREe6bAesDIgR3sg" association="_yXaqsGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXb40WRREe6bAesDIgR3sg" name="" memberEnd="_yXb40mRREe6bAesDIgR3sg _yUZy8WRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXb40mRREe6bAesDIgR3sg" name="" type="_yCh_0GRREe6bAesDIgR3sg" association="_yXb40WRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXduAGRREe6bAesDIgR3sg" name="" memberEnd="_yXduAWRREe6bAesDIgR3sg _yUZy82RREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXduAWRREe6bAesDIgR3sg" name="" type="_yCh_0GRREe6bAesDIgR3sg" association="_yXduAGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXduA2RREe6bAesDIgR3sg" name="" memberEnd="_yXduBGRREe6bAesDIgR3sg _yUaaAmRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXduBGRREe6bAesDIgR3sg" name="" type="_yCh_0GRREe6bAesDIgR3sg" association="_yXduA2RREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXeVEWRREe6bAesDIgR3sg" name="" memberEnd="_yXeVEmRREe6bAesDIgR3sg _yUboIGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXeVEmRREe6bAesDIgR3sg" name="" type="_yCh_0GRREe6bAesDIgR3sg" association="_yXeVEWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXe8IWRREe6bAesDIgR3sg" name="" memberEnd="_yXe8ImRREe6bAesDIgR3sg _yUf5k2RREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXe8ImRREe6bAesDIgR3sg" name="" type="_yDJq4GRREe6bAesDIgR3sg" association="_yXe8IWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXgKQGRREe6bAesDIgR3sg" name="" memberEnd="_yXgKQWRREe6bAesDIgR3sg _yUggomRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXgKQWRREe6bAesDIgR3sg" name="" type="_yDJq4GRREe6bAesDIgR3sg" association="_yXgKQGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXhYYWRREe6bAesDIgR3sg" name="" memberEnd="_yXhYYmRREe6bAesDIgR3sg _yUhuwGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXhYYmRREe6bAesDIgR3sg" name="" type="_yDJq4GRREe6bAesDIgR3sg" association="_yXhYYWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXimgGRREe6bAesDIgR3sg" name="" memberEnd="_yXimgWRREe6bAesDIgR3sg _yUiV0WRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXimgWRREe6bAesDIgR3sg" name="" type="_yDJq4GRREe6bAesDIgR3sg" association="_yXimgGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXjNkGRREe6bAesDIgR3sg" name="" memberEnd="_yXjNkWRREe6bAesDIgR3sg _yUi84WRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXjNkWRREe6bAesDIgR3sg" name="" type="_yDJq4GRREe6bAesDIgR3sg" association="_yXjNkGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXj0oWRREe6bAesDIgR3sg" name="" memberEnd="_yXj0omRREe6bAesDIgR3sg _yUlZIGRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXj0omRREe6bAesDIgR3sg" name="" type="_yDQYkGRREe6bAesDIgR3sg" association="_yXj0oWRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXlCwGRREe6bAesDIgR3sg" name="" memberEnd="_yXlCwWRREe6bAesDIgR3sg _yUn1YWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXlCwWRREe6bAesDIgR3sg" name="" type="_yDQYkGRREe6bAesDIgR3sg" association="_yXlCwGRREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yXlCw2RREe6bAesDIgR3sg" name="" memberEnd="_yXlCxGRREe6bAesDIgR3sg _yUpDgWRREe6bAesDIgR3sg">
              <ownedEnd xmi:id="_yXlCxGRREe6bAesDIgR3sg" name="" type="_yDQYkGRREe6bAesDIgR3sg" association="_yXlCw2RREe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="__BgD8H9pEe6F645s24XfkQ" name="" memberEnd="__BgD8X9pEe6F645s24XfkQ __BbLcX9pEe6F645s24XfkQ">
              <ownedEnd xmi:id="__BgD8X9pEe6F645s24XfkQ" name="" type="_x_QCUGRREe6bAesDIgR3sg" association="__BgD8H9pEe6F645s24XfkQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_x4suYmRREe6bAesDIgR3sg" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_yPQNM2RREe6bAesDIgR3sg" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yPQ0QGRREe6bAesDIgR3sg" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yPQ0QmRREe6bAesDIgR3sg" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySXyoWRREe6bAesDIgR3sg" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_x6pPIGRREe6bAesDIgR3sg" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_yQimoGRREe6bAesDIgR3sg" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_x2u_gGRREe6bAesDIgR3sg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_x2vmkGRREe6bAesDIgR3sg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_x2zQ8GRREe6bAesDIgR3sg" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_yO62AmRREe6bAesDIgR3sg" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_x6678GRREe6bAesDIgR3sg" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_yQwCAmRREe6bAesDIgR3sg" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_x_2fRGRREe6bAesDIgR3sg" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yOv24GRREe6bAesDIgR3sg" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yO3LoGRREe6bAesDIgR3sg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yO3ysWRREe6bAesDIgR3sg" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yO62AGRREe6bAesDIgR3sg" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yPF1IGRREe6bAesDIgR3sg" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yPuuUGRREe6bAesDIgR3sg" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yQaDwGRREe6bAesDIgR3sg" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yQaq0WRREe6bAesDIgR3sg" name="Queue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yQjNsGRREe6bAesDIgR3sg" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yQuz4GRREe6bAesDIgR3sg" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yQuz4mRREe6bAesDIgR3sg" name="List"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yQva8WRREe6bAesDIgR3sg" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yQwCAGRREe6bAesDIgR3sg" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yQ2vsGRREe6bAesDIgR3sg" name="Scanner"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_x36rQGRREe6bAesDIgR3sg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_yPKGkWRREe6bAesDIgR3sg" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yPKGk2RREe6bAesDIgR3sg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yPZXIGRREe6bAesDIgR3sg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yPZ-MGRREe6bAesDIgR3sg" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_x4M_IGRREe6bAesDIgR3sg" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_x4ONQGRREe6bAesDIgR3sg" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_yPKtoWRREe6bAesDIgR3sg" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_yPKto2RREe6bAesDIgR3sg" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_yPLUsGRREe6bAesDIgR3sg" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_x5GXAGRREe6bAesDIgR3sg" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_yPW64GRREe6bAesDIgR3sg" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_yRqA8GRREe6bAesDIgR3sg" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_yRqA8WRREe6bAesDIgR3sg" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yR0ZAGRREe6bAesDIgR3sg" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_ySEQoGRREe6bAesDIgR3sg" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_x33A4GRREe6bAesDIgR3sg" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_x34PAGRREe6bAesDIgR3sg" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_x34PAWRREe6bAesDIgR3sg" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_yPJfgGRREe6bAesDIgR3sg" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_x4UT4GRREe6bAesDIgR3sg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_x4UT4WRREe6bAesDIgR3sg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_x5GXAWRREe6bAesDIgR3sg" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_yPYJAWRREe6bAesDIgR3sg" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_yPYJA2RREe6bAesDIgR3sg" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_yPLUsmRREe6bAesDIgR3sg" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yPW64mRREe6bAesDIgR3sg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yPXh8WRREe6bAesDIgR3sg" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yPXh82RREe6bAesDIgR3sg" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_x4sHUGRREe6bAesDIgR3sg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_x4sHUWRREe6bAesDIgR3sg" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_x4sHUmRREe6bAesDIgR3sg" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_x4suYGRREe6bAesDIgR3sg" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_x4suYWRREe6bAesDIgR3sg" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_yPPmI2RREe6bAesDIgR3sg" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_yPQNMWRREe6bAesDIgR3sg" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yPO_EGRREe6bAesDIgR3sg" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yPO_EmRREe6bAesDIgR3sg" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yPPmIWRREe6bAesDIgR3sg" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_x5CsoGRREe6bAesDIgR3sg" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_yPRbV2RREe6bAesDIgR3sg" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yPSpcmRREe6bAesDIgR3sg" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yPTQhGRREe6bAesDIgR3sg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yPT3lGRREe6bAesDIgR3sg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yPUepmRREe6bAesDIgR3sg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yPVswGRREe6bAesDIgR3sg" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yQ5zBWRREe6bAesDIgR3sg" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yQ6aFmRREe6bAesDIgR3sg" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yQ7oMGRREe6bAesDIgR3sg" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yQ8PQmRREe6bAesDIgR3sg" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_x6NxUGRREe6bAesDIgR3sg" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_yQHI0GRREe6bAesDIgR3sg" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yQHI0mRREe6bAesDIgR3sg" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yQHv4WRREe6bAesDIgR3sg" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yQHv42RREe6bAesDIgR3sg" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yQIW8WRREe6bAesDIgR3sg" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_x6W7QGRREe6bAesDIgR3sg" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_yQPrsGRREe6bAesDIgR3sg" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yQSvAGRREe6bAesDIgR3sg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yQVLQGRREe6bAesDIgR3sg" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yQVyU2RREe6bAesDIgR3sg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yQXAcmRREe6bAesDIgR3sg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yQYOkGRREe6bAesDIgR3sg" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="_xEH20GRREe6bAesDIgR3sg">
      <eAnnotations xmi:id="_xEId4GRREe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_xEJE8GRREe6bAesDIgR3sg" base_Package="_w91BkGRREe6bAesDIgR3sg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_x-NggGRREe6bAesDIgR3sg" genericsValue="T,E" base_Element="_x-MSYGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_x-aU0GRREe6bAesDIgR3sg" genericsValue="String" base_Element="_x-ZtxGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_x-fNUGRREe6bAesDIgR3sg" genericsValue="String" base_Element="_x-emQmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x-qzgGRREe6bAesDIgR3sg" base_Element="_x-qMcGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x-qzgWRREe6bAesDIgR3sg" base_Element="_x-qMcGRREe6bAesDIgR3sg">
    <annotations xmi:id="_x-qzgmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x-rakWRREe6bAesDIgR3sg" base_Element="_x-rakGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x-sBoGRREe6bAesDIgR3sg" base_Element="_x-rakGRREe6bAesDIgR3sg">
    <annotations xmi:id="_x-sBoWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x-sBo2RREe6bAesDIgR3sg" base_Element="_x-sBomRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x-sosGRREe6bAesDIgR3sg" base_Element="_x-sBomRREe6bAesDIgR3sg">
    <annotations xmi:id="_x-sosWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_x-w6IGRREe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_x-wTEGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x-yvV2RREe6bAesDIgR3sg" base_Element="_x-yvVWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x-zWYGRREe6bAesDIgR3sg" base_Element="_x-yvVWRREe6bAesDIgR3sg">
    <annotations xmi:id="_x-zWYWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x-0kgGRREe6bAesDIgR3sg" base_Element="_x-z9cGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x-3AwGRREe6bAesDIgR3sg" base_Element="_x-2ZsGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x-3AwWRREe6bAesDIgR3sg" base_Element="_x-2ZsGRREe6bAesDIgR3sg">
    <annotations xmi:id="_x-3AwmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x-3n0GRREe6bAesDIgR3sg" base_Element="_x-3Aw2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x-3n0WRREe6bAesDIgR3sg" base_Element="_x-3Aw2RREe6bAesDIgR3sg">
    <annotations xmi:id="_x-3n0mRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x-4O4GRREe6bAesDIgR3sg" base_Element="_x-3n02RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x-4O4WRREe6bAesDIgR3sg" base_Element="_x-3n02RREe6bAesDIgR3sg">
    <annotations xmi:id="_x-4O4mRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x_BY0WRREe6bAesDIgR3sg" base_Element="_x_BY0GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x_B_4GRREe6bAesDIgR3sg" base_Element="_x_BY0GRREe6bAesDIgR3sg">
    <annotations xmi:id="_x_B_4WRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_x_ItlGRREe6bAesDIgR3sg" dimensions="2" base_Element="_x_IGg2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_x_WwAGRREe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_x_Vh4GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_x_ZzUGRREe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_x_YlMGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x_cPkGRREe6bAesDIgR3sg" base_Element="_x_bohGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x_cPkWRREe6bAesDIgR3sg" base_Element="_x_bohGRREe6bAesDIgR3sg">
    <annotations xmi:id="_x_cPkmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x_ddsWRREe6bAesDIgR3sg" base_Element="_x_c2omRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x_ddsmRREe6bAesDIgR3sg" base_Element="_x_c2omRREe6bAesDIgR3sg">
    <annotations xmi:id="_x_dds2RREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x_eEwGRREe6bAesDIgR3sg" base_Element="_x_ddtGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x_eEwWRREe6bAesDIgR3sg" base_Element="_x_ddtGRREe6bAesDIgR3sg">
    <annotations xmi:id="_x_eEwmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x_jkUGRREe6bAesDIgR3sg" base_Element="_x_i9RGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x_jkUWRREe6bAesDIgR3sg" base_Element="_x_i9RGRREe6bAesDIgR3sg">
    <annotations xmi:id="_x_jkUmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_x_kycGRREe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_x_kLYGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x_nOsGRREe6bAesDIgR3sg" base_Element="_x_mnoGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x_nOsWRREe6bAesDIgR3sg" base_Element="_x_mnoGRREe6bAesDIgR3sg">
    <annotations xmi:id="_x_nOsmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_x_q5EGRREe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_x_qSAGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x_ujcWRREe6bAesDIgR3sg" base_Element="_x_ujcGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x_vKgGRREe6bAesDIgR3sg" base_Element="_x_ujcGRREe6bAesDIgR3sg">
    <annotations xmi:id="_x_vKgWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x_vxkGRREe6bAesDIgR3sg" base_Element="_x_vKgmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x_vxkWRREe6bAesDIgR3sg" base_Element="_x_vKgmRREe6bAesDIgR3sg">
    <annotations xmi:id="_x_vxkmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x_wYoGRREe6bAesDIgR3sg" base_Element="_x_vxk2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x_wYoWRREe6bAesDIgR3sg" base_Element="_x_vxk2RREe6bAesDIgR3sg">
    <annotations xmi:id="_x_wYomRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_x_w_smRREe6bAesDIgR3sg" base_Element="_x_wYo2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x_w_s2RREe6bAesDIgR3sg" base_Element="_x_wYo2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x_xmwGRREe6bAesDIgR3sg" base_Element="_x_wYo2RREe6bAesDIgR3sg">
    <annotations xmi:id="_x_xmwWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_x_xmxWRREe6bAesDIgR3sg" dimensions="2" base_Element="_x_xmwmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_x_yN0GRREe6bAesDIgR3sg" base_Element="_x_xmwmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_x_yN0WRREe6bAesDIgR3sg" base_Element="_x_xmwmRREe6bAesDIgR3sg">
    <annotations xmi:id="_x_yN0mRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_x_0qEGRREe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_x_0DAGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_x_14MGRREe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_x_1RIGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_x_3GUGRREe6bAesDIgR3sg" base_Element="_x_2fRGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_x_3tYGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_x_3GUWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yAAQQGRREe6bAesDIgR3sg" base_Element="_x__pMGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yAAQQWRREe6bAesDIgR3sg" base_Element="_x__pMGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yAAQQmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yACFcGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_yABeYGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yAG98GRREe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_yAGW4GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yAIMEGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_yAHlAGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yANEkGRREe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_yAMdgWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yAOSsGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_yANro2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yAO5wWRREe6bAesDIgR3sg" base_Element="_yAO5wGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yASkIGRREe6bAesDIgR3sg" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_yAR9EGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yAVncGRREe6bAesDIgR3sg" base_Element="_yAVAYWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yAWOgWRREe6bAesDIgR3sg" base_Element="_yAWOgGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yAjC0WRREe6bAesDIgR3sg" base_Element="_yAjC0GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yAjp4GRREe6bAesDIgR3sg" base_Element="_yAjC0GRREe6bAesDIgR3sg">
    <annotations xmi:id="_yAjp4WRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yAjp42RREe6bAesDIgR3sg" base_Element="_yAjp4mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yAjp5GRREe6bAesDIgR3sg" base_Element="_yAjp4mRREe6bAesDIgR3sg">
    <annotations xmi:id="_yAjp5WRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yAkQ8mRREe6bAesDIgR3sg" base_Element="_yAkQ8GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yAkQ82RREe6bAesDIgR3sg" base_Element="_yAkQ8GRREe6bAesDIgR3sg">
    <annotations xmi:id="_yAk4AGRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yAv3I2RREe6bAesDIgR3sg" base_Element="_yAv3IGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_yAweMmRREe6bAesDIgR3sg" dimensions="2" base_Element="_yAv3JGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_yA3L4WRREe6bAesDIgR3sg" base_Element="_yA2k0WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yBI4sGRREe6bAesDIgR3sg" genericsValue="InstructionParameters" base_Element="_yBIRoGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yBLU8GRREe6bAesDIgR3sg" genericsValue="InstructionParameters" base_Element="_yBKt4GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yBXiMGRREe6bAesDIgR3sg" genericsValue="Integer" base_Element="_yBW7JGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yBwjw2RREe6bAesDIgR3sg" base_Element="_yBwjwWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yBxK0GRREe6bAesDIgR3sg" base_Element="_yBwjwWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yBxK0WRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yByY8WRREe6bAesDIgR3sg" base_Element="_yBxK1GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yByY8mRREe6bAesDIgR3sg" base_Element="_yBxK1GRREe6bAesDIgR3sg">
    <annotations xmi:id="_yByY82RREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yByY9mRREe6bAesDIgR3sg" base_Element="_yByY9GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yByY92RREe6bAesDIgR3sg" base_Element="_yByY9GRREe6bAesDIgR3sg">
    <annotations xmi:id="_yByY-GRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yBzAA2RREe6bAesDIgR3sg" base_Element="_yBzAAmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yBzABGRREe6bAesDIgR3sg" base_Element="_yBzAAmRREe6bAesDIgR3sg">
    <annotations xmi:id="_yBzABWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yBznEGRREe6bAesDIgR3sg" base_Element="_yBzABmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yBznEWRREe6bAesDIgR3sg" base_Element="_yBzABmRREe6bAesDIgR3sg">
    <annotations xmi:id="_yBznEmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yB0OIGRREe6bAesDIgR3sg" base_Element="_yBznE2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yB0OIWRREe6bAesDIgR3sg" base_Element="_yBznE2RREe6bAesDIgR3sg">
    <annotations xmi:id="_yB0OImRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yB01MWRREe6bAesDIgR3sg" base_Element="_yB0OI2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yB01MmRREe6bAesDIgR3sg" base_Element="_yB0OI2RREe6bAesDIgR3sg">
    <annotations xmi:id="_yB01M2RREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yB1cQmRREe6bAesDIgR3sg" base_Element="_yB1cQGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yB1cQ2RREe6bAesDIgR3sg" base_Element="_yB1cQGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yB1cRGRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yB2qYGRREe6bAesDIgR3sg" genericsValue="String, Integer" base_Element="_yB1cRWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yB-mMGRREe6bAesDIgR3sg" base_Element="_yB9YEGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yB-mMWRREe6bAesDIgR3sg" base_Element="_yB9YEGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yB-mMmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yB_NQGRREe6bAesDIgR3sg" base_Element="_yB-mM2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yB_NQWRREe6bAesDIgR3sg" base_Element="_yB-mM2RREe6bAesDIgR3sg">
    <annotations xmi:id="_yB_NQmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yB_NRGRREe6bAesDIgR3sg" base_Element="_yB_NQ2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yB_0UGRREe6bAesDIgR3sg" base_Element="_yB_NQ2RREe6bAesDIgR3sg">
    <annotations xmi:id="_yB_0UWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yB_0U2RREe6bAesDIgR3sg" base_Element="_yB_0UmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yB_0VGRREe6bAesDIgR3sg" base_Element="_yB_0UmRREe6bAesDIgR3sg">
    <annotations xmi:id="_yB_0VWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCBCcGRREe6bAesDIgR3sg" base_Element="_yB_0VmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCBCcWRREe6bAesDIgR3sg" base_Element="_yB_0VmRREe6bAesDIgR3sg">
    <annotations xmi:id="_yCBCcmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCBCdGRREe6bAesDIgR3sg" base_Element="_yCBCc2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCBpgGRREe6bAesDIgR3sg" base_Element="_yCBCc2RREe6bAesDIgR3sg">
    <annotations xmi:id="_yCBpgWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCBphGRREe6bAesDIgR3sg" base_Element="_yCBpgmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCCQkGRREe6bAesDIgR3sg" base_Element="_yCBpgmRREe6bAesDIgR3sg">
    <annotations xmi:id="_yCCQkWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCCQlGRREe6bAesDIgR3sg" base_Element="_yCCQkmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCCQlWRREe6bAesDIgR3sg" base_Element="_yCCQkmRREe6bAesDIgR3sg">
    <annotations xmi:id="_yCCQlmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCC3omRREe6bAesDIgR3sg" base_Element="_yCC3oGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCC3o2RREe6bAesDIgR3sg" base_Element="_yCC3oGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yCDesGRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCDesmRREe6bAesDIgR3sg" base_Element="_yCDesWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCDes2RREe6bAesDIgR3sg" base_Element="_yCDesWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yCEFwGRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCEFwmRREe6bAesDIgR3sg" base_Element="_yCEFwWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCEs0GRREe6bAesDIgR3sg" base_Element="_yCEFwWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yCEs0WRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCEs1GRREe6bAesDIgR3sg" base_Element="_yCEs0mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCFT4GRREe6bAesDIgR3sg" base_Element="_yCEs0mRREe6bAesDIgR3sg">
    <annotations xmi:id="_yCFT4WRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCFT5GRREe6bAesDIgR3sg" base_Element="_yCFT4mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCFT5WRREe6bAesDIgR3sg" base_Element="_yCFT4mRREe6bAesDIgR3sg">
    <annotations xmi:id="_yCFT5mRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCF68mRREe6bAesDIgR3sg" base_Element="_yCF68GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCF682RREe6bAesDIgR3sg" base_Element="_yCF68GRREe6bAesDIgR3sg">
    <annotations xmi:id="_yCF69GRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCGiAGRREe6bAesDIgR3sg" base_Element="_yCF69WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCGiAWRREe6bAesDIgR3sg" base_Element="_yCF69WRREe6bAesDIgR3sg">
    <annotations xmi:id="_yCGiAmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCGiBGRREe6bAesDIgR3sg" base_Element="_yCGiA2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCGiBWRREe6bAesDIgR3sg" base_Element="_yCGiA2RREe6bAesDIgR3sg">
    <annotations xmi:id="_yCGiBmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yCTWU2RREe6bAesDIgR3sg" base_Element="_yCTWUGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_yCT9ZGRREe6bAesDIgR3sg" base_Element="_yCT9YWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_yCUkdmRREe6bAesDIgR3sg" base_Element="_yCUkcmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_yCVylGRREe6bAesDIgR3sg" base_Element="_yCVykGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCdHUGRREe6bAesDIgR3sg" base_Element="_yCcgRWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCdHUWRREe6bAesDIgR3sg" base_Element="_yCcgRWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yCdHUmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCdHVGRREe6bAesDIgR3sg" base_Element="_yCdHU2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCdHVWRREe6bAesDIgR3sg" base_Element="_yCdHU2RREe6bAesDIgR3sg">
    <annotations xmi:id="_yCdHVmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yCduYmRREe6bAesDIgR3sg" base_Element="_yCduYGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yCduY2RREe6bAesDIgR3sg" base_Element="_yCduYGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yCduZGRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yCjN8GRREe6bAesDIgR3sg" genericsValue="String, Integer" base_Element="_yCim4GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yCj1AGRREe6bAesDIgR3sg" genericsValue="String" base_Element="_yCjN8WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_yCkcEmRREe6bAesDIgR3sg" base_Element="_yCj1AWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yDMHIGRREe6bAesDIgR3sg" genericsValue="Node" base_Element="_yDLgFmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yDMuMGRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yDMHIWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yDNVQGRREe6bAesDIgR3sg" genericsValue="Integer" base_Element="_yDMuMWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yDN8UmRREe6bAesDIgR3sg" base_Element="_yDN8UGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yDOjYGRREe6bAesDIgR3sg" base_Element="_yDN8UGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yDOjYWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yDRmtGRREe6bAesDIgR3sg" base_Element="_yDRms2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yDSNwGRREe6bAesDIgR3sg" base_Element="_yDRms2RREe6bAesDIgR3sg">
    <annotations xmi:id="_yDSNwWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yDozEGRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yDSNwmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yDpaIWRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yDpaIGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yDqBMGRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yDpaImRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yDqoQGRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yDqBMWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yDqoQmRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yDqoQWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yOwd8GRREe6bAesDIgR3sg" base_Element="_yOv24GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yOzhQGRREe6bAesDIgR3sg" genericsValue="String, Activation" base_Element="_yOyTIGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yO3ysGRREe6bAesDIgR3sg" base_Element="_yO3LoGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yO4ZwGRREe6bAesDIgR3sg" base_Element="_yO3ysWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yO62AWRREe6bAesDIgR3sg" base_Element="_yO62AGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yO7dEGRREe6bAesDIgR3sg" base_Element="_yO62AmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yO_ugWRREe6bAesDIgR3sg" base_Element="_yO_HdWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yPAVkGRREe6bAesDIgR3sg" base_Element="_yO_HdWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yPAVkWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yPGcMGRREe6bAesDIgR3sg" base_Element="_yPF1IGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPHqU2RREe6bAesDIgR3sg" base_Element="_yPHqUGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yPIRYGRREe6bAesDIgR3sg" base_Element="_yPHqUGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yPIRYWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yPKGkGRREe6bAesDIgR3sg" base_Element="_yPJfgGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPKGkmRREe6bAesDIgR3sg" base_Element="_yPKGkWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPKtoGRREe6bAesDIgR3sg" base_Element="_yPKGk2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPKtomRREe6bAesDIgR3sg" base_Element="_yPKtoWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPKtpGRREe6bAesDIgR3sg" base_Element="_yPKto2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPLUsWRREe6bAesDIgR3sg" base_Element="_yPLUsGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPLUs2RREe6bAesDIgR3sg" base_Element="_yPLUsmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yPMi0GRREe6bAesDIgR3sg" genericsValue="String, Flow" base_Element="_yPL7wGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yPMi0mRREe6bAesDIgR3sg" genericsValue="Node, Activation" base_Element="_yPMi0WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPO_EWRREe6bAesDIgR3sg" base_Element="_yPO_EGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPPmIGRREe6bAesDIgR3sg" base_Element="_yPO_EmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPPmImRREe6bAesDIgR3sg" base_Element="_yPPmIWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPQNMGRREe6bAesDIgR3sg" base_Element="_yPPmI2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPQNMmRREe6bAesDIgR3sg" base_Element="_yPQNMWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPQNNGRREe6bAesDIgR3sg" base_Element="_yPQNM2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPQ0QWRREe6bAesDIgR3sg" base_Element="_yPQ0QGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPQ0Q2RREe6bAesDIgR3sg" base_Element="_yPQ0QmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPSCYGRREe6bAesDIgR3sg" base_Element="_yPRbV2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPSCY2RREe6bAesDIgR3sg" base_Element="_yPSCYWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yPSpcGRREe6bAesDIgR3sg" base_Element="_yPSCYWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yPSpcWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yPSpc2RREe6bAesDIgR3sg" base_Element="_yPSpcmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPTQgWRREe6bAesDIgR3sg" base_Element="_yPSpdGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yPTQgmRREe6bAesDIgR3sg" base_Element="_yPSpdGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yPTQg2RREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yPTQhWRREe6bAesDIgR3sg" base_Element="_yPTQhGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPT3kWRREe6bAesDIgR3sg" base_Element="_yPTQhmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yPT3kmRREe6bAesDIgR3sg" base_Element="_yPTQhmRREe6bAesDIgR3sg">
    <annotations xmi:id="_yPT3k2RREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yPUeoGRREe6bAesDIgR3sg" base_Element="_yPT3lGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPUeo2RREe6bAesDIgR3sg" base_Element="_yPUeoWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yPUepGRREe6bAesDIgR3sg" base_Element="_yPUeoWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yPUepWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yPVFsGRREe6bAesDIgR3sg" base_Element="_yPUepmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPVFs2RREe6bAesDIgR3sg" base_Element="_yPVFsWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yPVFtGRREe6bAesDIgR3sg" base_Element="_yPVFsWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yPVFtWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yPVswWRREe6bAesDIgR3sg" base_Element="_yPVswGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPWT0GRREe6bAesDIgR3sg" base_Element="_yPVswmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yPWT0WRREe6bAesDIgR3sg" base_Element="_yPVswmRREe6bAesDIgR3sg">
    <annotations xmi:id="_yPWT0mRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yPW64WRREe6bAesDIgR3sg" base_Element="_yPW64GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPXh8GRREe6bAesDIgR3sg" base_Element="_yPW64mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPXh8mRREe6bAesDIgR3sg" base_Element="_yPXh8WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPYJAGRREe6bAesDIgR3sg" base_Element="_yPXh82RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPYJAmRREe6bAesDIgR3sg" base_Element="_yPYJAWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPYwEGRREe6bAesDIgR3sg" base_Element="_yPYJA2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPZXIWRREe6bAesDIgR3sg" base_Element="_yPZXIGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPZ-MWRREe6bAesDIgR3sg" base_Element="_yPZ-MGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yPdBgWRREe6bAesDIgR3sg" genericsValue="String" base_Element="_yPdBgGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPdokWRREe6bAesDIgR3sg" base_Element="_yPdokGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPihEWRREe6bAesDIgR3sg" base_Element="_yPh6AGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yPihEmRREe6bAesDIgR3sg" base_Element="_yPh6AGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yPihE2RREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yPkWQGRREe6bAesDIgR3sg" genericsValue="String, Node" base_Element="_yPjvMGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPoAo2RREe6bAesDIgR3sg" base_Element="_yPoAoGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yPonsGRREe6bAesDIgR3sg" base_Element="_yPoAoGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yPonsWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yPp10GRREe6bAesDIgR3sg" genericsValue="ScheduleTime" base_Element="_yPpOwGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPrD8WRREe6bAesDIgR3sg" base_Element="_yPqc62RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yPrD8mRREe6bAesDIgR3sg" base_Element="_yPqc62RREe6bAesDIgR3sg">
    <annotations xmi:id="_yPrD82RREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yPs5IWRREe6bAesDIgR3sg" genericsValue="String,InstructionTimeSlot" base_Element="_yPs5IGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yPvVYGRREe6bAesDIgR3sg" base_Element="_yPuuUGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yPv8cGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_yPvVYmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yPwjgWRREe6bAesDIgR3sg" genericsValue="Double" base_Element="_yPwjgGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yPxxoGRREe6bAesDIgR3sg" genericsValue="Double,ReliabilityRow" base_Element="_yPxKkGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yP1cAWRREe6bAesDIgR3sg" base_Element="_yP1cAGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yP2DEGRREe6bAesDIgR3sg" base_Element="_yP1cAmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yP3RMWRREe6bAesDIgR3sg" genericsValue="Activation,Row&lt;Activation>" base_Element="_yP3RMGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yP4fUGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_yP34QWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yP5GYGRREe6bAesDIgR3sg" base_Element="_yP4fUmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQHI0WRREe6bAesDIgR3sg" base_Element="_yQHI0GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQHv4GRREe6bAesDIgR3sg" base_Element="_yQHI0mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQHv4mRREe6bAesDIgR3sg" base_Element="_yQHv4WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQIW8GRREe6bAesDIgR3sg" base_Element="_yQHv42RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQIW8mRREe6bAesDIgR3sg" base_Element="_yQIW8WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQQSwGRREe6bAesDIgR3sg" base_Element="_yQPrsGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQRg4WRREe6bAesDIgR3sg" base_Element="_yQQSwWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQRg4mRREe6bAesDIgR3sg" base_Element="_yQQSwWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQRg42RREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQSH8GRREe6bAesDIgR3sg" base_Element="_yQRg5GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQSH8WRREe6bAesDIgR3sg" base_Element="_yQRg5GRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQSH8mRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yQTWEGRREe6bAesDIgR3sg" base_Element="_yQSvAGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQT9IWRREe6bAesDIgR3sg" base_Element="_yQTWEWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQT9ImRREe6bAesDIgR3sg" base_Element="_yQTWEWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQT9I2RREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yQVLQWRREe6bAesDIgR3sg" base_Element="_yQVLQGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQVyUGRREe6bAesDIgR3sg" base_Element="_yQVLQmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQVyUWRREe6bAesDIgR3sg" base_Element="_yQVLQmRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQVyUmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yQVyVGRREe6bAesDIgR3sg" base_Element="_yQVyU2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQVyV2RREe6bAesDIgR3sg" base_Element="_yQVyVWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQXAcGRREe6bAesDIgR3sg" base_Element="_yQVyVWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQXAcWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yQXAc2RREe6bAesDIgR3sg" base_Element="_yQXAcmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQXngmRREe6bAesDIgR3sg" base_Element="_yQXngGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQXng2RREe6bAesDIgR3sg" base_Element="_yQXngGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQXnhGRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yQYOkWRREe6bAesDIgR3sg" base_Element="_yQYOkGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQYOlGRREe6bAesDIgR3sg" base_Element="_yQYOkmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQY1oGRREe6bAesDIgR3sg" base_Element="_yQYOkmRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQY1oWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yQaq0GRREe6bAesDIgR3sg" base_Element="_yQaDwGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQaq0mRREe6bAesDIgR3sg" base_Element="_yQaq0WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQimoWRREe6bAesDIgR3sg" base_Element="_yQimoGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQjNsWRREe6bAesDIgR3sg" base_Element="_yQjNsGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQuz4WRREe6bAesDIgR3sg" base_Element="_yQuz4GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQva8GRREe6bAesDIgR3sg" base_Element="_yQuz4mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQva8mRREe6bAesDIgR3sg" base_Element="_yQva8WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQwCAWRREe6bAesDIgR3sg" base_Element="_yQwCAGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQwpEGRREe6bAesDIgR3sg" base_Element="_yQwCAmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yQyeQGRREe6bAesDIgR3sg" genericsValue="Integer" base_Element="_yQx3MGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yQ3WwGRREe6bAesDIgR3sg" base_Element="_yQ2vsGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQ5L8mRREe6bAesDIgR3sg" base_Element="_yQ5L8GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQ5L82RREe6bAesDIgR3sg" base_Element="_yQ5L8GRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQ5L9GRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQ5zAmRREe6bAesDIgR3sg" base_Element="_yQ5zAGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQ5zA2RREe6bAesDIgR3sg" base_Element="_yQ5zAGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQ5zBGRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yQ6aEGRREe6bAesDIgR3sg" base_Element="_yQ5zBWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQ6aE2RREe6bAesDIgR3sg" base_Element="_yQ6aEWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQ6aFGRREe6bAesDIgR3sg" base_Element="_yQ6aEWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQ6aFWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yQ7BIGRREe6bAesDIgR3sg" base_Element="_yQ6aFmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQ7BI2RREe6bAesDIgR3sg" base_Element="_yQ7BIWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQ7BJGRREe6bAesDIgR3sg" base_Element="_yQ7BIWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQ7BJWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yQ7oMWRREe6bAesDIgR3sg" base_Element="_yQ7oMGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQ7oNGRREe6bAesDIgR3sg" base_Element="_yQ7oMmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQ8PQGRREe6bAesDIgR3sg" base_Element="_yQ7oMmRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQ8PQWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yQ8PQ2RREe6bAesDIgR3sg" base_Element="_yQ8PQmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQ82UmRREe6bAesDIgR3sg" base_Element="_yQ82UGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQ9dYGRREe6bAesDIgR3sg" base_Element="_yQ82UGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQ9dYWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQ9dZGRREe6bAesDIgR3sg" base_Element="_yQ9dYmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQ-EcGRREe6bAesDIgR3sg" base_Element="_yQ9dYmRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQ-EcWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQ-rgGRREe6bAesDIgR3sg" base_Element="_yQ-EcmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQ-rgWRREe6bAesDIgR3sg" base_Element="_yQ-EcmRREe6bAesDIgR3sg">
    <annotations xmi:id="_yQ-rgmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQ_SkGRREe6bAesDIgR3sg" base_Element="_yQ-rg2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yQ_SkWRREe6bAesDIgR3sg" base_Element="_yQ-rg2RREe6bAesDIgR3sg">
    <annotations xmi:id="_yQ_SkmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yRH1c2RREe6bAesDIgR3sg" base_Element="_yRH1cGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yRJDkGRREe6bAesDIgR3sg" base_Element="_yRH1cGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yRJDkWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yRQYUGRREe6bAesDIgR3sg" base_Element="_yRPxQWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yRQYUWRREe6bAesDIgR3sg" base_Element="_yRPxQWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yRQYUmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yRRmcWRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yRRmcGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yRSNgGRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yRRmc2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yRisMWRREe6bAesDIgR3sg" genericsValue="T, E" base_Element="_yRisMGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yRkhYGRREe6bAesDIgR3sg" genericsValue="String" base_Element="_yRj6UGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yRnksGRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yRm9oWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yRoLwGRREe6bAesDIgR3sg" genericsValue="String" base_Element="_yRm9omRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yRoy0WRREe6bAesDIgR3sg" genericsValue="String" base_Element="_yRoy0GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yRpZ42RREe6bAesDIgR3sg" genericsValue="String" base_Element="_yRpZ4WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yRqoAGRREe6bAesDIgR3sg" base_Element="_yRqA8WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yRqoAmRREe6bAesDIgR3sg" genericsValue="Activation" base_Element="_yRqoAWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yRr2ImRREe6bAesDIgR3sg" base_Element="_yRrPEGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yRsdMGRREe6bAesDIgR3sg" genericsValue="Node" base_Element="_yRr2IGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yRsdMWRREe6bAesDIgR3sg" base_Element="_yRrPEGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yRsdMmRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yRtEQGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_yRsdM2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yRtrUGRREe6bAesDIgR3sg" base_Element="_yRtEQWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yRuSYWRREe6bAesDIgR3sg" base_Element="_yRtrUWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yRu5cGRREe6bAesDIgR3sg" base_Element="_yRtrUWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yRu5cWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yRvggGRREe6bAesDIgR3sg" genericsValue="String" base_Element="_yRu5cmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yRwHkWRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yRwHkGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yR0ZAWRREe6bAesDIgR3sg" base_Element="_yR0ZAGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yR21QGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_yR2OMGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yR3cUWRREe6bAesDIgR3sg" base_Element="_yR21QWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yR3cUmRREe6bAesDIgR3sg" base_Element="_yR21QWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yR3cU2RREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yR4DYGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_yR3cVGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yR4qdGRREe6bAesDIgR3sg" base_Element="_yR4qcGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yR5RgGRREe6bAesDIgR3sg" base_Element="_yR4qcGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yR5RgWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yR54kGRREe6bAesDIgR3sg" genericsValue="Node" base_Element="_yR5RgmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yR7twGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_yR7GsGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yR8U0WRREe6bAesDIgR3sg" base_Element="_yR7twWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yR8U0mRREe6bAesDIgR3sg" base_Element="_yR7twWRREe6bAesDIgR3sg">
    <annotations xmi:id="_yR8U02RREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yR874WRREe6bAesDIgR3sg" base_Element="_yR874GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yR-KAGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_yR9i82RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yR_YIGRREe6bAesDIgR3sg" base_Element="_yR-xEGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_yR_YIWRREe6bAesDIgR3sg" base_Element="_yR-xEGRREe6bAesDIgR3sg">
    <annotations xmi:id="_yR_YImRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySAmQmRREe6bAesDIgR3sg" base_Element="_yR__MGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_ySBNUGRREe6bAesDIgR3sg" genericsValue="Node" base_Element="_ySAmQGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_ySB0YGRREe6bAesDIgR3sg" base_Element="_yR__MGRREe6bAesDIgR3sg">
    <annotations xmi:id="_ySB0YWRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ySDCgGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_ySCbcGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySDpkWRREe6bAesDIgR3sg" base_Element="_ySDCgWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_ySDpkmRREe6bAesDIgR3sg" base_Element="_ySDCgWRREe6bAesDIgR3sg">
    <annotations xmi:id="_ySDpk2RREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ySE3sGRREe6bAesDIgR3sg" base_Element="_ySEQoGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_ySJwMGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_ySJJJmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_ySK-UGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_ySKXQWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_ySMMcGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_ySK-UmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_ySMzgGRREe6bAesDIgR3sg" genericsValue="T" base_Element="_ySK-U2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_ySOosGRREe6bAesDIgR3sg" genericsValue="E" base_Element="_ySOBo2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_ySP20WRREe6bAesDIgR3sg" base_Element="_ySP20GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_ySQd4WRREe6bAesDIgR3sg" base_Element="_ySQd4GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_ySSTEGRREe6bAesDIgR3sg" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_ySRsAmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySSTEWRREe6bAesDIgR3sg" base_Element="_ySRsAmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_ySYZsGRREe6bAesDIgR3sg" base_Element="_ySXyoWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_ySdSMGRREe6bAesDIgR3sg" base_Element="_yScrIGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_ySnqQGRREe6bAesDIgR3sg" genericsValue="Integer" base_Element="_ySnDMWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_ySr7s2RREe6bAesDIgR3sg" genericsValue="Node" base_Element="_ySr7sWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_ySsixGRREe6bAesDIgR3sg" base_Element="_ySsiwGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yStJ0GRREe6bAesDIgR3sg" genericsValue="Node" base_Element="_ySsiwWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_ySu_AGRREe6bAesDIgR3sg" genericsValue="Flow" base_Element="_ySuX8GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_ySzQcGRREe6bAesDIgR3sg" genericsValue="Node" base_Element="_ySyCUWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yS0ekGRREe6bAesDIgR3sg" genericsValue="Integer" base_Element="_ySz3gWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yS7MQGRREe6bAesDIgR3sg" genericsValue="Activation" base_Element="_yS6lMGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yS9ogGRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yS8aYWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yS-2oGRREe6bAesDIgR3sg" genericsValue="String" base_Element="_yS-PkWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yTAEwGRREe6bAesDIgR3sg" genericsValue="String" base_Element="_yS_dsWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yTAr0GRREe6bAesDIgR3sg" genericsValue="ScheduleTime" base_Element="_yTAEwmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTOuQGRREe6bAesDIgR3sg" base_Element="_yTOHMmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTOuQmRREe6bAesDIgR3sg" base_Element="_yTOuQWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTPVUWRREe6bAesDIgR3sg" base_Element="_yTPVUGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTP8YmRREe6bAesDIgR3sg" base_Element="_yTP8YWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTQjcGRREe6bAesDIgR3sg" base_Element="_yTP8Y2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTRKgWRREe6bAesDIgR3sg" base_Element="_yTRKgGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTRxkGRREe6bAesDIgR3sg" base_Element="_yTRKgmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yTRxkmRREe6bAesDIgR3sg" genericsValue="ChannelSet" base_Element="_yTRxkWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTSYoGRREe6bAesDIgR3sg" base_Element="_yTRxkWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yTS_sWRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yTS_sGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTS_smRREe6bAesDIgR3sg" base_Element="_yTS_sGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTTmwGRREe6bAesDIgR3sg" base_Element="_yTS_s2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yTUN0GRREe6bAesDIgR3sg" genericsValue="String" base_Element="_yTTmwWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTUN0WRREe6bAesDIgR3sg" base_Element="_yTTmwWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTU04GRREe6bAesDIgR3sg" base_Element="_yTUN0mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTU04mRREe6bAesDIgR3sg" base_Element="_yTU04WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTVb8WRREe6bAesDIgR3sg" base_Element="_yTVb8GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTWDAGRREe6bAesDIgR3sg" base_Element="_yTVb8mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTWDAmRREe6bAesDIgR3sg" base_Element="_yTWDAWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTWDBGRREe6bAesDIgR3sg" base_Element="_yTWDA2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTZGUWRREe6bAesDIgR3sg" base_Element="_yTZGUGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTaUdGRREe6bAesDIgR3sg" base_Element="_yTaUc2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTa7gGRREe6bAesDIgR3sg" base_Element="_yTaUdWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTa7gmRREe6bAesDIgR3sg" base_Element="_yTa7gWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTbikGRREe6bAesDIgR3sg" base_Element="_yTa7g2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTbikmRREe6bAesDIgR3sg" base_Element="_yTbikWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTbilGRREe6bAesDIgR3sg" base_Element="_yTbik2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTcwsGRREe6bAesDIgR3sg" base_Element="_yTcJoGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTdXwGRREe6bAesDIgR3sg" base_Element="_yTcwsWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTdXwmRREe6bAesDIgR3sg" base_Element="_yTdXwWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTel4GRREe6bAesDIgR3sg" base_Element="_yTd-0mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTfM8GRREe6bAesDIgR3sg" base_Element="_yTel4mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTfM82RREe6bAesDIgR3sg" base_Element="_yTfM8WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTgbEWRREe6bAesDIgR3sg" base_Element="_yTgbEGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTgbFWRREe6bAesDIgR3sg" base_Element="_yTgbE2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yThCIWRREe6bAesDIgR3sg" base_Element="_yThCIGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yThCI2RREe6bAesDIgR3sg" base_Element="_yThCImRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yThpMGRREe6bAesDIgR3sg" base_Element="_yThCJGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTiQQGRREe6bAesDIgR3sg" base_Element="_yThpMWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yTiQQmRREe6bAesDIgR3sg" genericsValue="String, Integer" base_Element="_yTiQQWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTi3UGRREe6bAesDIgR3sg" base_Element="_yTiQQWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTkFcWRREe6bAesDIgR3sg" base_Element="_yTkFcGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTksgGRREe6bAesDIgR3sg" base_Element="_yTkFcmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yTlTkmRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yTlTkWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yToW4GRREe6bAesDIgR3sg" base_Element="_yTnv0mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yToW4mRREe6bAesDIgR3sg" base_Element="_yToW4WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTo98GRREe6bAesDIgR3sg" base_Element="_yToW42RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTraMGRREe6bAesDIgR3sg" base_Element="_yTqzJGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTraMmRREe6bAesDIgR3sg" base_Element="_yTraMWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTsoUGRREe6bAesDIgR3sg" base_Element="_yTsBQmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTsoUmRREe6bAesDIgR3sg" base_Element="_yTsoUWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTvro2RREe6bAesDIgR3sg" base_Element="_yTvromRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTwSsWRREe6bAesDIgR3sg" base_Element="_yTwSsGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTwStGRREe6bAesDIgR3sg" base_Element="_yTwSsmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTw5wGRREe6bAesDIgR3sg" base_Element="_yTwStWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTw5wmRREe6bAesDIgR3sg" base_Element="_yTw5wWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTxg0GRREe6bAesDIgR3sg" base_Element="_yTw5w2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTxg0mRREe6bAesDIgR3sg" base_Element="_yTxg0WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTyH4WRREe6bAesDIgR3sg" base_Element="_yTyH4GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTzWAGRREe6bAesDIgR3sg" base_Element="_yTyu8GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTzWAmRREe6bAesDIgR3sg" base_Element="_yTzWAWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTzWBGRREe6bAesDIgR3sg" base_Element="_yTzWA2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTz9EWRREe6bAesDIgR3sg" base_Element="_yTz9EGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTz9E2RREe6bAesDIgR3sg" base_Element="_yTz9EmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTz9FWRREe6bAesDIgR3sg" base_Element="_yTz9FGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT0kImRREe6bAesDIgR3sg" base_Element="_yT0kIGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT1LMGRREe6bAesDIgR3sg" base_Element="_yT0kI2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT1LM2RREe6bAesDIgR3sg" base_Element="_yT1LMWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT1yQGRREe6bAesDIgR3sg" base_Element="_yT1LNGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT2ZUWRREe6bAesDIgR3sg" base_Element="_yT2ZUGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT2ZU2RREe6bAesDIgR3sg" base_Element="_yT2ZUmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT3AYWRREe6bAesDIgR3sg" base_Element="_yT3AYGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_yT3ncWRREe6bAesDIgR3sg" dimensions="2" base_Element="_yT3AZGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT3ncmRREe6bAesDIgR3sg" base_Element="_yT3AZGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT5coGRREe6bAesDIgR3sg" base_Element="_yT41l2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT5comRREe6bAesDIgR3sg" base_Element="_yT5coWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT6DsGRREe6bAesDIgR3sg" base_Element="_yT5co2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT6DsmRREe6bAesDIgR3sg" base_Element="_yT6DsWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT6qwGRREe6bAesDIgR3sg" base_Element="_yT6Ds2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT6qwmRREe6bAesDIgR3sg" base_Element="_yT6qwWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT7R0GRREe6bAesDIgR3sg" base_Element="_yT6qw2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT7R0mRREe6bAesDIgR3sg" base_Element="_yT7R0WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT744WRREe6bAesDIgR3sg" base_Element="_yT744GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT7442RREe6bAesDIgR3sg" base_Element="_yT744mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT8f8GRREe6bAesDIgR3sg" base_Element="_yT745GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT9HAGRREe6bAesDIgR3sg" base_Element="_yT8f8WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT9HAmRREe6bAesDIgR3sg" base_Element="_yT9HAWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT9uEGRREe6bAesDIgR3sg" base_Element="_yT9HA2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT9uE2RREe6bAesDIgR3sg" base_Element="_yT9uEWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT9uFWRREe6bAesDIgR3sg" base_Element="_yT9uFGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT-VIWRREe6bAesDIgR3sg" base_Element="_yT-VIGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT-8MGRREe6bAesDIgR3sg" base_Element="_yT-VImRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUAxZWRREe6bAesDIgR3sg" base_Element="_yUAxY2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUB_gGRREe6bAesDIgR3sg" base_Element="_yUBYcWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yUB_gmRREe6bAesDIgR3sg" genericsValue="InstructionParameters" base_Element="_yUB_gWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUCmkGRREe6bAesDIgR3sg" base_Element="_yUB_gWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUCmkmRREe6bAesDIgR3sg" base_Element="_yUCmkWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUG4AGRREe6bAesDIgR3sg" base_Element="_yUGQ82RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yUHfEWRREe6bAesDIgR3sg" genericsValue="Integer" base_Element="_yUHfEGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUIGIGRREe6bAesDIgR3sg" base_Element="_yUHfEGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yUIGImRREe6bAesDIgR3sg" genericsValue="SchedulableObject" base_Element="_yUIGIWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUKiYGRREe6bAesDIgR3sg" base_Element="_yUJ7V2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUKiYmRREe6bAesDIgR3sg" base_Element="_yUKiYWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yULJcGRREe6bAesDIgR3sg" base_Element="_yUKiY2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yULJcmRREe6bAesDIgR3sg" base_Element="_yULJcWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yULJdGRREe6bAesDIgR3sg" base_Element="_yULJc2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yULwgGRREe6bAesDIgR3sg" base_Element="_yULJdWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yULwgmRREe6bAesDIgR3sg" base_Element="_yULwgWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yULwhGRREe6bAesDIgR3sg" base_Element="_yULwg2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUMXkGRREe6bAesDIgR3sg" base_Element="_yULwhWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUMXkmRREe6bAesDIgR3sg" base_Element="_yUMXkWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUMXlGRREe6bAesDIgR3sg" base_Element="_yUMXk2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUM-oGRREe6bAesDIgR3sg" base_Element="_yUMXlWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUM-omRREe6bAesDIgR3sg" base_Element="_yUM-oWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUOMwWRREe6bAesDIgR3sg" base_Element="_yUOMwGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUOz0GRREe6bAesDIgR3sg" base_Element="_yUOMwmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUOz0mRREe6bAesDIgR3sg" base_Element="_yUOz0WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUOz1GRREe6bAesDIgR3sg" base_Element="_yUOz02RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUPa4GRREe6bAesDIgR3sg" base_Element="_yUOz1WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUPa4mRREe6bAesDIgR3sg" base_Element="_yUPa4WRREe6bAesDIgR3sg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_yUPa42RREe6bAesDIgR3sg" name="getNumChannels" method="_yVuooGRREe6bAesDIgR3sg">
      <ownedParameter xmi:id="_yUQB8GRREe6bAesDIgR3sg" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_yUQB8WRREe6bAesDIgR3sg" base_Element="_yUPa42RREe6bAesDIgR3sg">
    <annotations xmi:id="_yUQB8mRREe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUQpAGRREe6bAesDIgR3sg" base_Element="_yUQB82RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUQpA2RREe6bAesDIgR3sg" base_Element="_yUQpAWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUSeNmRREe6bAesDIgR3sg" base_Element="_yUSeNGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUTFRGRREe6bAesDIgR3sg" base_Element="_yUTFQmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUTsUWRREe6bAesDIgR3sg" base_Element="_yUTsUGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yUUTYGRREe6bAesDIgR3sg" genericsValue="String" base_Element="_yUTsUmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yUU6cGRREe6bAesDIgR3sg" genericsValue="String" base_Element="_yUUTYmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUWvo2RREe6bAesDIgR3sg" base_Element="_yUWvomRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUWvpWRREe6bAesDIgR3sg" base_Element="_yUWvpGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUXWsGRREe6bAesDIgR3sg" base_Element="_yUWvpmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUX9wGRREe6bAesDIgR3sg" base_Element="_yUXWsmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUX9wmRREe6bAesDIgR3sg" base_Element="_yUX9wWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUYk0WRREe6bAesDIgR3sg" base_Element="_yUYk0GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUZL4GRREe6bAesDIgR3sg" base_Element="_yUYk0mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUZL5WRREe6bAesDIgR3sg" base_Element="_yUZL4WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUZy8GRREe6bAesDIgR3sg" base_Element="_yUZL5mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUZy8mRREe6bAesDIgR3sg" base_Element="_yUZy8WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yUaaAGRREe6bAesDIgR3sg" genericsValue="Activation" base_Element="_yUZy82RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUaaAWRREe6bAesDIgR3sg" base_Element="_yUZy82RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yUaaA2RREe6bAesDIgR3sg" genericsValue="String, Integer" base_Element="_yUaaAmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUbBEGRREe6bAesDIgR3sg" base_Element="_yUaaAmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUboIWRREe6bAesDIgR3sg" base_Element="_yUboIGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUfSgWRREe6bAesDIgR3sg" base_Element="_yUerdWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUf5kGRREe6bAesDIgR3sg" base_Element="_yUfSgmRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUf5kmRREe6bAesDIgR3sg" base_Element="_yUf5kWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yUggoGRREe6bAesDIgR3sg" genericsValue="Node" base_Element="_yUf5k2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUggoWRREe6bAesDIgR3sg" base_Element="_yUf5k2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yUhHsGRREe6bAesDIgR3sg" genericsValue="Integer" base_Element="_yUggomRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUhHsWRREe6bAesDIgR3sg" base_Element="_yUggomRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yUhuwWRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yUhuwGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUiV0GRREe6bAesDIgR3sg" base_Element="_yUhuwGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUi84GRREe6bAesDIgR3sg" base_Element="_yUiV0WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUjj8GRREe6bAesDIgR3sg" base_Element="_yUi84WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yUn1YGRREe6bAesDIgR3sg" genericsValue="String" base_Element="_yUlZIGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yUpDgGRREe6bAesDIgR3sg" genericsValue="Edge" base_Element="_yUn1YWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_yUpqkGRREe6bAesDIgR3sg" genericsValue="ScheduleTime" base_Element="_yUpDgWRREe6bAesDIgR3sg"/>
  <uml:OpaqueBehavior xmi:id="_yVuooGRREe6bAesDIgR3sg" name="getNumChannels" specification="_yUPa42RREe6bAesDIgR3sg">
    <ownedParameter xmi:id="_yVuooWRREe6bAesDIgR3sg" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_yW0NwGRREe6bAesDIgR3sg" base_Element="_yWzmsGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW000mRREe6bAesDIgR3sg" base_Element="_yW000GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW1b4GRREe6bAesDIgR3sg" base_Element="_yW0002RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW1b42RREe6bAesDIgR3sg" base_Element="_yW1b4WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW2C8GRREe6bAesDIgR3sg" base_Element="_yW1b5GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW2qAGRREe6bAesDIgR3sg" base_Element="_yW2C8WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW3REGRREe6bAesDIgR3sg" base_Element="_yW2qAWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW34IGRREe6bAesDIgR3sg" base_Element="_yW3REWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW6UYGRREe6bAesDIgR3sg" base_Element="_yW34IWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW67cGRREe6bAesDIgR3sg" base_Element="_yW6UYWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW7igmRREe6bAesDIgR3sg" base_Element="_yW7igGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW8JkGRREe6bAesDIgR3sg" base_Element="_yW7ig2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW9XsGRREe6bAesDIgR3sg" base_Element="_yW8woGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW-l0GRREe6bAesDIgR3sg" base_Element="_yW9XsWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW_M4GRREe6bAesDIgR3sg" base_Element="_yW-l0WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yW_z8GRREe6bAesDIgR3sg" base_Element="_yW_M4WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXAbAGRREe6bAesDIgR3sg" base_Element="_yW_z8WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXBCEGRREe6bAesDIgR3sg" base_Element="_yXAbAWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXBpIGRREe6bAesDIgR3sg" base_Element="_yXBCEWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXC3QGRREe6bAesDIgR3sg" base_Element="_yXBpIWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXDeUGRREe6bAesDIgR3sg" base_Element="_yXC3QWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXEFYGRREe6bAesDIgR3sg" base_Element="_yXDeUWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXEscmRREe6bAesDIgR3sg" base_Element="_yXEscGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXGhoGRREe6bAesDIgR3sg" base_Element="_yXFTgGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXHvwGRREe6bAesDIgR3sg" base_Element="_yXGhoWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXIW0GRREe6bAesDIgR3sg" base_Element="_yXHvwWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXI94GRREe6bAesDIgR3sg" base_Element="_yXIW0WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXI942RREe6bAesDIgR3sg" base_Element="_yXI94WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXJk8mRREe6bAesDIgR3sg" base_Element="_yXJk8GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXKMAGRREe6bAesDIgR3sg" base_Element="_yXJk82RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXKzEmRREe6bAesDIgR3sg" base_Element="_yXKzEGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXMBMGRREe6bAesDIgR3sg" base_Element="_yXLaIGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXMBM2RREe6bAesDIgR3sg" base_Element="_yXMBMWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXMoQmRREe6bAesDIgR3sg" base_Element="_yXMoQGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXNPUGRREe6bAesDIgR3sg" base_Element="_yXMoQ2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXN2YGRREe6bAesDIgR3sg" base_Element="_yXNPUWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXN2Y2RREe6bAesDIgR3sg" base_Element="_yXN2YWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXOdcmRREe6bAesDIgR3sg" base_Element="_yXOdcGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXPEgmRREe6bAesDIgR3sg" base_Element="_yXPEgGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXPrkGRREe6bAesDIgR3sg" base_Element="_yXPEg2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXQSoGRREe6bAesDIgR3sg" base_Element="_yXPrkWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXQ5sGRREe6bAesDIgR3sg" base_Element="_yXQSoWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXQ5s2RREe6bAesDIgR3sg" base_Element="_yXQ5sWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXRgwmRREe6bAesDIgR3sg" base_Element="_yXRgwGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXSH0GRREe6bAesDIgR3sg" base_Element="_yXRgw2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXSH02RREe6bAesDIgR3sg" base_Element="_yXSH0WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXSu4mRREe6bAesDIgR3sg" base_Element="_yXSu4GRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXSu5WRREe6bAesDIgR3sg" base_Element="_yXSu42RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXTV8GRREe6bAesDIgR3sg" base_Element="_yXSu5mRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXTV82RREe6bAesDIgR3sg" base_Element="_yXTV8WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXT9AmRREe6bAesDIgR3sg" base_Element="_yXT9AGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXVLIGRREe6bAesDIgR3sg" base_Element="_yXUkEGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXVyMGRREe6bAesDIgR3sg" base_Element="_yXVLIWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXWZQGRREe6bAesDIgR3sg" base_Element="_yXVyMWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXXAUGRREe6bAesDIgR3sg" base_Element="_yXWZQWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXXnYmRREe6bAesDIgR3sg" base_Element="_yXXnYGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXYOcGRREe6bAesDIgR3sg" base_Element="_yXXnY2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXY1gGRREe6bAesDIgR3sg" base_Element="_yXYOcWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXZckGRREe6bAesDIgR3sg" base_Element="_yXY1gWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXaDoGRREe6bAesDIgR3sg" base_Element="_yXZckWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXb40GRREe6bAesDIgR3sg" base_Element="_yXaqsGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXdG8GRREe6bAesDIgR3sg" base_Element="_yXb40WRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXduAmRREe6bAesDIgR3sg" base_Element="_yXduAGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXeVEGRREe6bAesDIgR3sg" base_Element="_yXduA2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXe8IGRREe6bAesDIgR3sg" base_Element="_yXeVEWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXfjMGRREe6bAesDIgR3sg" base_Element="_yXe8IWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXhYYGRREe6bAesDIgR3sg" base_Element="_yXgKQGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXh_cGRREe6bAesDIgR3sg" base_Element="_yXhYYWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXimgmRREe6bAesDIgR3sg" base_Element="_yXimgGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXj0oGRREe6bAesDIgR3sg" base_Element="_yXjNkGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXkbsGRREe6bAesDIgR3sg" base_Element="_yXj0oWRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXlCwmRREe6bAesDIgR3sg" base_Element="_yXlCwGRREe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_yXlp0GRREe6bAesDIgR3sg" base_Element="_yXlCw2RREe6bAesDIgR3sg"/>
  <UMLLabProfile:Patch xmi:id="_zHvUYGRREe6bAesDIgR3sg" base_Element="_x-zWYmRREe6bAesDIgR3sg" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_zHxwoGRREe6bAesDIgR3sg" base_Element="_yAOSsWRREe6bAesDIgR3sg" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_zHy-wGRREe6bAesDIgR3sg" base_Element="_yAVAYGRREe6bAesDIgR3sg" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_zH1bAGRREe6bAesDIgR3sg" base_Element="_yAyTYGRREe6bAesDIgR3sg" patchText="@@ -3770,22 +3770,25 @@&#xA; f, ra)%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_6Sm5YGUyEe6bAesDIgR3sg" base_Element="_x_QCUGRREe6bAesDIgR3sg" patchText="@@ -704,16 +704,18 @@&#xA; MISS%22;%0D%0A&#xA;+  &#xA; private &#xA;" conflicting="false"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="__BZ9UH9pEe6F645s24XfkQ" base_Element="__BZWQH9pEe6F645s24XfkQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="__BZ9Un9pEe6F645s24XfkQ" base_Element="__BZ9UX9pEe6F645s24XfkQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="__BakYX9pEe6F645s24XfkQ" base_Element="__BakYH9pEe6F645s24XfkQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="__BbLcH9pEe6F645s24XfkQ" base_Element="__BakYn9pEe6F645s24XfkQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="__BbLcn9pEe6F645s24XfkQ" base_Element="__BbLcX9pEe6F645s24XfkQ"/>
  <UMLLabProfile:Reference xmi:id="__BjuUH9pEe6F645s24XfkQ" base_Element="__BgD8H9pEe6F645s24XfkQ"/>
</xmi:XMI>
