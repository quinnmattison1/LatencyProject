<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_pN5n0GRZEe6bAesDIgR3sg" name="WorkLoad">
    <eAnnotations xmi:id="_pSWC8GRZEe6bAesDIgR3sg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_pSWC8WRZEe6bAesDIgR3sg" source="codegen">
        <details xmi:id="_pSWC8mRZEe6bAesDIgR3sg" key="codegenDirectory" value="/cs2820-fall23/src"/>
        <details xmi:id="_q5OhMGRZEe6bAesDIgR3sg" key="AssociatedSourceCode" value="/cs2820-fall23/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall23/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-fall23/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall23/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall23/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall23/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall23/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall23/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall23/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall23/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall23/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall23/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-fall23/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall23/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall23/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2180699923/1;/cs2820-fall23/src/edu/uiowa/cs/warp/LatencyVisualization.java;785897799/1;/cs2820-fall23/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall23/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall23/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall23/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall23/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall23/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall23/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820-fall23/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall23/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ProgramVisualization.java;1088040009/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;2919449855/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;4166646452/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall23/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall23/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Program.java;2230631585/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall23/src/edu/uiowa/cs/warp/VisualizationImplementation.java;400555688/1;/cs2820-fall23/src/edu/uiowa/cs/warp/VisualizationObject.java;1359121486/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Warp.java;1458699109/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Flow.java;3142956155/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WorkLoad.java;1720029430/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WorkLoadDescription.java;2732187131/1;/cs2820-fall23/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall23/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_pvggEGRZEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_pvggEWRZEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_pvggEmRZEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_pvggE2RZEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_pvggFGRZEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_pvggFWRZEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_pvggFmRZEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_pvggF2RZEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_pvggGGRZEe6bAesDIgR3sg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_pvR2kGRZEe6bAesDIgR3sg" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_pvSdoGRZEe6bAesDIgR3sg" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_pvSdoWRZEe6bAesDIgR3sg" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_pvSdpGRZEe6bAesDIgR3sg" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_pvkKcGRZEe6bAesDIgR3sg" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_qAFSsmRZEe6bAesDIgR3sg" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_pvob4GRZEe6bAesDIgR3sg" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_qAMncGRZEe6bAesDIgR3sg" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_qAMncmRZEe6bAesDIgR3sg" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_pvvwoGRZEe6bAesDIgR3sg" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_qAbQ8GRZEe6bAesDIgR3sg" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pxjugGRZEe6bAesDIgR3sg" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_qBu4gGRZEe6bAesDIgR3sg" general="_p_bLYGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qC9AgGRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qC9AgWRZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD4NkGRZEe6bAesDIgR3sg" name="AbstractMap" specification="_pxk8oGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD4NkWRZEe6bAesDIgR3sg" type="_pxjugGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pxk8oGRZEe6bAesDIgR3sg" name="AbstractMap" method="_qD4NkGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pxljsGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pxljsWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pxljsmRZEe6bAesDIgR3sg" type="_pxjugGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pxmKwGRZEe6bAesDIgR3sg" name="Activations">
              <generalization xmi:id="_p_dAkGRZEe6bAesDIgR3sg" general="_pxjugGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qC9AgmRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qC9Ag2RZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pxnY4GRZEe6bAesDIgR3sg" name="BasicPoset">
              <ownedComment xmi:id="_qEc1UGRZEe6bAesDIgR3sg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_p_dnpWRZEe6bAesDIgR3sg" general="_pzzxQGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD40oGRZEe6bAesDIgR3sg" name="BasicPoset" specification="_p_dnoGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD40oWRZEe6bAesDIgR3sg" name="workload" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD40omRZEe6bAesDIgR3sg" type="_pxnY4GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p_dnoGRZEe6bAesDIgR3sg" name="BasicPoset" visibility="package" method="_qD40oGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p_dnomRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p_dno2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p_dnoWRZEe6bAesDIgR3sg" name="workload" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_dnpGRZEe6bAesDIgR3sg" type="_pxnY4GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pxn_8GRZEe6bAesDIgR3sg" name="ChannelAnalysis">
              <ownedComment xmi:id="_qEdcYGRZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qC9AhGRZEe6bAesDIgR3sg" name="program" visibility="private" type="_pzoLEGRZEe6bAesDIgR3sg" association="_qE3FAGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qC9nkWRZEe6bAesDIgR3sg" name="programTable" visibility="private" type="_pywoZWRZEe6bAesDIgR3sg" association="_qE3sEWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qC9nk2RZEe6bAesDIgR3sg" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD40o2RZEe6bAesDIgR3sg" name="ChannelAnalysis" specification="_p_eOsGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD40pGRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD40pWRZEe6bAesDIgR3sg" type="_pxn_8GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD40pmRZEe6bAesDIgR3sg" name="ChannelAnalysis" specification="_p_eOtWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD40p2RZEe6bAesDIgR3sg" name="program" type="_pzoLEGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD40qGRZEe6bAesDIgR3sg" type="_pxn_8GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD40qWRZEe6bAesDIgR3sg" name="isChannelConflict" specification="_pxn_8WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD40qmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pxn_8WRZEe6bAesDIgR3sg" name="isChannelConflict" method="_qD40qWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pxn_8mRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p_eOsGRZEe6bAesDIgR3sg" name="ChannelAnalysis" visibility="package" method="_qD40o2RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p_eOsmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p_eOs2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p_eOsWRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_eOtGRZEe6bAesDIgR3sg" type="_pxn_8GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p_eOtWRZEe6bAesDIgR3sg" name="ChannelAnalysis" visibility="package" method="_qD40pmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p_eOt2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p_eOuGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p_eOtmRZEe6bAesDIgR3sg" name="program" type="_pzoLEGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_eOuWRZEe6bAesDIgR3sg" type="_pxn_8GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pxonAGRZEe6bAesDIgR3sg" name="ChannelVisualization">
              <ownedComment xmi:id="_qEdcYWRZEe6bAesDIgR3sg">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_p_e1xWRZEe6bAesDIgR3sg" general="_p0AlkGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qC-OoWRZEe6bAesDIgR3sg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qC-OomRZEe6bAesDIgR3sg" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qC-Oo2RZEe6bAesDIgR3sg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qC-OpGRZEe6bAesDIgR3sg" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qC-OpWRZEe6bAesDIgR3sg" name="warp" visibility="private" type="_p0S5cGRZEe6bAesDIgR3sg" association="_qE3sFGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qC-Op2RZEe6bAesDIgR3sg" name="ca" visibility="private" type="_pxn_8GRZEe6bAesDIgR3sg" association="_qE4TIWRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD40q2RZEe6bAesDIgR3sg" name="ChannelVisualization" specification="_p_e1wGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD40rGRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD40rWRZEe6bAesDIgR3sg" type="_pxonAGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p_e1wGRZEe6bAesDIgR3sg" name="ChannelVisualization" visibility="package" method="_qD40q2RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p_e1wmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p_e1w2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p_e1wWRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_e1xGRZEe6bAesDIgR3sg" type="_pxonAGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pxp1IGRZEe6bAesDIgR3sg" name="Channels">
              <ownedComment xmi:id="_qEdcYmRZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qC_cwmRZEe6bAesDIgR3sg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDAq4WRZEe6bAesDIgR3sg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDBR8GRZEe6bAesDIgR3sg" name="channelsAvailable" visibility="package" type="_p_fc0GRZEe6bAesDIgR3sg" association="_qE4TJGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD40s2RZEe6bAesDIgR3sg" name="Channels" specification="_pxrDQ2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD40tGRZEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD40tWRZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD40tmRZEe6bAesDIgR3sg" type="_pxp1IGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD40t2RZEe6bAesDIgR3sg" name="getChannelSet" specification="_pxrqU2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD40uGRZEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD40uWRZEe6bAesDIgR3sg" type="_p_fc0mRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD40umRZEe6bAesDIgR3sg" name="addNewChannelSet" specification="_pxsRYWRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD5bsGRZEe6bAesDIgR3sg" name="isEmpty" specification="_pxsRYmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD5bsWRZEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD5bsmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD5bs2RZEe6bAesDIgR3sg" name="removeChannel" specification="_pxs4cGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD5btGRZEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD5btWRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD5btmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD5bt2RZEe6bAesDIgR3sg" name="addChannel" specification="_pxs4dGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD5buGRZEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD5buWRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD5bumRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD5bu2RZEe6bAesDIgR3sg" name="getNumChannels" specification="_pxs4eGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD5bvGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pxrDQ2RZEe6bAesDIgR3sg" name="Channels" visibility="package" method="_qD40s2RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pxrqUGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pxrqUWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pxrDRGRZEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxrDRWRZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxrqUmRZEe6bAesDIgR3sg" type="_pxp1IGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pxrqU2RZEe6bAesDIgR3sg" name="getChannelSet" method="_qD40t2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pxrqVGRZEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qBwtsGRZEe6bAesDIgR3sg" type="_p_fc0mRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pxsRYWRZEe6bAesDIgR3sg" name="addNewChannelSet" method="_qD40umRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pxsRYmRZEe6bAesDIgR3sg" name="isEmpty" method="_qD5bsGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pxsRY2RZEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxsRZGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pxs4cGRZEe6bAesDIgR3sg" name="removeChannel" method="_qD5bs2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pxs4cWRZEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxs4cmRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxs4c2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pxs4dGRZEe6bAesDIgR3sg" name="addChannel" method="_qD5bt2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pxs4dWRZEe6bAesDIgR3sg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxs4dmRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxs4d2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pxs4eGRZEe6bAesDIgR3sg" name="getNumChannels" method="_qD5bu2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pxs4eWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_pxp1IWRZEe6bAesDIgR3sg" name="ChannelSet" visibility="private">
                <generalization xmi:id="_qBvfkGRZEe6bAesDIgR3sg" general="_p_fc0mRZEe6bAesDIgR3sg"/>
                <ownedAttribute xmi:id="_qC_cwGRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_qC_cwWRZEe6bAesDIgR3sg" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD40rmRZEe6bAesDIgR3sg" name="ChannelSet" specification="_pxqcMGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qD40r2RZEe6bAesDIgR3sg" type="_pxp1IWRZEe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD40sGRZEe6bAesDIgR3sg" name="ChannelSet" specification="_pxqcNGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qD40sWRZEe6bAesDIgR3sg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_qD40smRZEe6bAesDIgR3sg" type="_pxp1IWRZEe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_pxqcMGRZEe6bAesDIgR3sg" name="ChannelSet" visibility="private" method="_qD40rmRZEe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_pxqcMWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_pxqcMmRZEe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_pxqcM2RZEe6bAesDIgR3sg" type="_pxp1IWRZEe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_pxqcNGRZEe6bAesDIgR3sg" name="ChannelSet" visibility="private" method="_qD40sGRZEe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_pxrDQGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_pxrDQWRZEe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_pxqcNWRZEe6bAesDIgR3sg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_pxrDQmRZEe6bAesDIgR3sg" type="_pxp1IWRZEe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pxtfgGRZEe6bAesDIgR3sg" name="CodeFragment">
              <ownedAttribute xmi:id="_qDB5AGRZEe6bAesDIgR3sg" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDB5AWRZEe6bAesDIgR3sg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDB5AmRZEe6bAesDIgR3sg" name="edges" visibility="package" type="_p_fc0GRZEe6bAesDIgR3sg" association="_qE46MWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDCgEmRZEe6bAesDIgR3sg" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDCgFGRZEe6bAesDIgR3sg" name="codeFragment" visibility="package" type="_p_fc0GRZEe6bAesDIgR3sg" association="_qE5hQGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDDHImRZEe6bAesDIgR3sg" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDDHJGRZEe6bAesDIgR3sg" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD5bvWRZEe6bAesDIgR3sg" name="CodeFragment" specification="_pxuGkGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD5bvmRZEe6bAesDIgR3sg" type="_pxtfgGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6CwGRZEe6bAesDIgR3sg" name="CodeFragment" specification="_qBxUwGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6CwWRZEe6bAesDIgR3sg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6CwmRZEe6bAesDIgR3sg" name="edges" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD6Cw2RZEe6bAesDIgR3sg" name="coordinators" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD6CxGRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6CxWRZEe6bAesDIgR3sg" type="_pxtfgGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6CxmRZEe6bAesDIgR3sg" name="getCoordinator" specification="_pxutoGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6Cx2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6CyGRZEe6bAesDIgR3sg" name="instructions" specification="_pxutomRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6CyWRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6CymRZEe6bAesDIgR3sg" name="size" specification="_pxvUsWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6Cy2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6CzGRZEe6bAesDIgR3sg" name="generateCodeFragment" specification="_pxvUs2RZEe6bAesDIgR3sg">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6CzWRZEe6bAesDIgR3sg" name="getBaseInstruction" specification="_pxv7wGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6CzmRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6Cz2RZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6C0GRZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6C0WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6C0mRZEe6bAesDIgR3sg" name="push" specification="_pxwi0GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6C02RZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6C1GRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6C1WRZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6C1mRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6C12RZEe6bAesDIgR3sg" name="pull" specification="_pxxJ4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6C2GRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6C2WRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6C2mRZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6C22RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6C3GRZEe6bAesDIgR3sg" name="ifHas" specification="_pxxJ5WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6C3WRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6C3mRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6C32RZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6C4GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6p0GRZEe6bAesDIgR3sg" name="ifNotHas" specification="_pxxw8mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6p0WRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6p0mRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6p02RZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6p1GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6p1WRZEe6bAesDIgR3sg" name="wait" specification="_pxxw92RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6p1mRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6p12RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6p2GRZEe6bAesDIgR3sg" name="sleep" specification="_pxxw-mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6p2WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6p2mRZEe6bAesDIgR3sg" name="reportIfDifferentCoordinators" specification="_qB0YEGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6p22RZEe6bAesDIgR3sg" name="coordinators" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6p3GRZEe6bAesDIgR3sg" name="multipleCoordinators" specification="_qB1mMGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6p3WRZEe6bAesDIgR3sg" name="coordinators" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD6p3mRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pxuGkGRZEe6bAesDIgR3sg" name="CodeFragment" visibility="package" method="_qD5bvWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pxuGkWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pxuGkmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEdcY2RZEe6bAesDIgR3sg">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_pxuGk2RZEe6bAesDIgR3sg" type="_pxtfgGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pxutoGRZEe6bAesDIgR3sg" name="getCoordinator" method="_qD6CxmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEdcZWRZEe6bAesDIgR3sg">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_pxutoWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pxutomRZEe6bAesDIgR3sg" name="instructions" method="_qD6CyGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEdcZmRZEe6bAesDIgR3sg">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_qBzJ8mRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pxvUsWRZEe6bAesDIgR3sg" name="size" method="_qD6CymRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEdcZ2RZEe6bAesDIgR3sg">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_pxvUsmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pxvUs2RZEe6bAesDIgR3sg" name="generateCodeFragment" visibility="private" method="_qD6CzGRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pxv7wGRZEe6bAesDIgR3sg" name="getBaseInstruction" visibility="private" method="_qD6CzWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pxv7wWRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxv7wmRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxv7w2RZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxv7xGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pxwi0GRZEe6bAesDIgR3sg" name="push" visibility="private" method="_qD6C0mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pxwi0WRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxwi0mRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxwi02RZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxwi1GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pxxJ4GRZEe6bAesDIgR3sg" name="pull" visibility="private" method="_qD6C12RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pxxJ4WRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxxJ4mRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxxJ42RZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxxJ5GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pxxJ5WRZEe6bAesDIgR3sg" name="ifHas" visibility="private" method="_qD6C3GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pxxJ5mRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxxJ52RZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxxw8GRZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxxw8WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pxxw8mRZEe6bAesDIgR3sg" name="ifNotHas" visibility="private" method="_qD6p0GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pxxw82RZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxxw9GRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxxw9WRZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxxw9mRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pxxw92RZEe6bAesDIgR3sg" name="wait" method="_qD6p1WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pxxw-GRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxxw-WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pxxw-mRZEe6bAesDIgR3sg" name="sleep" isStatic="true" method="_qD6p2GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pxyYAGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qBxUwGRZEe6bAesDIgR3sg" name="CodeFragment" visibility="package" method="_qD6CwGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qBx71GRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qBx71WRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEdcZGRZEe6bAesDIgR3sg">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_qBx70GRZEe6bAesDIgR3sg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qBx70WRZEe6bAesDIgR3sg" name="edges" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qBx70mRZEe6bAesDIgR3sg" name="coordinators" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qBx702RZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qByi4GRZEe6bAesDIgR3sg" type="_pxtfgGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qB0YEGRZEe6bAesDIgR3sg" name="reportIfDifferentCoordinators" visibility="private" method="_qD6p2mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qB0YEWRZEe6bAesDIgR3sg" name="coordinators" type="_p_fc0GRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qB1mMGRZEe6bAesDIgR3sg" name="multipleCoordinators" visibility="private" method="_qD6p3GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qB1mMWRZEe6bAesDIgR3sg" name="coordinators" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qB1mMmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pxzmIGRZEe6bAesDIgR3sg" name="CombinedActivation">
              <generalization xmi:id="_p_nYoWRZEe6bAesDIgR3sg" general="_p1H_4GRZEe6bAesDIgR3sg"/>
              <interfaceRealization xmi:id="_qB20UmRZEe6bAesDIgR3sg" client="_pxzmIGRZEe6bAesDIgR3sg" supplier="_qB20UGRZEe6bAesDIgR3sg" contract="_qB20UGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6p32RZEe6bAesDIgR3sg" name="CombinedActivation" specification="_pxzmIWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6p4GRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6p4WRZEe6bAesDIgR3sg" type="_pxzmIGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6p4mRZEe6bAesDIgR3sg" name="CombinedActivation" specification="_p_k8YGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6p42RZEe6bAesDIgR3sg" name="elem" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD6p5GRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD6p5WRZEe6bAesDIgR3sg" type="_pxzmIGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6p5mRZEe6bAesDIgR3sg" name="CombinedActivation" specification="_p_mKgGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6p52RZEe6bAesDIgR3sg" name="priorEntry" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD6p6GRZEe6bAesDIgR3sg" name="next" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD6p6WRZEe6bAesDIgR3sg" type="_pxzmIGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD6p6mRZEe6bAesDIgR3sg" name="canCombine" specification="_p_mxkGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD6p62RZEe6bAesDIgR3sg" name="a2" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD6p7GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pxzmIWRZEe6bAesDIgR3sg" name="CombinedActivation" visibility="package" method="_qD6p32RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pxzmI2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pxzmJGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pxzmImRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pxzmJWRZEe6bAesDIgR3sg" type="_pxzmIGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p_k8YGRZEe6bAesDIgR3sg" name="CombinedActivation" visibility="package" method="_qD6p4mRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p_ljcGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p_ljcWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p_k8YWRZEe6bAesDIgR3sg" name="elem" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_k8YmRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p_ljcmRZEe6bAesDIgR3sg" type="_pxzmIGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p_mKgGRZEe6bAesDIgR3sg" name="CombinedActivation" visibility="package" method="_qD6p5mRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p_mKg2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p_mKhGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p_mKgWRZEe6bAesDIgR3sg" name="priorEntry" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_mKgmRZEe6bAesDIgR3sg" name="next" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_mKhWRZEe6bAesDIgR3sg" type="_pxzmIGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p_mxkGRZEe6bAesDIgR3sg" name="canCombine" method="_qD6p6mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p_mxkWRZEe6bAesDIgR3sg" name="a2" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_mxkmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_px00QGRZEe6bAesDIgR3sg" name="CommunicationGraph">
              <ownedComment xmi:id="_qEdcaGRZEe6bAesDIgR3sg">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_p_omwWRZEe6bAesDIgR3sg" general="_p0AlkGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDDuMGRZEe6bAesDIgR3sg" name="wfm" visibility="package" type="_px_MUGRZEe6bAesDIgR3sg" association="_qE7WcGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDDuMmRZEe6bAesDIgR3sg" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDEVQWRZEe6bAesDIgR3sg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDEVQ2RZEe6bAesDIgR3sg" name="workLoad" visibility="package" type="_p0mbcGRZEe6bAesDIgR3sg" association="_qE79gWRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD7Q4GRZEe6bAesDIgR3sg" name="CommunicationGraph" specification="_p_nYomRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD7Q4WRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD7Q4mRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD7Q42RZEe6bAesDIgR3sg" type="_px00QGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD7Q5GRZEe6bAesDIgR3sg" name="CommunicationGraph" specification="_p_n_sGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD7Q5WRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD7Q5mRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD7Q52RZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD7Q6GRZEe6bAesDIgR3sg" type="_px00QGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD7Q6WRZEe6bAesDIgR3sg" name="createHeader" specification="_px1bUGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD7Q6mRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD7Q62RZEe6bAesDIgR3sg" name="createFooter" specification="_px2CYGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD7Q7GRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD7Q7WRZEe6bAesDIgR3sg" name="visualization" specification="_px2CZGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD7Q7mRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD7Q72RZEe6bAesDIgR3sg" name="createWarpFileContent" specification="_px2pcmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD7Q8GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_px1bUGRZEe6bAesDIgR3sg" name="createHeader" method="_qD7Q6WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p_n_t2RZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_px2CYGRZEe6bAesDIgR3sg" name="createFooter" method="_qD7Q62RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p_n_uGRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_px2CZGRZEe6bAesDIgR3sg" name="visualization" method="_qD7Q7WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p_omwGRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_px2pcmRZEe6bAesDIgR3sg" name="createWarpFileContent" method="_qD7Q72RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_px2pc2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p_nYomRZEe6bAesDIgR3sg" name="CommunicationGraph" method="_qD7Q4GRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p_nYpWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p_nYpmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p_nYo2RZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_nYpGRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_nYp2RZEe6bAesDIgR3sg" type="_px00QGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p_n_sGRZEe6bAesDIgR3sg" name="CommunicationGraph" method="_qD7Q5GRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p_n_tGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p_n_tWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p_n_sWRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_n_smRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_n_s2RZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p_n_tmRZEe6bAesDIgR3sg" type="_px00QGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_px3QgGRZEe6bAesDIgR3sg" name="ConnectivityPoset">
              <ownedComment xmi:id="_qEdcaWRZEe6bAesDIgR3sg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_p_pN0GRZEe6bAesDIgR3sg" general="_pzzxQGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD7Q8WRZEe6bAesDIgR3sg" name="ConnectivityPoset" specification="_p_omwmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD7Q8mRZEe6bAesDIgR3sg" name="workload" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD7Q82RZEe6bAesDIgR3sg" type="_px3QgGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD738GRZEe6bAesDIgR3sg" name="findCoordinator" specification="_qB3bYGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD738WRZEe6bAesDIgR3sg" name="nodesInFlow" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD738mRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p_omwmRZEe6bAesDIgR3sg" name="ConnectivityPoset" visibility="package" method="_qD7Q8WRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p_omxGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p_omxWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p_omw2RZEe6bAesDIgR3sg" name="workload" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_omxmRZEe6bAesDIgR3sg" type="_px3QgGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qB3bYGRZEe6bAesDIgR3sg" name="findCoordinator" visibility="protected" method="_qD738GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qB3bYWRZEe6bAesDIgR3sg" name="nodesInFlow" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qB3bYmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_px33kGRZEe6bAesDIgR3sg" name="DeadlineComparator">
              <interfaceRealization xmi:id="_qB4Cc2RZEe6bAesDIgR3sg" client="_px33kGRZEe6bAesDIgR3sg" supplier="_p_p04GRZEe6bAesDIgR3sg" contract="_p_p04GRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD7382RZEe6bAesDIgR3sg" name="compare" specification="_qB53oGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD739GRZEe6bAesDIgR3sg" name="obj1" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD739WRZEe6bAesDIgR3sg" name="obj2" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD739mRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qB53oGRZEe6bAesDIgR3sg" name="compare" method="_qD7382RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qB53oWRZEe6bAesDIgR3sg" name="obj1" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qB53omRZEe6bAesDIgR3sg" name="obj2" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qB53o2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_px4eoGRZEe6bAesDIgR3sg" name="Description">
              <ownedComment xmi:id="_qEdcamRZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_qB53p2RZEe6bAesDIgR3sg" general="_p_fc0GRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDE8UWRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDE8UmRZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD7392RZEe6bAesDIgR3sg" name="Description" specification="_px5FsGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD73-GRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD73-WRZEe6bAesDIgR3sg" name="Description" specification="_px5FtGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD73-mRZEe6bAesDIgR3sg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD73-2RZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD73_GRZEe6bAesDIgR3sg" name="toString" specification="_px5FuWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD73_WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_px5FsGRZEe6bAesDIgR3sg" name="Description" method="_qD7392RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_px5FsWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_px5FsmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_px5Fs2RZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_px5FtGRZEe6bAesDIgR3sg" name="Description" method="_qD73-WRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_px5FtmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_px5Ft2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_px5FtWRZEe6bAesDIgR3sg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_px5FuGRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_px5FuWRZEe6bAesDIgR3sg" name="toString" method="_qD73_GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_px5FumRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_px5swmRZEe6bAesDIgR3sg" name="Edge">
              <generalization xmi:id="_p_tfQ2RZEe6bAesDIgR3sg" general="_pzY6gGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDFjYGRZEe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDFjYWRZEe6bAesDIgR3sg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDFjYmRZEe6bAesDIgR3sg" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDFjY2RZEe6bAesDIgR3sg" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDFjZGRZEe6bAesDIgR3sg" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDFjZWRZEe6bAesDIgR3sg" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDGKcGRZEe6bAesDIgR3sg" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDGKcWRZEe6bAesDIgR3sg" name="state" type="_px664GRZEe6bAesDIgR3sg" association="_qEeDcGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDGKcmRZEe6bAesDIgR3sg" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_qB6esWRZEe6bAesDIgR3sg" client="_px5swmRZEe6bAesDIgR3sg" supplier="_qB20UGRZEe6bAesDIgR3sg" contract="_qB20UGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD73_mRZEe6bAesDIgR3sg" name="Edge" specification="_px7h8WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD73_2RZEe6bAesDIgR3sg" type="_px5swmRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD74AGRZEe6bAesDIgR3sg" name="Edge" specification="_px8JAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD74AWRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD74AmRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD74A2RZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD74BGRZEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD74BWRZEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD74BmRZEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD74B2RZEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD74CGRZEe6bAesDIgR3sg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD74CWRZEe6bAesDIgR3sg" type="_px5swmRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD74CmRZEe6bAesDIgR3sg" name="compareTo" specification="_p_s4MGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD74C2RZEe6bAesDIgR3sg" name="edge" type="_px5swmRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD74DGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD8fAGRZEe6bAesDIgR3sg" name="toString" specification="_px8wEGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD8fAWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD8fAmRZEe6bAesDIgR3sg" name="print" specification="_px9XIGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD8fA2RZEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD8fBGRZEe6bAesDIgR3sg" name="print" specification="_px9XJWRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_px7h8WRZEe6bAesDIgR3sg" name="Edge" visibility="package" method="_qD73_mRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_px7h8mRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_px7h82RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_px7h9GRZEe6bAesDIgR3sg" type="_px5swmRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_px8JAGRZEe6bAesDIgR3sg" name="Edge" visibility="package" method="_qD74AGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_px8JCWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_px8JCmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_px8JAWRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_px8JAmRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_px8JA2RZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_px8JBGRZEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_px8JBWRZEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_px8JBmRZEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_px8JB2RZEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_px8JCGRZEe6bAesDIgR3sg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_px8JC2RZEe6bAesDIgR3sg" type="_px5swmRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_px8wEGRZEe6bAesDIgR3sg" name="toString" method="_qD8fAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_px8wEWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_px9XIGRZEe6bAesDIgR3sg" name="print" method="_qD8fAmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_px9XIWRZEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_px9XJWRZEe6bAesDIgR3sg" name="print" method="_qD8fBGRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_p_s4MGRZEe6bAesDIgR3sg" name="compareTo" method="_qD74CmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p_s4MWRZEe6bAesDIgR3sg" name="edge" type="_px5swmRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_s4MmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_px664GRZEe6bAesDIgR3sg" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_px664mRZEe6bAesDIgR3sg" name="RELEASED"/>
                <ownedLiteral xmi:id="_px6642RZEe6bAesDIgR3sg" name="EXECUTING"/>
                <ownedLiteral xmi:id="_px7h8GRZEe6bAesDIgR3sg" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_px_MUGRZEe6bAesDIgR3sg" name="FileManager">
              <ownedComment xmi:id="_qEeqgGRZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qDGKc2RZEe6bAesDIgR3sg" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDGxgGRZEe6bAesDIgR3sg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD8fBWRZEe6bAesDIgR3sg" name="FileManager" specification="_px_zYGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD8fBmRZEe6bAesDIgR3sg" type="_px_MUGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD8fB2RZEe6bAesDIgR3sg" name="FileManager" specification="_px_zZGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD8fCGRZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD8fCWRZEe6bAesDIgR3sg" type="_px_MUGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD8fCmRZEe6bAesDIgR3sg" name="getDocumentsDirectory" specification="_px_zaWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD8fC2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD8fDGRZEe6bAesDIgR3sg" name="getCurrentDirectory" specification="_pyAacGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD8fDWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD8fDmRZEe6bAesDIgR3sg" name="createFile" specification="_pyAacmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD8fD2RZEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD8fEGRZEe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD8fEWRZEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD8fEmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD8fE2RZEe6bAesDIgR3sg" name="createFile" specification="_pyBBgGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD8fFGRZEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD8fFWRZEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD8fFmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD8fF2RZEe6bAesDIgR3sg" name="createDirectory" specification="_pyBBhGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD8fGGRZEe6bAesDIgR3sg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD8fGWRZEe6bAesDIgR3sg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD8fGmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD8fG2RZEe6bAesDIgR3sg" name="writeFile" specification="_pyBokmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD8fHGRZEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD8fHWRZEe6bAesDIgR3sg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9GEGRZEe6bAesDIgR3sg" name="readFile" specification="_pyBolWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9GEWRZEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD9GEmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_px_zYGRZEe6bAesDIgR3sg" name="FileManager" method="_qD8fBWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_px_zYWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_px_zYmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEeqgWRZEe6bAesDIgR3sg">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_px_zY2RZEe6bAesDIgR3sg" type="_px_MUGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_px_zZGRZEe6bAesDIgR3sg" name="FileManager" method="_qD8fB2RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_px_zZmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_px_zZ2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_px_zZWRZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_px_zaGRZEe6bAesDIgR3sg" type="_px_MUGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_px_zaWRZEe6bAesDIgR3sg" name="getDocumentsDirectory" method="_qD8fCmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_px_zamRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyAacGRZEe6bAesDIgR3sg" name="getCurrentDirectory" method="_qD8fDGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyAacWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyAacmRZEe6bAesDIgR3sg" name="createFile" method="_qD8fDmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEeqgmRZEe6bAesDIgR3sg">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_pyAac2RZEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyAadGRZEe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyAadWRZEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyAadmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyBBgGRZEe6bAesDIgR3sg" name="createFile" method="_qD8fE2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyBBgWRZEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyBBgmRZEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyBBg2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyBBhGRZEe6bAesDIgR3sg" name="createDirectory" method="_qD8fF2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyBBhWRZEe6bAesDIgR3sg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyBokGRZEe6bAesDIgR3sg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyBokWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyBokmRZEe6bAesDIgR3sg" name="writeFile" method="_qD8fG2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyBok2RZEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyBolGRZEe6bAesDIgR3sg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyBolWRZEe6bAesDIgR3sg" name="readFile" method="_qD9GEGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyCPoGRZEe6bAesDIgR3sg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyCPoWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyCPomRZEe6bAesDIgR3sg" name="WarpPoset">
              <ownedComment xmi:id="_qEeqg2RZEe6bAesDIgR3sg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_p_00AGRZEe6bAesDIgR3sg" general="_pzzxQGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9GE2RZEe6bAesDIgR3sg" name="WarpPoset" specification="_p_zl4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9GFGRZEe6bAesDIgR3sg" name="workload" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD9GFWRZEe6bAesDIgR3sg" type="_pyCPomRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9GFmRZEe6bAesDIgR3sg" name="findCoordinator" specification="_qB8T4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9GF2RZEe6bAesDIgR3sg" name="nodesInFlow" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD9GGGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p_zl4GRZEe6bAesDIgR3sg" name="WarpPoset" visibility="package" method="_qD9GE2RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p_0M8GRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p_0M8WRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p_zl4WRZEe6bAesDIgR3sg" name="workload" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_0M8mRZEe6bAesDIgR3sg" type="_pyCPomRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qB8T4GRZEe6bAesDIgR3sg" name="findCoordinator" visibility="protected" method="_qD9GFmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qB868GRZEe6bAesDIgR3sg" name="nodesInFlow" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qB868WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyC2sGRZEe6bAesDIgR3sg" name="FlowMap">
              <ownedComment xmi:id="_qEeqhGRZEe6bAesDIgR3sg">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_p_1bEGRZEe6bAesDIgR3sg" general="_pxjugGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDGxgmRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDGxg2RZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyDdwGRZEe6bAesDIgR3sg" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_qEeqhWRZEe6bAesDIgR3sg">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_p_2pMGRZEe6bAesDIgR3sg" general="_pxjugGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDGxhGRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDGxhWRZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyDdwWRZEe6bAesDIgR3sg" name="GraphViz">
              <ownedComment xmi:id="_qEeqhmRZEe6bAesDIgR3sg">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_p_33WGRZEe6bAesDIgR3sg" general="_p0AlkGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDHYkGRZEe6bAesDIgR3sg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDHYkWRZEe6bAesDIgR3sg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDHYkmRZEe6bAesDIgR3sg" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDHYk2RZEe6bAesDIgR3sg" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDHYlGRZEe6bAesDIgR3sg" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDHYlmRZEe6bAesDIgR3sg" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDH_oWRZEe6bAesDIgR3sg" name="wfm" visibility="package" type="_px_MUGRZEe6bAesDIgR3sg" association="_qE8kkWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDH_o2RZEe6bAesDIgR3sg" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDH_pWRZEe6bAesDIgR3sg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDImsWRZEe6bAesDIgR3sg" name="gv" visibility="package" type="_pyDdwWRZEe6bAesDIgR3sg" association="_qE8klGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9GGWRZEe6bAesDIgR3sg" name="GraphViz" specification="_p_3QQGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9GGmRZEe6bAesDIgR3sg" name="wfm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD9GG2RZEe6bAesDIgR3sg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD9GHGRZEe6bAesDIgR3sg" type="_pyDdwWRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9GHWRZEe6bAesDIgR3sg" name="GraphViz" specification="_p_33UGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9GHmRZEe6bAesDIgR3sg" name="wfm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD9GH2RZEe6bAesDIgR3sg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD9GIGRZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD9GIWRZEe6bAesDIgR3sg" type="_pyDdwWRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9GImRZEe6bAesDIgR3sg" name="visualization" specification="_pyEr4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9GI2RZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9GJGRZEe6bAesDIgR3sg" name="initializeGraphVizContent" specification="_pyFS82RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9GJWRZEe6bAesDIgR3sg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9GJmRZEe6bAesDIgR3sg" name="finalizeGraphVizContent" specification="_pyF6AGRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9GJ2RZEe6bAesDIgR3sg" name="getGraphVizContent" specification="_pyF6AWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9GKGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9tIGRZEe6bAesDIgR3sg" name="createGraphVizContent" specification="_pyF6A2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9tIWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9tImRZEe6bAesDIgR3sg" name="addFlowToGraphViz" specification="_pyF6BWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9tI2RZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9tJGRZEe6bAesDIgR3sg" name="addSrcNodeToGraphViz" specification="_pyGhEWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9tJWRZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9tJmRZEe6bAesDIgR3sg" name="addSnkNodeToGraphViz" specification="_pyGhE2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9tJ2RZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9tKGRZEe6bAesDIgR3sg" name="finalizeCurrentFlowInGraphViz" specification="_pyHIIGRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9tKWRZEe6bAesDIgR3sg" name="addNodeName" specification="_pyHIIWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9tKmRZEe6bAesDIgR3sg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD9tK2RZEe6bAesDIgR3sg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pyEr4GRZEe6bAesDIgR3sg" name="visualization" method="_qD9GImRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p_33V2RZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pyFS82RZEe6bAesDIgR3sg" name="initializeGraphVizContent" method="_qD9GJGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyFS9GRZEe6bAesDIgR3sg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyF6AGRZEe6bAesDIgR3sg" name="finalizeGraphVizContent" method="_qD9GJmRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pyF6AWRZEe6bAesDIgR3sg" name="getGraphVizContent" method="_qD9GJ2RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEeqh2RZEe6bAesDIgR3sg">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_pyF6AmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyF6A2RZEe6bAesDIgR3sg" name="createGraphVizContent" method="_qD9tIGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyF6BGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyF6BWRZEe6bAesDIgR3sg" name="addFlowToGraphViz" method="_qD9tImRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyGhEGRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyGhEWRZEe6bAesDIgR3sg" name="addSrcNodeToGraphViz" method="_qD9tJGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyGhEmRZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyGhE2RZEe6bAesDIgR3sg" name="addSnkNodeToGraphViz" method="_qD9tJmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyGhFGRZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyHIIGRZEe6bAesDIgR3sg" name="finalizeCurrentFlowInGraphViz" method="_qD9tKGRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pyHIIWRZEe6bAesDIgR3sg" name="addNodeName" visibility="private" method="_qD9tKWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyHIImRZEe6bAesDIgR3sg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyHII2RZEe6bAesDIgR3sg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p_3QQGRZEe6bAesDIgR3sg" name="GraphViz" visibility="package" method="_qD9GGWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p_3QQ2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p_3QRGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p_3QQWRZEe6bAesDIgR3sg" name="wfm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_3QQmRZEe6bAesDIgR3sg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p_3QRWRZEe6bAesDIgR3sg" type="_pyDdwWRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p_33UGRZEe6bAesDIgR3sg" name="GraphViz" visibility="package" method="_qD9GHWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p_33VGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p_33VWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p_33UWRZEe6bAesDIgR3sg" name="wfm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_33UmRZEe6bAesDIgR3sg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p_33U2RZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p_33VmRZEe6bAesDIgR3sg" type="_pyDdwWRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyI9UGRZEe6bAesDIgR3sg" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_qEeqiGRZEe6bAesDIgR3sg">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_qB-JEGRZEe6bAesDIgR3sg" general="_p_6Tk2RZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDJ00GRZEe6bAesDIgR3sg" name="gv" visibility="package" type="_pyDdwWRZEe6bAesDIgR3sg" association="_qE9LoGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9tLGRZEe6bAesDIgR3sg" name="GraphVizListener" specification="_p_66omRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9tLWRZEe6bAesDIgR3sg" name="gv" type="_pyDdwWRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD9tLmRZEe6bAesDIgR3sg" type="_pyI9UGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9tL2RZEe6bAesDIgR3sg" name="buildGraphViz" specification="_p_66p2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9tMGRZEe6bAesDIgR3sg" name="gv" type="_pyDdwWRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9tMWRZEe6bAesDIgR3sg" name="enterWarpName" specification="_p_7hsmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9tMmRZEe6bAesDIgR3sg" name="ctx" type="_p_7hsGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9tM2RZEe6bAesDIgR3sg" name="exitWarp" specification="_p_8v0WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9tNGRZEe6bAesDIgR3sg" name="ctx" type="_p_8Iw2RZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9tNWRZEe6bAesDIgR3sg" name="enterFlowName" specification="_p__MEGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9tNmRZEe6bAesDIgR3sg" name="ctx" type="_p_-lAWRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD9tN2RZEe6bAesDIgR3sg" name="exitSrcNode" specification="_p__zIWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD9tOGRZEe6bAesDIgR3sg" name="ctx" type="_p__MFWRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-UMGRZEe6bAesDIgR3sg" name="exitSnkNode" specification="_qAAaMGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-UMWRZEe6bAesDIgR3sg" name="ctx" type="_p__zJmRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-UMmRZEe6bAesDIgR3sg" name="exitFlow" specification="_qABBQWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-UM2RZEe6bAesDIgR3sg" name="ctx" type="_qAAaNWRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p_66omRZEe6bAesDIgR3sg" name="GraphVizListener" visibility="private" method="_qD9tLGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p_66pGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p_66pWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p_66o2RZEe6bAesDIgR3sg" name="gv" type="_pyDdwWRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_p_66pmRZEe6bAesDIgR3sg" type="_pyI9UGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p_66p2RZEe6bAesDIgR3sg" name="buildGraphViz" isStatic="true" method="_qD9tL2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p_66qGRZEe6bAesDIgR3sg" name="gv" type="_pyDdwWRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p_7hsmRZEe6bAesDIgR3sg" name="enterWarpName" method="_qD9tMWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p_7hs2RZEe6bAesDIgR3sg" name="ctx" type="_p_7hsGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p_8v0WRZEe6bAesDIgR3sg" name="exitWarp" method="_qD9tM2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p_9W4GRZEe6bAesDIgR3sg" name="ctx" type="_p_8Iw2RZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p__MEGRZEe6bAesDIgR3sg" name="enterFlowName" method="_qD9tNWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p__MEWRZEe6bAesDIgR3sg" name="ctx" type="_p_-lAWRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p__zIWRZEe6bAesDIgR3sg" name="exitSrcNode" method="_qD9tN2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p__zImRZEe6bAesDIgR3sg" name="ctx" type="_p__MFWRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAAaMGRZEe6bAesDIgR3sg" name="exitSnkNode" method="_qD-UMGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAAaMWRZEe6bAesDIgR3sg" name="ctx" type="_p__zJmRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qABBQWRZEe6bAesDIgR3sg" name="exitFlow" method="_qD-UMmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qABBQmRZEe6bAesDIgR3sg" name="ctx" type="_qAAaNWRZEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyKygGRZEe6bAesDIgR3sg" name="GuiVisualization">
              <ownedComment xmi:id="_qEfRkGRZEe6bAesDIgR3sg">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qDJ00mRZEe6bAesDIgR3sg" name="frame" visibility="package" type="_qACPYWRZEe6bAesDIgR3sg" association="_qE9Lo2RZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDKb4WRZEe6bAesDIgR3sg" name="jtable" visibility="package" type="_qACPZWRZEe6bAesDIgR3sg" association="_qE9LpmRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-UNGRZEe6bAesDIgR3sg" name="GuiVisualization" specification="_pyLZkGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-UNWRZEe6bAesDIgR3sg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD-UNmRZEe6bAesDIgR3sg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qD-UN2RZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD-UOGRZEe6bAesDIgR3sg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qD-UOWRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD-UOmRZEe6bAesDIgR3sg" type="_pyKygGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-UO2RZEe6bAesDIgR3sg" name="setVisible" specification="_pyMnsWRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-UPGRZEe6bAesDIgR3sg" name="resizeColumnWidth" specification="_qB-wIGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-UPWRZEe6bAesDIgR3sg" name="table" type="_qACPZWRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pyLZkGRZEe6bAesDIgR3sg" name="GuiVisualization" method="_qD-UNGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pyMAoWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pyMAomRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEfRkWRZEe6bAesDIgR3sg">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_pyLZkWRZEe6bAesDIgR3sg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyLZkmRZEe6bAesDIgR3sg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pyMApGRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyMAoGRZEe6bAesDIgR3sg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pyMApWRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyMAo2RZEe6bAesDIgR3sg" type="_pyKygGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pyMnsWRZEe6bAesDIgR3sg" name="setVisible" method="_qD-UO2RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEfRkmRZEe6bAesDIgR3sg">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_qB-wIGRZEe6bAesDIgR3sg" name="resizeColumnWidth" visibility="private" method="_qD-UPGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qB-wIWRZEe6bAesDIgR3sg" name="table" type="_qACPZWRZEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyNOwGRZEe6bAesDIgR3sg" name="InputGraphFile">
              <ownedComment xmi:id="_qEfRk2RZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qDKb42RZEe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDKb5GRZEe6bAesDIgR3sg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDKb5WRZEe6bAesDIgR3sg" name="wfm" visibility="private" type="_px_MUGRZEe6bAesDIgR3sg" association="_qE9ysWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDLC8GRZEe6bAesDIgR3sg" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDLC8WRZEe6bAesDIgR3sg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDLC82RZEe6bAesDIgR3sg" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDLC9GRZEe6bAesDIgR3sg" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-UPmRZEe6bAesDIgR3sg" name="InputGraphFile" specification="_qAEEkWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-UP2RZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD-UQGRZEe6bAesDIgR3sg" type="_pyNOwGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-UQWRZEe6bAesDIgR3sg" name="InputGraphFile" specification="_qAEroGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-UQmRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD-UQ2RZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD-URGRZEe6bAesDIgR3sg" type="_pyNOwGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-URWRZEe6bAesDIgR3sg" name="setGraphFileName" specification="_pyOc4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-URmRZEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-7QGRZEe6bAesDIgR3sg" name="verifyGraphFileName" specification="_pyPD8WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-7QWRZEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-7QmRZEe6bAesDIgR3sg" name="readGraphFile" specification="_pyPrAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-7Q2RZEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD-7RGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-7RWRZEe6bAesDIgR3sg" name="getInputGraphFileName" specification="_pyQSEGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-7RmRZEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD-7R2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-7SGRZEe6bAesDIgR3sg" name="readGraphFileContents" specification="_pyQ5IGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-7SWRZEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD-7SmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-7S2RZEe6bAesDIgR3sg" name="printVerboseMessage" specification="_pyQ5I2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-7TGRZEe6bAesDIgR3sg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD-7TWRZEe6bAesDIgR3sg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD-7TmRZEe6bAesDIgR3sg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pyOc4GRZEe6bAesDIgR3sg" name="setGraphFileName" visibility="private" method="_qD-URWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyPD8GRZEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyPD8WRZEe6bAesDIgR3sg" name="verifyGraphFileName" visibility="private" method="_qD-7QGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyPD8mRZEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyPrAGRZEe6bAesDIgR3sg" name="readGraphFile" method="_qD-7QmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyPrAWRZEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyPrAmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyQSEGRZEe6bAesDIgR3sg" name="getInputGraphFileName" visibility="private" method="_qD-7RWRZEe6bAesDIgR3sg" raisedException="_qCAlUGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyQSEWRZEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyQSEmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyQ5IGRZEe6bAesDIgR3sg" name="readGraphFileContents" visibility="private" method="_qD-7SGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyQ5IWRZEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyQ5ImRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyQ5I2RZEe6bAesDIgR3sg" name="printVerboseMessage" visibility="private" method="_qD-7S2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyQ5JGRZEe6bAesDIgR3sg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyQ5JWRZEe6bAesDIgR3sg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyQ5JmRZEe6bAesDIgR3sg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAEEkWRZEe6bAesDIgR3sg" name="InputGraphFile" method="_qD-UPmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAEEk2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAEElGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qAEEkmRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAEElWRZEe6bAesDIgR3sg" type="_pyNOwGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAEroGRZEe6bAesDIgR3sg" name="InputGraphFile" method="_qD-UQWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAEro2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAErpGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qAEroWRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAEromRZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAErpWRZEe6bAesDIgR3sg" type="_pyNOwGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pySHQGRZEe6bAesDIgR3sg" name="InstructionTimeSlot">
              <generalization xmi:id="_qAFSsGRZEe6bAesDIgR3sg" general="_pzAgAGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDLC9mRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDLqAGRZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-7T2RZEe6bAesDIgR3sg" name="InstructionTimeSlot" specification="_pyVKkGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-7UGRZEe6bAesDIgR3sg" type="_pySHQGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-7UWRZEe6bAesDIgR3sg" name="InstructionTimeSlot" specification="_pyVxoGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-7UmRZEe6bAesDIgR3sg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD-7U2RZEe6bAesDIgR3sg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD-7VGRZEe6bAesDIgR3sg" type="_pySHQGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD-7VWRZEe6bAesDIgR3sg" name="InstructionTimeSlot" specification="_pyVxpmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD-7VmRZEe6bAesDIgR3sg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qD-7V2RZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD-7WGRZEe6bAesDIgR3sg" type="_pySHQGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pyVKkGRZEe6bAesDIgR3sg" name="InstructionTimeSlot" method="_qD-7T2RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pyVKkWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pyVKkmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pyVKk2RZEe6bAesDIgR3sg" type="_pySHQGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pyVxoGRZEe6bAesDIgR3sg" name="InstructionTimeSlot" visibility="package" method="_qD-7UWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pyVxo2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pyVxpGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pyVxoWRZEe6bAesDIgR3sg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyVxomRZEe6bAesDIgR3sg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyVxpWRZEe6bAesDIgR3sg" type="_pySHQGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pyVxpmRZEe6bAesDIgR3sg" name="InstructionTimeSlot" visibility="package" method="_qD-7VWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pyVxqGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pyVxqWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pyVxp2RZEe6bAesDIgR3sg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pyVxq2RZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyVxqmRZEe6bAesDIgR3sg" type="_pySHQGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyWYsGRZEe6bAesDIgR3sg" name="LatencyAnalysis">
              <ownedComment xmi:id="_6YyZ4GUyEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@author srgoddard (for java doc comments)&#xD;
@version 1.6</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qDLqAWRZEe6bAesDIgR3sg" name="DEADLINE_MISS" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDLqA2RZEe6bAesDIgR3sg" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDLqBGRZEe6bAesDIgR3sg" name="FLOW_SEPARATOR" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDLqBWRZEe6bAesDIgR3sg" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDMREGRZEe6bAesDIgR3sg" name="latencyReport" visibility="private" type="_px4eoGRZEe6bAesDIgR3sg" association="_qE_A0GRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDMREmRZEe6bAesDIgR3sg" name="program" visibility="private" type="_pzoLEGRZEe6bAesDIgR3sg" association="_qE_n4WRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDMRFGRZEe6bAesDIgR3sg" name="workload" visibility="private" type="_p0mbcGRZEe6bAesDIgR3sg" association="_qE_n5GRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDMRFmRZEe6bAesDIgR3sg" name="programTable" visibility="private" type="_pywoZWRZEe6bAesDIgR3sg" association="_qFAO8GRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDM4IWRZEe6bAesDIgR3sg" name="nodeIndex" visibility="private" type="_p_bLYGRZEe6bAesDIgR3sg" association="_qFAO82RZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD_iUGRZEe6bAesDIgR3sg" name="LatencyAnalysis" specification="_qAF5wWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD_iUWRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD_iUmRZEe6bAesDIgR3sg" type="_pyWYsGRZEe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD_iU2RZEe6bAesDIgR3sg" name="LatencyAnalysis" specification="_qAGg02RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD_iVGRZEe6bAesDIgR3sg" name="program" type="_pzoLEGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD_iVWRZEe6bAesDIgR3sg" type="_pyWYsGRZEe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD_iVmRZEe6bAesDIgR3sg" name="latencyReport" specification="_pyY08GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD_iV2RZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * &#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
&#xD;
	  &#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD_iWGRZEe6bAesDIgR3sg" name="numMatchingTx" specification="_pyY08WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD_iWWRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD_iWmRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD_iW2RZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD_iXGRZEe6bAesDIgR3sg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD_iXWRZEe6bAesDIgR3sg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6YxLwGUyEe6bAesDIgR3sg" name="getLatencyTable" specification="_ii6J4GUyEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_6YxLwWUyEe6bAesDIgR3sg" type="_pywoZWRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>// TODO implement this operation&#xD;
	  return programTable;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pyY08GRZEe6bAesDIgR3sg" name="latencyReport" method="_qD_iVmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAHH4mRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pyY08WRZEe6bAesDIgR3sg" name="numMatchingTx" method="_qD_iWGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_6YyZ42UyEe6bAesDIgR3sg">
                  <body>&#xD;
  * @return numTX counts the numbers of Tx attempts made successfully&#xD;
  * @param dsl is used as a mediator to establish new WarpDSL()&#xD;
  * @param instructionParametersArray is used to obtain instruction parameters from the dsl.getInstructionParameters(instr)&#xD;
  * This method is used to obtain the number of successful Tx attempts if flowName equals flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_pyY08mRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyY082RZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyY09GRZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyY09WRZEe6bAesDIgR3sg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyZcAGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAF5wWRZEe6bAesDIgR3sg" name="LatencyAnalysis" visibility="package" method="_qD_iUGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAGg0GRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAGg0WRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6YyZ4WUyEe6bAesDIgR3sg">
                  <body>&#xD;
  * This object holds the toWorkload()/getSchedule()/NodeMapIndex()/and toProgram()</body>
                </ownedComment>
                <ownedParameter xmi:id="_qAF5wmRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAGg0mRZEe6bAesDIgR3sg" type="_pyWYsGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAGg02RZEe6bAesDIgR3sg" name="LatencyAnalysis" visibility="package" method="_qD_iU2RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAGg1WRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAHH4GRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_6YyZ4mUyEe6bAesDIgR3sg">
                  <body>*&#xD;
  * This contains the program side of the nodes. Including toWorkload()/getSchedule()/getNodeMapIndex()</body>
                </ownedComment>
                <ownedParameter xmi:id="_qAGg1GRZEe6bAesDIgR3sg" name="program" type="_pzoLEGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAHH4WRZEe6bAesDIgR3sg" type="_pyWYsGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ii6J4GUyEe6bAesDIgR3sg" name="getLatencyTable" visibility="public" method="_6YxLwGUyEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_ii6J4WUyEe6bAesDIgR3sg" type="_pywoZWRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyaqIGRZEe6bAesDIgR3sg" name="LatencyVisualization">
              <ownedComment xmi:id="_qEfRmGRZEe6bAesDIgR3sg">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2023 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.6&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_qAIWA2RZEe6bAesDIgR3sg" general="_p0AlkGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDM4JGRZEe6bAesDIgR3sg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDNfMGRZEe6bAesDIgR3sg" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDNfMWRZEe6bAesDIgR3sg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDNfMmRZEe6bAesDIgR3sg" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDNfM2RZEe6bAesDIgR3sg" name="warp" visibility="private" type="_p0S5cGRZEe6bAesDIgR3sg" association="_qFAO9mRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDNfNWRZEe6bAesDIgR3sg" name="la" visibility="private" type="_pyWYsGRZEe6bAesDIgR3sg" association="_qFA2AWRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD_iXmRZEe6bAesDIgR3sg" name="LatencyVisualization" specification="_qAHu8GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD_iX2RZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD_iYGRZEe6bAesDIgR3sg" type="_pyaqIGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qAHu8GRZEe6bAesDIgR3sg" name="LatencyVisualization" visibility="package" method="_qD_iXmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAIWAGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAIWAWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qAHu8WRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAIWAmRZEe6bAesDIgR3sg" type="_pyaqIGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pybRMGRZEe6bAesDIgR3sg" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_qCBzcGRZEe6bAesDIgR3sg" client="_pybRMGRZEe6bAesDIgR3sg" supplier="_p_p04GRZEe6bAesDIgR3sg" contract="_p_p04GRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD_iYWRZEe6bAesDIgR3sg" name="compare" specification="_qCDBkGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD_iYmRZEe6bAesDIgR3sg" name="obj1" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD_iY2RZEe6bAesDIgR3sg" name="obj2" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD_iZGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qCDBkGRZEe6bAesDIgR3sg" name="compare" method="_qD_iYWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCDBkWRZEe6bAesDIgR3sg" name="obj1" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCDBkmRZEe6bAesDIgR3sg" name="obj2" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCEPsGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pydGYGRZEe6bAesDIgR3sg" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_qCEPtGRZEe6bAesDIgR3sg" client="_pydGYGRZEe6bAesDIgR3sg" supplier="_p_p04GRZEe6bAesDIgR3sg" contract="_p_p04GRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD_iZWRZEe6bAesDIgR3sg" name="compare" specification="_qCFd0GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD_iZmRZEe6bAesDIgR3sg" name="obj1" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD_iZ2RZEe6bAesDIgR3sg" name="obj2" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qD_iaGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qCFd0GRZEe6bAesDIgR3sg" name="compare" method="_qD_iZWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCFd0WRZEe6bAesDIgR3sg" name="obj1" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCFd0mRZEe6bAesDIgR3sg" name="obj2" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCGE4GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyeUgGRZEe6bAesDIgR3sg" name="Node">
              <generalization xmi:id="_qAKLMmRZEe6bAesDIgR3sg" general="_pzY6gGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDNfN2RZEe6bAesDIgR3sg" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDOGQGRZEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDOGQWRZEe6bAesDIgR3sg" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDOGQmRZEe6bAesDIgR3sg" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDOGQ2RZEe6bAesDIgR3sg" name="edges" type="_p_fc0GRZEe6bAesDIgR3sg" isReadOnly="true" association="_qFA2BGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDOGRWRZEe6bAesDIgR3sg" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qDOGRmRZEe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_qCHTAGRZEe6bAesDIgR3sg" client="_pyeUgGRZEe6bAesDIgR3sg" supplier="_qB20UGRZEe6bAesDIgR3sg" contract="_qB20UGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qD_iaWRZEe6bAesDIgR3sg" name="Node" specification="_pye7kGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qD_iamRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD_ia2RZEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qD_ibGRZEe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEAJYGRZEe6bAesDIgR3sg" type="_pyeUgGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAJYWRZEe6bAesDIgR3sg" name="compareTo" specification="_qAJkIGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAJYmRZEe6bAesDIgR3sg" name="node" type="_pyeUgGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEAJY2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAJZGRZEe6bAesDIgR3sg" name="toString" specification="_pyfioGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAJZWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAJZmRZEe6bAesDIgR3sg" name="addEdge" specification="_qAKLMGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAJZ2RZEe6bAesDIgR3sg" name="edge" type="_px5swmRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAJaGRZEe6bAesDIgR3sg" name="addConflict" specification="_pygJsmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAJaWRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAJamRZEe6bAesDIgR3sg" name="numEdges" specification="_pygJtGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAJa2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAJbGRZEe6bAesDIgR3sg" name="print" specification="_pygwwWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAJbWRZEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAJbmRZEe6bAesDIgR3sg" name="print" specification="_pyhX0mRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pye7kGRZEe6bAesDIgR3sg" name="Node" visibility="package" method="_qD_iaWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pye7lGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pye7lWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pye7kWRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pye7kmRZEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pye7k2RZEe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pye7lmRZEe6bAesDIgR3sg" type="_pyeUgGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pyfioGRZEe6bAesDIgR3sg" name="toString" method="_qEAJZGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyfioWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pygJsmRZEe6bAesDIgR3sg" name="addConflict" method="_qEAJaGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pygJs2RZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pygJtGRZEe6bAesDIgR3sg" name="numEdges" method="_qEAJamRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pygwwGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pygwwWRZEe6bAesDIgR3sg" name="print" method="_qEAJbGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pygwwmRZEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pyhX0mRZEe6bAesDIgR3sg" name="print" method="_qEAJbmRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_qAJkIGRZEe6bAesDIgR3sg" name="compareTo" method="_qEAJYWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAJkIWRZEe6bAesDIgR3sg" name="node" type="_pyeUgGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAJkImRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAKLMGRZEe6bAesDIgR3sg" name="addEdge" method="_qEAJZmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAKLMWRZEe6bAesDIgR3sg" name="edge" type="_px5swmRZEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyj0EGRZEe6bAesDIgR3sg" name="NodeMap">
              <ownedComment xmi:id="_qEfRmWRZEe6bAesDIgR3sg">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_qAKyQGRZEe6bAesDIgR3sg" general="_pxjugGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDOtUGRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDOtUWRZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pykbIGRZEe6bAesDIgR3sg" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_qEfRmmRZEe6bAesDIgR3sg">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_qAMAYGRZEe6bAesDIgR3sg" general="_pzPJgWRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAwcGRZEe6bAesDIgR3sg" name="NonPreemptiveSchedule" specification="_qALZUWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAwcWRZEe6bAesDIgR3sg" name="poset" type="_pzzxQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEAwcmRZEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEAwc2RZEe6bAesDIgR3sg" type="_pykbIGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qALZUWRZEe6bAesDIgR3sg" name="NonPreemptiveSchedule" visibility="package" method="_qEAwcGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qALZVGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qALZVWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qALZUmRZEe6bAesDIgR3sg" name="poset" type="_pzzxQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qALZU2RZEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qALZVmRZEe6bAesDIgR3sg" type="_pykbIGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pylCMGRZEe6bAesDIgR3sg" name="NotImplentedVisualization">
              <generalization xmi:id="_qAMAYmRZEe6bAesDIgR3sg" general="_p0AlkGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDOtUmRZEe6bAesDIgR3sg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDOtU2RZEe6bAesDIgR3sg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDOtVGRZEe6bAesDIgR3sg" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDOtVWRZEe6bAesDIgR3sg" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDPUYGRZEe6bAesDIgR3sg" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDPUYWRZEe6bAesDIgR3sg" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAwdGRZEe6bAesDIgR3sg" name="NotImplentedVisualization" specification="_pylpQGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAwdWRZEe6bAesDIgR3sg" type="_pylCMGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAwdmRZEe6bAesDIgR3sg" name="NotImplentedVisualization" specification="_pylpRGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAwd2RZEe6bAesDIgR3sg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEAweGRZEe6bAesDIgR3sg" type="_pylCMGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAweWRZEe6bAesDIgR3sg" name="visualization" specification="_pylpSWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAwemRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pylpQGRZEe6bAesDIgR3sg" name="NotImplentedVisualization" visibility="package" method="_qEAwdGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pylpQWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pylpQmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pylpQ2RZEe6bAesDIgR3sg" type="_pylCMGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pylpRGRZEe6bAesDIgR3sg" name="NotImplentedVisualization" visibility="package" method="_qEAwdmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pylpRmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pylpR2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pylpRWRZEe6bAesDIgR3sg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pylpSGRZEe6bAesDIgR3sg" type="_pylCMGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pylpSWRZEe6bAesDIgR3sg" name="visualization" method="_qEAweWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAMAYWRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pym3YGRZEe6bAesDIgR3sg" name="PeriodComparator">
              <interfaceRealization xmi:id="_qCJIMGRZEe6bAesDIgR3sg" client="_pym3YGRZEe6bAesDIgR3sg" supplier="_p_p04GRZEe6bAesDIgR3sg" contract="_p_p04GRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAwe2RZEe6bAesDIgR3sg" name="compare" specification="_qCJvQWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAwfGRZEe6bAesDIgR3sg" name="obj1" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEAwfWRZEe6bAesDIgR3sg" name="obj2" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEAwfmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qCJvQWRZEe6bAesDIgR3sg" name="compare" method="_qEAwe2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCJvQmRZEe6bAesDIgR3sg" name="obj1" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCJvQ2RZEe6bAesDIgR3sg" name="obj2" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCJvRGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyoFgGRZEe6bAesDIgR3sg" name="VisualizationFactory">
              <ownedComment xmi:id="_qEfRm2RZEe6bAesDIgR3sg">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAwf2RZEe6bAesDIgR3sg" name="createProgramVisualization" specification="_qANOgWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAwgGRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEAwgWRZEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEAwgmRZEe6bAesDIgR3sg" name="choice" type="_pyvaQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEAwg2RZEe6bAesDIgR3sg" type="_pyuzMGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAwhGRZEe6bAesDIgR3sg" name="createWorkLoadVisualization" specification="_qAN1kGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAwhWRZEe6bAesDIgR3sg" name="workload" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEAwhmRZEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEAwh2RZEe6bAesDIgR3sg" name="choice" type="_pywBU2RZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEAwiGRZEe6bAesDIgR3sg" type="_pyuzMGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qANOgWRZEe6bAesDIgR3sg" name="createProgramVisualization" isStatic="true" method="_qEAwf2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qANOgmRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qANOg2RZEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qANOhGRZEe6bAesDIgR3sg" name="choice" type="_pyvaQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qANOhWRZEe6bAesDIgR3sg" type="_pyuzMGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAN1kGRZEe6bAesDIgR3sg" name="createWorkLoadVisualization" isStatic="true" method="_qEAwhGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAN1kWRZEe6bAesDIgR3sg" name="workload" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAN1kmRZEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAN1k2RZEe6bAesDIgR3sg" name="choice" type="_pywBU2RZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAN1lGRZEe6bAesDIgR3sg" type="_pyuzMGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyoskGRZEe6bAesDIgR3sg" name="PreemptiveSchedule">
              <ownedComment xmi:id="_qEfRnGRZEe6bAesDIgR3sg">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_qASHA2RZEe6bAesDIgR3sg" general="_pzPJgWRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEAwiWRZEe6bAesDIgR3sg" name="PreemptiveSchedule" specification="_qAN1lWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEAwimRZEe6bAesDIgR3sg" name="poset" type="_pzzxQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEAwi2RZEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEAwjGRZEe6bAesDIgR3sg" type="_pyoskGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEBXgGRZEe6bAesDIgR3sg" name="continueSearch" specification="_qAOcpGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEBXgWRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEBXgmRZEe6bAesDIgR3sg" name="activation" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEBXg2RZEe6bAesDIgR3sg" type="_qCKWUmRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEBXhGRZEe6bAesDIgR3sg" name="toProgram" specification="_pypToGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEBXhWRZEe6bAesDIgR3sg" type="_pywoZWRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEBXhmRZEe6bAesDIgR3sg" name="findPreeptiveChannelAndTime" specification="_qAPDtGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEBXh2RZEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEBXiGRZEe6bAesDIgR3sg" name="schedulableObject" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEBXiWRZEe6bAesDIgR3sg" type="_qCKWUmRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEBXimRZEe6bAesDIgR3sg" name="findAdditionalTime" specification="_qAPqwGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEBXi2RZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEBXjGRZEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEBXjWRZEe6bAesDIgR3sg" name="a1" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEBXjmRZEe6bAesDIgR3sg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEBXj2RZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEBXkGRZEe6bAesDIgR3sg" name="findMaxTimeAvailable" specification="_qAPqxmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEBXkWRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEBXkmRZEe6bAesDIgR3sg" name="schedulableObject" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEBXk2RZEe6bAesDIgR3sg" type="_qCKWUmRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEBXlGRZEe6bAesDIgR3sg" name="availableTime" specification="_qAQR0mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEBXlWRZEe6bAesDIgR3sg" name="a1" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEBXlmRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEBXl2RZEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEBXmGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEBXmWRZEe6bAesDIgR3sg" name="addToSchedule" specification="_qAQ44WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEBXmmRZEe6bAesDIgR3sg" name="next" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEBXm2RZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEBXnGRZEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEBXnWRZEe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEBXnmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEBXn2RZEe6bAesDIgR3sg" name="addToSchedule" specification="_qARf82RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEBXoGRZEe6bAesDIgR3sg" name="next" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEBXoWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pypToGRZEe6bAesDIgR3sg" name="toProgram" method="_qEBXhGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAPDs2RZEe6bAesDIgR3sg" type="_pywoZWRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAN1lWRZEe6bAesDIgR3sg" name="PreemptiveSchedule" visibility="package" method="_qEAwiWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAOcoWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAOcomRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qAN1lmRZEe6bAesDIgR3sg" name="poset" type="_pzzxQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAOcoGRZEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAOco2RZEe6bAesDIgR3sg" type="_pyoskGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAOcpGRZEe6bAesDIgR3sg" name="continueSearch" visibility="protected" method="_qEBXgGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAOcpWRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAOcpmRZEe6bAesDIgR3sg" name="activation" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCKWVGRZEe6bAesDIgR3sg" type="_qCKWUmRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAPDtGRZEe6bAesDIgR3sg" name="findPreeptiveChannelAndTime" visibility="private" method="_qEBXhmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAPDtWRZEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAPDtmRZEe6bAesDIgR3sg" name="schedulableObject" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCK9YGRZEe6bAesDIgR3sg" type="_qCKWUmRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAPqwGRZEe6bAesDIgR3sg" name="findAdditionalTime" visibility="private" method="_qEBXimRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAPqwWRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAPqwmRZEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAPqw2RZEe6bAesDIgR3sg" name="a1" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAPqxGRZEe6bAesDIgR3sg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCK9YWRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAPqxmRZEe6bAesDIgR3sg" name="findMaxTimeAvailable" visibility="private" method="_qEBXkGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAQR0GRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAQR0WRZEe6bAesDIgR3sg" name="schedulableObject" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCK9YmRZEe6bAesDIgR3sg" type="_qCKWUmRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAQR0mRZEe6bAesDIgR3sg" name="availableTime" visibility="private" method="_qEBXlGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAQR02RZEe6bAesDIgR3sg" name="a1" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAQR1GRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAQR1WRZEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAQ44GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAQ44WRZEe6bAesDIgR3sg" name="addToSchedule" visibility="private" method="_qEBXmWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAQ44mRZEe6bAesDIgR3sg" name="next" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAQ442RZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qARf8GRZEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qARf8WRZEe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qARf8mRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qARf82RZEe6bAesDIgR3sg" name="addToSchedule" visibility="protected" method="_qEBXn2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qARf9GRZEe6bAesDIgR3sg" name="next" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qARf9WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pytlEGRZEe6bAesDIgR3sg" name="PriorityComparator">
              <interfaceRealization xmi:id="_qCLkcGRZEe6bAesDIgR3sg" client="_pytlEGRZEe6bAesDIgR3sg" supplier="_p_p04GRZEe6bAesDIgR3sg" contract="_p_p04GRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEBXomRZEe6bAesDIgR3sg" name="compare" specification="_qCMLgGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEBXo2RZEe6bAesDIgR3sg" name="obj1" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEBXpGRZEe6bAesDIgR3sg" name="obj2" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEBXpWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qCMLgGRZEe6bAesDIgR3sg" name="compare" method="_qEBXomRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCMLgWRZEe6bAesDIgR3sg" name="obj1" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCMLgmRZEe6bAesDIgR3sg" name="obj2" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCMLg2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_pyuzMGRZEe6bAesDIgR3sg" name="Visualization">
              <ownedComment xmi:id="_qEf4oGRZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_pyvaQGRZEe6bAesDIgR3sg" name="SystemChoices">
                <ownedLiteral xmi:id="_pyvaQmRZEe6bAesDIgR3sg" name="SOURCE"/>
                <ownedLiteral xmi:id="_pyvaQ2RZEe6bAesDIgR3sg" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_pyvaRGRZEe6bAesDIgR3sg" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_pyvaRWRZEe6bAesDIgR3sg" name="LATENCY"/>
                <ownedLiteral xmi:id="_pywBUGRZEe6bAesDIgR3sg" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_pywBUWRZEe6bAesDIgR3sg" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_pywBUmRZEe6bAesDIgR3sg" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_pywBU2RZEe6bAesDIgR3sg" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_pywBVWRZEe6bAesDIgR3sg" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_pywBVmRZEe6bAesDIgR3sg" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_pywoYGRZEe6bAesDIgR3sg" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_pywoYWRZEe6bAesDIgR3sg" name="toDisplay"/>
              <ownedOperation xmi:id="_pywoYmRZEe6bAesDIgR3sg" name="toFile"/>
              <ownedOperation xmi:id="_pywoY2RZEe6bAesDIgR3sg" name="toString">
                <ownedParameter xmi:id="_pywoZGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pywoZWRZEe6bAesDIgR3sg" name="ProgramSchedule">
              <generalization xmi:id="_qASuEGRZEe6bAesDIgR3sg" general="_pzlHwGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDPUYmRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDPUY2RZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEB-kGRZEe6bAesDIgR3sg" name="ProgramSchedule" specification="_pyxPcGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEB-kWRZEe6bAesDIgR3sg" type="_pywoZWRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEB-kmRZEe6bAesDIgR3sg" name="ProgramSchedule" specification="_pyx2gGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEB-k2RZEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEB-lGRZEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEB-lWRZEe6bAesDIgR3sg" type="_pywoZWRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pyxPcGRZEe6bAesDIgR3sg" name="ProgramSchedule" method="_qEB-kGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pyxPcWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pyxPcmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pyxPc2RZEe6bAesDIgR3sg" type="_pywoZWRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pyx2gGRZEe6bAesDIgR3sg" name="ProgramSchedule" visibility="package" method="_qEB-kmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pyx2g2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pyx2hGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pyx2gWRZEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyx2gmRZEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pyx2hWRZEe6bAesDIgR3sg" type="_pywoZWRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pyydkGRZEe6bAesDIgR3sg" name="ProgramVisualization">
              <ownedComment xmi:id="_qEf4oWRZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_qAT8OGRZEe6bAesDIgR3sg" general="_p0AlkGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDPUZGRZEe6bAesDIgR3sg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDPUZWRZEe6bAesDIgR3sg" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDPUZmRZEe6bAesDIgR3sg" name="sourceCode" visibility="private" type="_pywoZWRZEe6bAesDIgR3sg" association="_qFA2B2RZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDP7cWRZEe6bAesDIgR3sg" name="program" visibility="private" type="_pzoLEGRZEe6bAesDIgR3sg" association="_qFBdEWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDP7c2RZEe6bAesDIgR3sg" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEB-lmRZEe6bAesDIgR3sg" name="ProgramVisualization" specification="_qAT8MGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEB-l2RZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEB-mGRZEe6bAesDIgR3sg" type="_pyydkGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEB-mWRZEe6bAesDIgR3sg" name="displayVisualization" specification="_pyydkWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEB-mmRZEe6bAesDIgR3sg" type="_pyKygGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEB-m2RZEe6bAesDIgR3sg" name="createHeader" specification="_pyzEo2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEB-nGRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEB-nWRZEe6bAesDIgR3sg" name="createFooter" specification="_pyzrsWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEB-nmRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEB-n2RZEe6bAesDIgR3sg" name="createColumnHeader" specification="_pyzrtWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEB-oGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qEB-oWRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEB-omRZEe6bAesDIgR3sg" name="createVisualizationData" specification="_py0Sw2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEB-o2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qEB-pGRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEB-pWRZEe6bAesDIgR3sg" name="createTitle" specification="_py0SymRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEB-pmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pyydkWRZEe6bAesDIgR3sg" name="displayVisualization" method="_qEB-mWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAT8NWRZEe6bAesDIgR3sg" type="_pyKygGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pyzEo2RZEe6bAesDIgR3sg" name="createHeader" visibility="protected" method="_qEB-m2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAT8NmRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pyzrsWRZEe6bAesDIgR3sg" name="createFooter" visibility="protected" method="_qEB-nWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAT8N2RZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pyzrtWRZEe6bAesDIgR3sg" name="createColumnHeader" visibility="protected" method="_qEB-n2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pyzrtmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pyzrt2RZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_py0Sw2RZEe6bAesDIgR3sg" name="createVisualizationData" visibility="protected" method="_qEB-omRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_py0SxGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_py0SxWRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_py0SymRZEe6bAesDIgR3sg" name="createTitle" visibility="private" method="_qEB-pWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_py050GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAT8MGRZEe6bAesDIgR3sg" name="ProgramVisualization" visibility="package" method="_qEB-lmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAT8MmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAT8M2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qAT8MWRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAT8NGRZEe6bAesDIgR3sg" type="_pyydkGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_py1g4GRZEe6bAesDIgR3sg" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_qCNZoGRZEe6bAesDIgR3sg" client="_py1g4GRZEe6bAesDIgR3sg" supplier="_p_p04GRZEe6bAesDIgR3sg" contract="_p_p04GRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qECloGRZEe6bAesDIgR3sg" name="compare" specification="_qCPO0GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qECloWRZEe6bAesDIgR3sg" name="obj1" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEClomRZEe6bAesDIgR3sg" name="obj2" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEClo2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qCPO0GRZEe6bAesDIgR3sg" name="compare" method="_qECloGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCPO0WRZEe6bAesDIgR3sg" name="obj1" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCPO0mRZEe6bAesDIgR3sg" name="obj2" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCPO02RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_py2vAGRZEe6bAesDIgR3sg" name="ReleaseTimeQueue">
              <generalization xmi:id="_py39ImRZEe6bAesDIgR3sg" general="_py39IGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDP7dWRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDQigGRZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEClpGRZEe6bAesDIgR3sg" name="ReleaseTimeQueue" specification="_py3WEWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEClpWRZEe6bAesDIgR3sg" type="_py2vAGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEClpmRZEe6bAesDIgR3sg" name="ReleaseTimeQueue" specification="_qAVKUWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEClp2RZEe6bAesDIgR3sg" name="schedulableObjects" type="_qAUjQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEClqGRZEe6bAesDIgR3sg" type="_py2vAGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_py3WEWRZEe6bAesDIgR3sg" name="ReleaseTimeQueue" visibility="package" method="_qEClpGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_py3WEmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_py3WE2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_py3WFGRZEe6bAesDIgR3sg" type="_py2vAGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAVKUWRZEe6bAesDIgR3sg" name="ReleaseTimeQueue" visibility="package" method="_qEClpmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAVKU2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAVKVGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qAVKUmRZEe6bAesDIgR3sg" name="schedulableObjects" type="_qAUjQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAVKVWRZEe6bAesDIgR3sg" type="_py2vAGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_py5LQGRZEe6bAesDIgR3sg" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_qEf4omRZEe6bAesDIgR3sg">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEClqWRZEe6bAesDIgR3sg" name="ReliabilityAnalysis" specification="_qAVxYGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEClqmRZEe6bAesDIgR3sg" name="program" type="_pzoLEGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEClq2RZEe6bAesDIgR3sg" type="_py5LQGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEClrGRZEe6bAesDIgR3sg" name="verifyReliabilities" specification="_py5yUGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEClrWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_py5yUGRZEe6bAesDIgR3sg" name="verifyReliabilities" method="_qEClrGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_py5yUWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAVxYGRZEe6bAesDIgR3sg" name="ReliabilityAnalysis" method="_qEClqWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAVxYmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAVxY2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qAVxYWRZEe6bAesDIgR3sg" name="program" type="_pzoLEGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAVxZGRZEe6bAesDIgR3sg" type="_py5LQGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_py5yUmRZEe6bAesDIgR3sg" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_qEf4o2RZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_py6ZYGRZEe6bAesDIgR3sg" name="minPacketReceptionRate" type="_qCQc8GRZEe6bAesDIgR3sg" isReadOnly="true"/>
              <ownedAttribute xmi:id="_py6ZYWRZEe6bAesDIgR3sg" name="e2e" type="_qCQc8GRZEe6bAesDIgR3sg" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_py7AcGRZEe6bAesDIgR3sg" name="ReliabilityRow">
              <generalization xmi:id="_qAWYcGRZEe6bAesDIgR3sg" general="_pzAgAGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDQigWRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDQigmRZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEClrmRZEe6bAesDIgR3sg" name="ReliabilityRow" specification="_py7AcWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEClr2RZEe6bAesDIgR3sg" type="_py7AcGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEClsGRZEe6bAesDIgR3sg" name="ReliabilityRow" specification="_qCREAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEClsWRZEe6bAesDIgR3sg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEClsmRZEe6bAesDIgR3sg" name="element" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qECls2RZEe6bAesDIgR3sg" type="_py7AcGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qECltGRZEe6bAesDIgR3sg" name="ReliabilityRow" specification="_qCRrEGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qECltWRZEe6bAesDIgR3sg" name="rowArray" type="_qCQc8GRZEe6bAesDIgR3sg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qECltmRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEClt2RZEe6bAesDIgR3sg" type="_py7AcGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_py7AcWRZEe6bAesDIgR3sg" name="ReliabilityRow" method="_qEClrmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_py7AcmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_py7Ac2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_py7AdGRZEe6bAesDIgR3sg" type="_py7AcGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCREAGRZEe6bAesDIgR3sg" name="ReliabilityRow" visibility="package" method="_qEClsGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qCREA2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qCREBGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qCREAWRZEe6bAesDIgR3sg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCREAmRZEe6bAesDIgR3sg" name="element" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCREBWRZEe6bAesDIgR3sg" type="_py7AcGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCRrEGRZEe6bAesDIgR3sg" name="ReliabilityRow" visibility="package" method="_qECltGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qCRrEmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qCRrE2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qCRrEWRZEe6bAesDIgR3sg" name="rowArray" type="_qCQc8GRZEe6bAesDIgR3sg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qCSSIGRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCRrFGRZEe6bAesDIgR3sg" type="_py7AcGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_py7ngGRZEe6bAesDIgR3sg" name="ReliabilityTable">
              <generalization xmi:id="_qAXmkGRZEe6bAesDIgR3sg" general="_pzlHwGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDQig2RZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDQihGRZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qECluGRZEe6bAesDIgR3sg" name="ReliabilityTable" specification="_py8OkGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qECluWRZEe6bAesDIgR3sg" type="_py7ngGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEClumRZEe6bAesDIgR3sg" name="ReliabilityTable" specification="_py8OlGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEClu2RZEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEClvGRZEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEClvWRZEe6bAesDIgR3sg" type="_py7ngGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_py8OkGRZEe6bAesDIgR3sg" name="ReliabilityTable" method="_qECluGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_py8OkWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_py8OkmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_py8Ok2RZEe6bAesDIgR3sg" type="_py7ngGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_py8OlGRZEe6bAesDIgR3sg" name="ReliabilityTable" visibility="package" method="_qEClumRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_py8Ol2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_py8OmGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_py8OlWRZEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_py8OlmRZEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_py8OmWRZEe6bAesDIgR3sg" type="_py7ngGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_py81oGRZEe6bAesDIgR3sg" name="ReliabilityVisualization">
              <ownedComment xmi:id="_qEf4pGRZEe6bAesDIgR3sg">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_qAY0tWRZEe6bAesDIgR3sg" general="_p0AlkGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDQihWRZEe6bAesDIgR3sg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDQihmRZEe6bAesDIgR3sg" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDQih2RZEe6bAesDIgR3sg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDQiiGRZEe6bAesDIgR3sg" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDRJkGRZEe6bAesDIgR3sg" name="warp" visibility="private" type="_p0S5cGRZEe6bAesDIgR3sg" association="_qFBdFGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDRJkmRZEe6bAesDIgR3sg" name="ra" visibility="private" type="_py5LQGRZEe6bAesDIgR3sg" association="_qFBdF2RZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEDMsGRZEe6bAesDIgR3sg" name="ReliabilityVisualization" specification="_qAY0sGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEDMsWRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEDMsmRZEe6bAesDIgR3sg" type="_py81oGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qAY0sGRZEe6bAesDIgR3sg" name="ReliabilityVisualization" visibility="package" method="_qEDMsGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAY0smRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAY0s2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qAY0sWRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAY0tGRZEe6bAesDIgR3sg" type="_py81oGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_py9csGRZEe6bAesDIgR3sg" name="ReportVisualization">
              <generalization xmi:id="_qAZbymRZEe6bAesDIgR3sg" general="_p0AlkGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDRJlGRZEe6bAesDIgR3sg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDRJlWRZEe6bAesDIgR3sg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDRJlmRZEe6bAesDIgR3sg" name="content" visibility="private" type="_px4eoGRZEe6bAesDIgR3sg" association="_qFCEIWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDRwoGRZEe6bAesDIgR3sg" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEDzwGRZEe6bAesDIgR3sg" name="ReportVisualization" specification="_qAZbwGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEDzwWRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEDzwmRZEe6bAesDIgR3sg" name="warp" type="_pzF_kGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEDzw2RZEe6bAesDIgR3sg" name="content" type="_px4eoGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEDzxGRZEe6bAesDIgR3sg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEDzxWRZEe6bAesDIgR3sg" type="_py9csGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEDzxmRZEe6bAesDIgR3sg" name="visualization" specification="_py-q0GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEDzx2RZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEDzyGRZEe6bAesDIgR3sg" name="createReport" specification="_py_R42RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEDzyWRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_py-q0GRZEe6bAesDIgR3sg" name="visualization" method="_qEDzxmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAZbyGRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_py_R42RZEe6bAesDIgR3sg" name="createReport" visibility="private" method="_qEDzyGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAZbyWRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAZbwGRZEe6bAesDIgR3sg" name="ReportVisualization" visibility="package" method="_qEDzwGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAZbxWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAZbxmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qAZbwWRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAZbwmRZEe6bAesDIgR3sg" name="warp" type="_pzF_kGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAZbw2RZEe6bAesDIgR3sg" name="content" type="_px4eoGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAZbxGRZEe6bAesDIgR3sg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAZbx2RZEe6bAesDIgR3sg" type="_py9csGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pzAgAGRZEe6bAesDIgR3sg" name="Row">
              <generalization xmi:id="_qCUHVGRZEe6bAesDIgR3sg" general="_p_fc0GRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDRwomRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDRwo2RZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEEa0GRZEe6bAesDIgR3sg" name="Row" specification="_pzBHEGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEEa0WRZEe6bAesDIgR3sg" type="_pzAgAGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEEa0mRZEe6bAesDIgR3sg" name="Row" specification="_qCS5MGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEEa02RZEe6bAesDIgR3sg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEEa1GRZEe6bAesDIgR3sg" name="element" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEEa1WRZEe6bAesDIgR3sg" type="_pzAgAGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEFB4GRZEe6bAesDIgR3sg" name="Row" specification="_qCTgRGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEFB4WRZEe6bAesDIgR3sg" name="rowArray" type="_qB5QkGRZEe6bAesDIgR3sg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qEFB4mRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEFB42RZEe6bAesDIgR3sg" type="_pzAgAGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEFB5GRZEe6bAesDIgR3sg" name="Row" specification="_pzBuIGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEFB5WRZEe6bAesDIgR3sg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEFB5mRZEe6bAesDIgR3sg" type="_pzAgAGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pzBHEGRZEe6bAesDIgR3sg" name="Row" method="_qEEa0GRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pzBHEWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pzBHEmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pzBHE2RZEe6bAesDIgR3sg" type="_pzAgAGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzBuIGRZEe6bAesDIgR3sg" name="Row" visibility="package" method="_qEFB5GRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pzBuImRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pzBuI2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pzBuIWRZEe6bAesDIgR3sg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzBuJGRZEe6bAesDIgR3sg" type="_pzAgAGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCS5MGRZEe6bAesDIgR3sg" name="Row" visibility="package" method="_qEEa0mRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qCTgQWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qCTgQmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qCS5MWRZEe6bAesDIgR3sg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCTgQGRZEe6bAesDIgR3sg" name="element" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCTgQ2RZEe6bAesDIgR3sg" type="_pzAgAGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCTgRGRZEe6bAesDIgR3sg" name="Row" visibility="package" method="_qEFB4GRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qCUHUGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qCUHUWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qCTgRWRZEe6bAesDIgR3sg" name="rowArray" type="_qB5QkGRZEe6bAesDIgR3sg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qCUHU2RZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCUHUmRZEe6bAesDIgR3sg" type="_pzAgAGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pzCVMGRZEe6bAesDIgR3sg" name="SystemFactory">
              <ownedComment xmi:id="_qEf4pWRZEe6bAesDIgR3sg">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEFo8GRZEe6bAesDIgR3sg" name="create" specification="_qAb4AWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEFo8WRZEe6bAesDIgR3sg" name="workload" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEFo8mRZEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEFo82RZEe6bAesDIgR3sg" name="choice" type="_pzGmoGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEFo9GRZEe6bAesDIgR3sg" type="_p0S5cGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qAb4AWRZEe6bAesDIgR3sg" name="create" isStatic="true" method="_qEFo8GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAb4AmRZEe6bAesDIgR3sg" name="workload" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAb4A2RZEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAb4BGRZEe6bAesDIgR3sg" name="choice" type="_pzGmoGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAcfEGRZEe6bAesDIgR3sg" type="_p0S5cGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pzC8QGRZEe6bAesDIgR3sg" name="SchedulableObjectQueue">
              <generalization xmi:id="_pzExcGRZEe6bAesDIgR3sg" general="_py39IGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDRwpGRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDRwpWRZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEFo9WRZEe6bAesDIgR3sg" name="SchedulableObjectQueue" specification="_qCWjkGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEFo9mRZEe6bAesDIgR3sg" name="comparitor" type="_p_p04GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEFo92RZEe6bAesDIgR3sg" type="_pzC8QGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEGQAGRZEe6bAesDIgR3sg" name="SchedulableObjectQueue" specification="_qCXxsGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEGQAWRZEe6bAesDIgR3sg" name="comparitor" type="_p_p04GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEGQAmRZEe6bAesDIgR3sg" name="schedulableObjects" type="_qAUjQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEGQA2RZEe6bAesDIgR3sg" type="_pzC8QGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qCWjkGRZEe6bAesDIgR3sg" name="SchedulableObjectQueue" visibility="package" method="_qEFo9WRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qCWjkmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qCWjk2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qCWjkWRZEe6bAesDIgR3sg" name="comparitor" type="_p_p04GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCWjlGRZEe6bAesDIgR3sg" type="_pzC8QGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCXxsGRZEe6bAesDIgR3sg" name="SchedulableObjectQueue" visibility="package" method="_qEGQAGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qCYYwGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qCYYwWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qCXxsWRZEe6bAesDIgR3sg" name="comparitor" type="_p_p04GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCXxsmRZEe6bAesDIgR3sg" name="schedulableObjects" type="_qAUjQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCYYwmRZEe6bAesDIgR3sg" type="_pzC8QGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_pzF_kGRZEe6bAesDIgR3sg" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_qAdGIGRZEe6bAesDIgR3sg" general="_py5yUmRZEe6bAesDIgR3sg"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_pzGmoGRZEe6bAesDIgR3sg" name="ScheduleChoices">
                <ownedLiteral xmi:id="_pzHNsGRZEe6bAesDIgR3sg" name="PRIORITY"/>
                <ownedLiteral xmi:id="_pzHNsWRZEe6bAesDIgR3sg" name="RM"/>
                <ownedLiteral xmi:id="_pzHNsmRZEe6bAesDIgR3sg" name="DM"/>
                <ownedLiteral xmi:id="_pzHNs2RZEe6bAesDIgR3sg" name="RTHART"/>
                <ownedLiteral xmi:id="_pzHNtGRZEe6bAesDIgR3sg" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_pzHNtWRZEe6bAesDIgR3sg" name="POSET_RM"/>
                <ownedLiteral xmi:id="_pzIb0GRZEe6bAesDIgR3sg" name="POSET_DM"/>
                <ownedLiteral xmi:id="_pzIb0WRZEe6bAesDIgR3sg" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_pzIb0mRZEe6bAesDIgR3sg" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_pzIb02RZEe6bAesDIgR3sg" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_pzIb1GRZEe6bAesDIgR3sg" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_pzIb1WRZEe6bAesDIgR3sg" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_pzIb1mRZEe6bAesDIgR3sg" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_pzJC4GRZEe6bAesDIgR3sg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_pzJC4WRZEe6bAesDIgR3sg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_pzJp8GRZEe6bAesDIgR3sg" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_pzJp8WRZEe6bAesDIgR3sg" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_pzJp8mRZEe6bAesDIgR3sg" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_pzJp82RZEe6bAesDIgR3sg" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pzJp9GRZEe6bAesDIgR3sg" name="ScheduleTable">
              <generalization xmi:id="_qAdGIWRZEe6bAesDIgR3sg" general="_pzlHwGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDRwpmRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDSXsGRZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEGQBGRZEe6bAesDIgR3sg" name="ScheduleTable" specification="_pzKRAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEGQBWRZEe6bAesDIgR3sg" type="_pzJp9GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEGQBmRZEe6bAesDIgR3sg" name="ScheduleTable" specification="_pzK4EGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEGQB2RZEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEGQCGRZEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEGQCWRZEe6bAesDIgR3sg" type="_pzJp9GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pzKRAGRZEe6bAesDIgR3sg" name="ScheduleTable" visibility="package" method="_qEGQBGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pzKRAWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pzKRAmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pzKRA2RZEe6bAesDIgR3sg" type="_pzJp9GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzK4EGRZEe6bAesDIgR3sg" name="ScheduleTable" visibility="package" method="_qEGQBmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pzK4E2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pzK4FGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pzK4EWRZEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzK4EmRZEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzK4FWRZEe6bAesDIgR3sg" type="_pzJp9GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pzLfIGRZEe6bAesDIgR3sg" name="ScheduleTime">
              <ownedAttribute xmi:id="_qDSXsWRZEe6bAesDIgR3sg" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDS-wGRZEe6bAesDIgR3sg" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEGQCmRZEe6bAesDIgR3sg" name="ScheduleTime" specification="_pzMGMGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEGQC2RZEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEGQDGRZEe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEGQDWRZEe6bAesDIgR3sg" type="_pzLfIGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pzMGMGRZEe6bAesDIgR3sg" name="ScheduleTime" visibility="package" method="_qEGQCmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pzMGM2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pzMGNGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pzMGMWRZEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzMGMmRZEe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzMGNWRZEe6bAesDIgR3sg" type="_pzLfIGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pzMtQGRZEe6bAesDIgR3sg" name="SimulatorInput">
              <ownedComment xmi:id="_qEf4pmRZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pzNUUGRZEe6bAesDIgR3sg" name="SortedPeriodQueue">
              <generalization xmi:id="_pzOidGRZEe6bAesDIgR3sg" general="_py39IGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDS-wWRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDTl0GRZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEGQDmRZEe6bAesDIgR3sg" name="SortedPeriodQueue" specification="_pzOicGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEGQD2RZEe6bAesDIgR3sg" type="_pzNUUGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEGQEGRZEe6bAesDIgR3sg" name="SortedPeriodQueue" specification="_qAdtMWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEGQEWRZEe6bAesDIgR3sg" name="schedulableObjects" type="_qAUjQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEGQEmRZEe6bAesDIgR3sg" type="_pzNUUGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pzOicGRZEe6bAesDIgR3sg" name="SortedPeriodQueue" visibility="package" method="_qEGQDmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pzOicWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pzOicmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pzOic2RZEe6bAesDIgR3sg" type="_pzNUUGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAdtMWRZEe6bAesDIgR3sg" name="SortedPeriodQueue" visibility="package" method="_qEGQEGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAdtM2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAdtNGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qAdtMmRZEe6bAesDIgR3sg" name="schedulableObjects" type="_qAUjQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAdtNWRZEe6bAesDIgR3sg" type="_pzNUUGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pzPJgWRZEe6bAesDIgR3sg" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_qEf4p2RZEe6bAesDIgR3sg">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qDTl0WRZEe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDTl0mRZEe6bAesDIgR3sg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDTl02RZEe6bAesDIgR3sg" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDUM4GRZEe6bAesDIgR3sg" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDUM4mRZEe6bAesDIgR3sg" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDUM42RZEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDUM5WRZEe6bAesDIgR3sg" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDUz8GRZEe6bAesDIgR3sg" name="schedule" visibility="protected" type="_pzJp9GRZEe6bAesDIgR3sg" association="_qFCEJGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDUz8mRZEe6bAesDIgR3sg" name="poset" visibility="protected" type="_pzzxQGRZEe6bAesDIgR3sg" association="_qFCrMWRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEG3EGRZEe6bAesDIgR3sg" name="Schedule" specification="_qAeUQWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEG3EWRZEe6bAesDIgR3sg" name="poset" type="_pzzxQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEG3EmRZEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEG3E2RZEe6bAesDIgR3sg" type="_pzPJgWRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEG3HmRZEe6bAesDIgR3sg" name="getSchedule" specification="_pzSM0mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEG3H2RZEe6bAesDIgR3sg" type="_pzJp9GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEG3IGRZEe6bAesDIgR3sg" name="buildSchedule" specification="_pzSz4GRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEG3IWRZEe6bAesDIgR3sg" name="toProgram" specification="_pzSz4WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEG3ImRZEe6bAesDIgR3sg" type="_pywoZWRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEG3I2RZEe6bAesDIgR3sg" name="replaceNullWithSleep" specification="_qAe7V2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEG3JGRZEe6bAesDIgR3sg" name="program" type="_pywoZWRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEG3JWRZEe6bAesDIgR3sg" name="fakeSchedulingToTestRest" specification="_qAe7WWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEG3JmRZEe6bAesDIgR3sg" name="next" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEG3J2RZEe6bAesDIgR3sg" name="getChannelAndSetStartTime" specification="_qAfiYGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEG3KGRZEe6bAesDIgR3sg" name="schedulableObject" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEG3KWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEG3KmRZEe6bAesDIgR3sg" name="findChannelAndTime" specification="_qAfiY2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEG3K2RZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEG3LGRZEe6bAesDIgR3sg" name="schedulableObject" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEG3LWRZEe6bAesDIgR3sg" type="_pzPwkGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEHeIGRZEe6bAesDIgR3sg" name="continueSearch" specification="_qAgJcWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEHeIWRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeImRZEe6bAesDIgR3sg" name="activation" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEHeI2RZEe6bAesDIgR3sg" type="_pzPwkGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEHeJGRZEe6bAesDIgR3sg" name="noOtherChannelConflicts" specification="_qAgwgGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEHeJWRZEe6bAesDIgR3sg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeJmRZEe6bAesDIgR3sg" name="schedulableObject" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEHeJ2RZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeKGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEHeKWRZEe6bAesDIgR3sg" name="conflictsExist" specification="_qAgwhWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEHeKmRZEe6bAesDIgR3sg" name="obj" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEHeK2RZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeLGRZEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeLWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEHeLmRZEe6bAesDIgR3sg" name="freeOfCoordinatorConflicts" specification="_qAhXkGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEHeL2RZEe6bAesDIgR3sg" name="obj" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEHeMGRZEe6bAesDIgR3sg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeMWRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeMmRZEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeM2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEHeNGRZEe6bAesDIgR3sg" name="isAvailable" specification="_qAh-oGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEHeNWRZEe6bAesDIgR3sg" name="a1" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEHeNmRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeN2RZEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeOGRZEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeOWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEHeOmRZEe6bAesDIgR3sg" name="isAvailable" specification="_qAilsWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEHeO2RZEe6bAesDIgR3sg" name="a1" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEHePGRZEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHePWRZEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHePmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEHeP2RZEe6bAesDIgR3sg" name="timeRemaining" specification="_pzUCAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEHeQGRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeQWRZEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeQmRZEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeQ2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEHeRGRZEe6bAesDIgR3sg" name="canCombineEntriesInPlace" specification="_qAjMwGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEHeRWRZEe6bAesDIgR3sg" name="a1" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEHeRmRZEe6bAesDIgR3sg" name="a2" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEHeR2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEHeSGRZEe6bAesDIgR3sg" name="combinedEntriesInPlace" specification="_qAjMxGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEHeSWRZEe6bAesDIgR3sg" name="a1" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEHeSmRZEe6bAesDIgR3sg" name="a2" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEHeS2RZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEHeTGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEIFMGRZEe6bAesDIgR3sg" name="addToSchedule" specification="_qAjz0WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEIFMWRZEe6bAesDIgR3sg" name="next" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEIFMmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEIFM2RZEe6bAesDIgR3sg" name="reportNotSchedulable" specification="_qAka4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEIFNGRZEe6bAesDIgR3sg" name="object" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEIFNWRZEe6bAesDIgR3sg" name="printVerbose" specification="_pzUpEGRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEIFNmRZEe6bAesDIgR3sg" name="print" specification="_pzUpEWRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pzSM0mRZEe6bAesDIgR3sg" name="getSchedule" method="_qEG3HmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEgfsGRZEe6bAesDIgR3sg">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_qAe7VWRZEe6bAesDIgR3sg" type="_pzJp9GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzSz4GRZEe6bAesDIgR3sg" name="buildSchedule" visibility="private" method="_qEG3IGRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pzSz4WRZEe6bAesDIgR3sg" name="toProgram" method="_qEG3IWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAe7VmRZEe6bAesDIgR3sg" type="_pywoZWRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzUCAGRZEe6bAesDIgR3sg" name="timeRemaining" visibility="protected" method="_qEHeP2RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEgftmRZEe6bAesDIgR3sg">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_pzUCAWRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzUCAmRZEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzUCA2RZEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzUCBGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzUpEGRZEe6bAesDIgR3sg" name="printVerbose" method="_qEIFNWRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pzUpEWRZEe6bAesDIgR3sg" name="print" method="_qEIFNmRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_qAeUQWRZEe6bAesDIgR3sg" name="Schedule" visibility="package" method="_qEG3EGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAe7UmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAe7U2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qAe7UGRZEe6bAesDIgR3sg" name="poset" type="_pzzxQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAe7UWRZEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAe7VGRZEe6bAesDIgR3sg" type="_pzPJgWRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAe7V2RZEe6bAesDIgR3sg" name="replaceNullWithSleep" visibility="private" method="_qEG3I2RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEgfsWRZEe6bAesDIgR3sg">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_qAe7WGRZEe6bAesDIgR3sg" name="program" type="_pywoZWRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAe7WWRZEe6bAesDIgR3sg" name="fakeSchedulingToTestRest" visibility="private" method="_qEG3JWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAe7WmRZEe6bAesDIgR3sg" name="next" type="_p1H_4GRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAfiYGRZEe6bAesDIgR3sg" name="getChannelAndSetStartTime" visibility="protected" method="_qEG3J2RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEgfsmRZEe6bAesDIgR3sg">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_qAfiYWRZEe6bAesDIgR3sg" name="schedulableObject" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAfiYmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAfiY2RZEe6bAesDIgR3sg" name="findChannelAndTime" visibility="protected" method="_qEG3KmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAfiZGRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAfiZWRZEe6bAesDIgR3sg" name="schedulableObject" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAgJcGRZEe6bAesDIgR3sg" type="_pzPwkGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAgJcWRZEe6bAesDIgR3sg" name="continueSearch" visibility="protected" method="_qEHeIGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEgfs2RZEe6bAesDIgR3sg">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_qAgJcmRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAgJc2RZEe6bAesDIgR3sg" name="activation" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAgJdGRZEe6bAesDIgR3sg" type="_pzPwkGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAgwgGRZEe6bAesDIgR3sg" name="noOtherChannelConflicts" visibility="protected" method="_qEHeJGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAgwgWRZEe6bAesDIgR3sg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAgwgmRZEe6bAesDIgR3sg" name="schedulableObject" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAgwg2RZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAgwhGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAgwhWRZEe6bAesDIgR3sg" name="conflictsExist" visibility="protected" method="_qEHeKWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAgwhmRZEe6bAesDIgR3sg" name="obj" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAgwh2RZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAgwiGRZEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAgwiWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAhXkGRZEe6bAesDIgR3sg" name="freeOfCoordinatorConflicts" visibility="protected" method="_qEHeLmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAhXkWRZEe6bAesDIgR3sg" name="obj" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAhXkmRZEe6bAesDIgR3sg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAhXk2RZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAhXlGRZEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAhXlWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAh-oGRZEe6bAesDIgR3sg" name="isAvailable" visibility="protected" method="_qEHeNGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEgftGRZEe6bAesDIgR3sg">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_qAh-oWRZEe6bAesDIgR3sg" name="a1" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAh-omRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAh-o2RZEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAh-pGRZEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAilsGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAilsWRZEe6bAesDIgR3sg" name="isAvailable" visibility="protected" method="_qEHeOmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEgftWRZEe6bAesDIgR3sg">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_qAilsmRZEe6bAesDIgR3sg" name="a1" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAils2RZEe6bAesDIgR3sg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAiltGRZEe6bAesDIgR3sg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAiltWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAjMwGRZEe6bAesDIgR3sg" name="canCombineEntriesInPlace" visibility="private" method="_qEHeRGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAjMwWRZEe6bAesDIgR3sg" name="a1" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAjMwmRZEe6bAesDIgR3sg" name="a2" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAjMw2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAjMxGRZEe6bAesDIgR3sg" name="combinedEntriesInPlace" visibility="private" method="_qEHeSGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAjMxWRZEe6bAesDIgR3sg" name="a1" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAjMxmRZEe6bAesDIgR3sg" name="a2" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAjMx2RZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAjz0GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAjz0WRZEe6bAesDIgR3sg" name="addToSchedule" visibility="protected" method="_qEIFMGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAjz0mRZEe6bAesDIgR3sg" name="next" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAjz02RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAka4GRZEe6bAesDIgR3sg" name="reportNotSchedulable" visibility="private" method="_qEIFM2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAka4WRZEe6bAesDIgR3sg" name="object" type="_p1H_4GRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_pzPwkGRZEe6bAesDIgR3sg" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_qDUz9GRZEe6bAesDIgR3sg" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_qDUz9mRZEe6bAesDIgR3sg" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEG3FGRZEe6bAesDIgR3sg" name="ScheduleLocation" specification="_pzQXoGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEG3FWRZEe6bAesDIgR3sg" type="_pzPwkGRZEe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEG3FmRZEe6bAesDIgR3sg" name="ScheduleLocation" specification="_pzQXpGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEG3F2RZEe6bAesDIgR3sg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_qEG3GGRZEe6bAesDIgR3sg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_qEG3GWRZEe6bAesDIgR3sg" type="_pzPwkGRZEe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEG3GmRZEe6bAesDIgR3sg" name="getChannel" specification="_pzRlwWRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEG3G2RZEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEG3HGRZEe6bAesDIgR3sg" name="getTime" specification="_pzSM0GRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEG3HWRZEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_pzQXoGRZEe6bAesDIgR3sg" name="ScheduleLocation" visibility="package" method="_qEG3FGRZEe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_pzQXoWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_pzQXomRZEe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_pzQXo2RZEe6bAesDIgR3sg" type="_pzPwkGRZEe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_pzQXpGRZEe6bAesDIgR3sg" name="ScheduleLocation" visibility="package" method="_qEG3FmRZEe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_pzQ-smRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_pzQ-s2RZEe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_pzQ-sGRZEe6bAesDIgR3sg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_pzQ-sWRZEe6bAesDIgR3sg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_pzRlwGRZEe6bAesDIgR3sg" type="_pzPwkGRZEe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_pzRlwWRZEe6bAesDIgR3sg" name="getChannel" visibility="protected" method="_qEG3GmRZEe6bAesDIgR3sg">
                  <ownedComment xmi:id="_qEf4qGRZEe6bAesDIgR3sg">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_pzRlwmRZEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_pzSM0GRZEe6bAesDIgR3sg" name="getTime" visibility="protected" method="_qEG3HGRZEe6bAesDIgR3sg">
                  <ownedComment xmi:id="_qEf4qWRZEe6bAesDIgR3sg">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_pzSM0WRZEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pzY6gGRZEe6bAesDIgR3sg" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_qDVbAWRZEe6bAesDIgR3sg" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDWCEGRZEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDWCEWRZEe6bAesDIgR3sg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDWCEmRZEe6bAesDIgR3sg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDWCE2RZEe6bAesDIgR3sg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDWCFGRZEe6bAesDIgR3sg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDWCFWRZEe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDWCFmRZEe6bAesDIgR3sg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDWCF2RZEe6bAesDIgR3sg" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDWCGGRZEe6bAesDIgR3sg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDWCGWRZEe6bAesDIgR3sg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDWpIWRZEe6bAesDIgR3sg" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDWpImRZEe6bAesDIgR3sg" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDWpI2RZEe6bAesDIgR3sg" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDWpJGRZEe6bAesDIgR3sg" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDWpJmRZEe6bAesDIgR3sg" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDXQMGRZEe6bAesDIgR3sg" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDXQMmRZEe6bAesDIgR3sg" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDXQM2RZEe6bAesDIgR3sg" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDXQNGRZEe6bAesDIgR3sg" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDXQNWRZEe6bAesDIgR3sg" name="predecessor" type="_pzY6gGRZEe6bAesDIgR3sg" association="_qEhGwGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDXQNmRZEe6bAesDIgR3sg" name="endTimes" visibility="private" type="_py39IGRZEe6bAesDIgR3sg" association="_qFCrNGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDX3QmRZEe6bAesDIgR3sg" name="subObjects" type="_qAneMWRZEe6bAesDIgR3sg" isReadOnly="true" association="_qFCrN2RZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEIFN2RZEe6bAesDIgR3sg" name="SchedulableObject" specification="_pzaIoGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEIFOGRZEe6bAesDIgR3sg" type="_pzY6gGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEIsQGRZEe6bAesDIgR3sg" name="SchedulableObject" specification="_qAosUGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEIsQWRZEe6bAesDIgR3sg" name="obj" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEIsQmRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEIsQ2RZEe6bAesDIgR3sg" type="_pzY6gGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEIsRGRZEe6bAesDIgR3sg" name="SchedulableObject" specification="_pzaIpGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEIsRWRZEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEIsRmRZEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEIsR2RZEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEIsSGRZEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEIsSWRZEe6bAesDIgR3sg" type="_pzY6gGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEIsSmRZEe6bAesDIgR3sg" name="SchedulableObject" specification="_pzbWwGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEIsS2RZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEIsTGRZEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEIsTWRZEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEIsTmRZEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEIsT2RZEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEIsUGRZEe6bAesDIgR3sg" type="_pzY6gGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEIsUWRZEe6bAesDIgR3sg" name="setDefaultParameters" specification="_pzbWyWRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEIsUmRZEe6bAesDIgR3sg" name="getAllEndTimes" specification="_pzbWymRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEIsU2RZEe6bAesDIgR3sg" type="_py39IGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEIsVGRZEe6bAesDIgR3sg" name="addToEndTimes" specification="_pzb90WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEIsVWRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEIsVmRZEe6bAesDIgR3sg" name="peekEndTimes" specification="_pzck4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEIsV2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEIsWGRZEe6bAesDIgR3sg" name="pollEndTimes" specification="_pzck4mRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJTUGRZEe6bAesDIgR3sg" name="addSubObject" specification="_qAosV2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJTUWRZEe6bAesDIgR3sg" name="obj" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJTUmRZEe6bAesDIgR3sg" name="getName" specification="_pzck42RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJTU2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJTVGRZEe6bAesDIgR3sg" name="setName" specification="_pzdL8GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJTVWRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJTVmRZEe6bAesDIgR3sg" name="getReleaseTime" specification="_pzdL8mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJTV2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJTWGRZEe6bAesDIgR3sg" name="getPhase" specification="_pzdL9GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJTWWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJTWmRZEe6bAesDIgR3sg" name="getStartTime" specification="_pzdzAWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJTW2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJTXGRZEe6bAesDIgR3sg" name="setEndTime" specification="_pzdzA2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJTXWRZEe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJTXmRZEe6bAesDIgR3sg" name="setStartTime" specification="_pzdzBWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJTX2RZEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJTYGRZEe6bAesDIgR3sg" name="setReleaseTime" specification="_pzeaEGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJTYWRZEe6bAesDIgR3sg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJTYmRZEe6bAesDIgR3sg" name="setPeriod" specification="_pzeaEmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJTY2RZEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJTZGRZEe6bAesDIgR3sg" name="setPhase" specification="_pzfBIGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJTZWRZEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJTZmRZEe6bAesDIgR3sg" name="setNextReleaseTime" specification="_pzfBImRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJTZ2RZEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJ6YGRZEe6bAesDIgR3sg" name="maxPhaseComparison" specification="_qApTYGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJ6YWRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6YmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJ6Y2RZEe6bAesDIgR3sg" name="maxPhaseComparison" specification="_qApTY2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJ6ZGRZEe6bAesDIgR3sg" name="obj1" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6ZWRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6ZmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJ6Z2RZEe6bAesDIgR3sg" name="deadlineComparison" specification="_qAp6cGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJ6aGRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6aWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJ6amRZEe6bAesDIgR3sg" name="deadlineComparison" specification="_qAp6c2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJ6a2RZEe6bAesDIgR3sg" name="obj1" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6bGRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6bWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJ6bmRZEe6bAesDIgR3sg" name="periodComparison" specification="_qAqhgmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJ6b2RZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6cGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJ6cWRZEe6bAesDIgR3sg" name="periodComparison" specification="_qArIkGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJ6cmRZEe6bAesDIgR3sg" name="obj1" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6c2RZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6dGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJ6dWRZEe6bAesDIgR3sg" name="priorityComparison" specification="_qArIlGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJ6dmRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6d2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJ6eGRZEe6bAesDIgR3sg" name="priorityComparison" specification="_qArIl2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJ6eWRZEe6bAesDIgR3sg" name="obj1" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6emRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6e2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJ6fGRZEe6bAesDIgR3sg" name="releaseTimeComparison" specification="_qArvomRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJ6fWRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6fmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJ6f2RZEe6bAesDIgR3sg" name="releaseTimeComparison" specification="_qAsWsmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJ6gGRZEe6bAesDIgR3sg" name="obj1" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6gWRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6gmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJ6g2RZEe6bAesDIgR3sg" name="LatestReleaseTimeComparison" specification="_qAsWtmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJ6hGRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6hWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEJ6hmRZEe6bAesDIgR3sg" name="LatestReleaseTimeComparison" specification="_qAs9wWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEJ6h2RZEe6bAesDIgR3sg" name="obj1" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6iGRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEJ6iWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEKhcGRZEe6bAesDIgR3sg" name="compareAscendingOrder" specification="_pzgPQGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEKhcWRZEe6bAesDIgR3sg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEKhcmRZEe6bAesDIgR3sg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEKhc2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEKhdGRZEe6bAesDIgR3sg" name="compareDescendingOrder" specification="_pzgPRGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEKhdWRZEe6bAesDIgR3sg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEKhdmRZEe6bAesDIgR3sg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEKhd2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEKheGRZEe6bAesDIgR3sg" name="print" specification="_pzg2UGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEKheWRZEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEKhemRZEe6bAesDIgR3sg" name="print" specification="_pzg2UmRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pzaIoGRZEe6bAesDIgR3sg" name="SchedulableObject" visibility="package" method="_qEIFN2RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pzaIoWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pzaIomRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pzaIo2RZEe6bAesDIgR3sg" type="_pzY6gGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzaIpGRZEe6bAesDIgR3sg" name="SchedulableObject" visibility="package" method="_qEIsRGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pzavtGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pzavtWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pzavsGRZEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzavsWRZEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzavsmRZEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzavs2RZEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzavtmRZEe6bAesDIgR3sg" type="_pzY6gGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzbWwGRZEe6bAesDIgR3sg" name="SchedulableObject" visibility="package" method="_qEIsSmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pzbWxmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pzbWx2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pzbWwWRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzbWwmRZEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzbWw2RZEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzbWxGRZEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzbWxWRZEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzbWyGRZEe6bAesDIgR3sg" type="_pzY6gGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzbWyWRZEe6bAesDIgR3sg" name="setDefaultParameters" visibility="private" method="_qEIsUWRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pzbWymRZEe6bAesDIgR3sg" name="getAllEndTimes" method="_qEIsUmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEht0GRZEe6bAesDIgR3sg">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_qAosVmRZEe6bAesDIgR3sg" type="_py39IGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzb90WRZEe6bAesDIgR3sg" name="addToEndTimes" method="_qEIsVGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzb90mRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzck4GRZEe6bAesDIgR3sg" name="peekEndTimes" method="_qEIsVmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzck4WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzck4mRZEe6bAesDIgR3sg" name="pollEndTimes" method="_qEIsWGRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pzck42RZEe6bAesDIgR3sg" name="getName" method="_qEJTUmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEht0WRZEe6bAesDIgR3sg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_pzck5GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzdL8GRZEe6bAesDIgR3sg" name="setName" method="_qEJTVGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEht0mRZEe6bAesDIgR3sg">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_pzdL8WRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzdL8mRZEe6bAesDIgR3sg" name="getReleaseTime" method="_qEJTVmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEht02RZEe6bAesDIgR3sg">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_pzdL82RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzdL9GRZEe6bAesDIgR3sg" name="getPhase" method="_qEJTWGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEht1GRZEe6bAesDIgR3sg">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_pzdzAGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzdzAWRZEe6bAesDIgR3sg" name="getStartTime" method="_qEJTWmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEht1WRZEe6bAesDIgR3sg">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_pzdzAmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzdzA2RZEe6bAesDIgR3sg" name="setEndTime" method="_qEJTXGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEht1mRZEe6bAesDIgR3sg">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_pzdzBGRZEe6bAesDIgR3sg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzdzBWRZEe6bAesDIgR3sg" name="setStartTime" method="_qEJTXmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEht12RZEe6bAesDIgR3sg">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_pzdzBmRZEe6bAesDIgR3sg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzeaEGRZEe6bAesDIgR3sg" name="setReleaseTime" method="_qEJTYGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEht2GRZEe6bAesDIgR3sg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_pzeaEWRZEe6bAesDIgR3sg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzeaEmRZEe6bAesDIgR3sg" name="setPeriod" method="_qEJTYmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEht2WRZEe6bAesDIgR3sg">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_pzeaE2RZEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzfBIGRZEe6bAesDIgR3sg" name="setPhase" method="_qEJTZGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEiU4GRZEe6bAesDIgR3sg">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_pzfBIWRZEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzfBImRZEe6bAesDIgR3sg" name="setNextReleaseTime" method="_qEJTZmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEiU4WRZEe6bAesDIgR3sg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_pzfBI2RZEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzgPQGRZEe6bAesDIgR3sg" name="compareAscendingOrder" method="_qEKhcGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzgPQWRZEe6bAesDIgR3sg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzgPQmRZEe6bAesDIgR3sg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzgPQ2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzgPRGRZEe6bAesDIgR3sg" name="compareDescendingOrder" method="_qEKhdGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzgPRWRZEe6bAesDIgR3sg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzgPRmRZEe6bAesDIgR3sg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzgPR2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzg2UGRZEe6bAesDIgR3sg" name="print" method="_qEKheGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzg2UWRZEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzg2UmRZEe6bAesDIgR3sg" name="print" method="_qEKhemRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_qAosUGRZEe6bAesDIgR3sg" name="SchedulableObject" visibility="package" method="_qEIsQGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qAosU2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qAosVGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEhGwmRZEe6bAesDIgR3sg">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_qAosUWRZEe6bAesDIgR3sg" name="obj" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAosUmRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAosVWRZEe6bAesDIgR3sg" type="_pzY6gGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAosV2RZEe6bAesDIgR3sg" name="addSubObject" method="_qEJTUGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAosWGRZEe6bAesDIgR3sg" name="obj" type="_pzY6gGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qApTYGRZEe6bAesDIgR3sg" name="maxPhaseComparison" method="_qEJ6YGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qApTYWRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qApTYmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qApTY2RZEe6bAesDIgR3sg" name="maxPhaseComparison" method="_qEJ6Y2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qApTZGRZEe6bAesDIgR3sg" name="obj1" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qApTZWRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qApTZmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAp6cGRZEe6bAesDIgR3sg" name="deadlineComparison" method="_qEJ6Z2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAp6cWRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAp6cmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAp6c2RZEe6bAesDIgR3sg" name="deadlineComparison" method="_qEJ6amRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAp6dGRZEe6bAesDIgR3sg" name="obj1" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAqhgGRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAqhgWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAqhgmRZEe6bAesDIgR3sg" name="periodComparison" method="_qEJ6bmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAqhg2RZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAqhhGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qArIkGRZEe6bAesDIgR3sg" name="periodComparison" method="_qEJ6cWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qArIkWRZEe6bAesDIgR3sg" name="obj1" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qArIkmRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qArIk2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qArIlGRZEe6bAesDIgR3sg" name="priorityComparison" method="_qEJ6dWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qArIlWRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qArIlmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qArIl2RZEe6bAesDIgR3sg" name="priorityComparison" method="_qEJ6eGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qArImGRZEe6bAesDIgR3sg" name="obj1" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qArvoGRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qArvoWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qArvomRZEe6bAesDIgR3sg" name="releaseTimeComparison" method="_qEJ6fGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAsWsGRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAsWsWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAsWsmRZEe6bAesDIgR3sg" name="releaseTimeComparison" method="_qEJ6f2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAsWs2RZEe6bAesDIgR3sg" name="obj1" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAsWtGRZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAsWtWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAsWtmRZEe6bAesDIgR3sg" name="LatestReleaseTimeComparison" method="_qEJ6g2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAsWt2RZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAs9wGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAs9wWRZEe6bAesDIgR3sg" name="LatestReleaseTimeComparison" method="_qEJ6hmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAs9wmRZEe6bAesDIgR3sg" name="obj1" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAs9w2RZEe6bAesDIgR3sg" name="obj2" type="_pzY6gGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAs9xGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pzlHwGRZEe6bAesDIgR3sg" name="Table">
              <generalization xmi:id="_qCcqMGRZEe6bAesDIgR3sg" general="_p_fc0GRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDYeUGRZEe6bAesDIgR3sg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDZFYGRZEe6bAesDIgR3sg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEKhe2RZEe6bAesDIgR3sg" name="Table" specification="_pzmV4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEKhfGRZEe6bAesDIgR3sg" type="_pzlHwGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEKhfWRZEe6bAesDIgR3sg" name="Table" specification="_pzmV5GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEKhfmRZEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEKhf2RZEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEKhgGRZEe6bAesDIgR3sg" type="_pzlHwGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELIgGRZEe6bAesDIgR3sg" name="getNumRows" specification="_pzm88GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELIgWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELIgmRZEe6bAesDIgR3sg" name="getNumColumns" specification="_pzm88mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELIg2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELIhGRZEe6bAesDIgR3sg" name="set" specification="_qCcDIGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELIhWRZEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELIhmRZEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELIh2RZEe6bAesDIgR3sg" name="element" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELIiGRZEe6bAesDIgR3sg" name="get" specification="_pzm89GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELIiWRZEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELIimRZEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELIi2RZEe6bAesDIgR3sg" type="_qB5QkGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pzmV4GRZEe6bAesDIgR3sg" name="Table" method="_qEKhe2RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pzmV4WRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pzmV4mRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pzmV42RZEe6bAesDIgR3sg" type="_pzlHwGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzmV5GRZEe6bAesDIgR3sg" name="Table" method="_qEKhfWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_pzmV52RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_pzmV6GRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_pzmV5WRZEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzmV5mRZEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzmV6WRZEe6bAesDIgR3sg" type="_pzlHwGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzm88GRZEe6bAesDIgR3sg" name="getNumRows" method="_qELIgGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzm88WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzm88mRZEe6bAesDIgR3sg" name="getNumColumns" method="_qELIgmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzm882RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzm89GRZEe6bAesDIgR3sg" name="get" method="_qELIiGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzm89WRZEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzm89mRZEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCcDJGRZEe6bAesDIgR3sg" type="_qB5QkGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCcDIGRZEe6bAesDIgR3sg" name="set" method="_qELIhGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCcDIWRZEe6bAesDIgR3sg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCcDImRZEe6bAesDIgR3sg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCcDI2RZEe6bAesDIgR3sg" name="element" type="_qB5QkGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pzoLEGRZEe6bAesDIgR3sg" name="Program">
              <ownedComment xmi:id="_qEi78GRZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@author Frank Forliano (for java doc comments)&#xD;
@author srgoddard (for java doc comments)&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qDZFYWRZEe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDZFYmRZEe6bAesDIgR3sg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDZFY2RZEe6bAesDIgR3sg" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDZFZGRZEe6bAesDIgR3sg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDZFZWRZEe6bAesDIgR3sg" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDZFZmRZEe6bAesDIgR3sg" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDZFZ2RZEe6bAesDIgR3sg" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDZscGRZEe6bAesDIgR3sg" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDZscWRZEe6bAesDIgR3sg" name="workLoad" visibility="package" type="_p0mbcGRZEe6bAesDIgR3sg" association="_qFDSQWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDZsc2RZEe6bAesDIgR3sg" name="scheduleBuilt" visibility="package" type="_pywoZWRZEe6bAesDIgR3sg" association="_qFDSRGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDZsdWRZEe6bAesDIgR3sg" name="SchedulerSelected" visibility="package" type="_qCdRQGRZEe6bAesDIgR3sg" association="_qFDSR2RZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDZsd2RZEe6bAesDIgR3sg" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDaTgWRZEe6bAesDIgR3sg" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDaTg2RZEe6bAesDIgR3sg" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDaThWRZEe6bAesDIgR3sg" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDaTh2RZEe6bAesDIgR3sg" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDa6kGRZEe6bAesDIgR3sg" name="channelsAvailable" visibility="package" type="_pxp1IGRZEe6bAesDIgR3sg" association="_qFD5UWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDa6kmRZEe6bAesDIgR3sg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDa6lGRZEe6bAesDIgR3sg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDa6lmRZEe6bAesDIgR3sg" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDbhoGRZEe6bAesDIgR3sg" name="deadlineMisses" visibility="private" type="_px4eoGRZEe6bAesDIgR3sg" association="_qFD5VGRZEe6bAesDIgR3sg"/>
              <interfaceRealization xmi:id="_qAwoI2RZEe6bAesDIgR3sg" client="_pzoLEGRZEe6bAesDIgR3sg" supplier="_pzF_kGRZEe6bAesDIgR3sg" contract="_pzF_kGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELIjGRZEe6bAesDIgR3sg" name="Program" specification="_qCd4UGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELIjWRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qELIjmRZEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELIj2RZEe6bAesDIgR3sg" name="choice" type="_qCdRQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qELIkGRZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELIkWRZEe6bAesDIgR3sg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELIkmRZEe6bAesDIgR3sg" type="_pzoLEGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELIk2RZEe6bAesDIgR3sg" name="Program" specification="_qCd4WWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELIlGRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qELIlWRZEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELIlmRZEe6bAesDIgR3sg" name="choice" type="_qCdRQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qELIl2RZEe6bAesDIgR3sg" type="_pzoLEGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELImGRZEe6bAesDIgR3sg" name="setDefaultParameters" specification="_qAzEYGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELImWRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qELImmRZEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELIm2RZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELInGRZEe6bAesDIgR3sg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELInWRZEe6bAesDIgR3sg" name="toWorkLoad" specification="_pzpZMGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELInmRZEe6bAesDIgR3sg" type="_p0mbcGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELIn2RZEe6bAesDIgR3sg" name="buildProgram" specification="_qCefY2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELIoGRZEe6bAesDIgR3sg" name="choice" type="_qCdRQGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELvkGRZEe6bAesDIgR3sg" name="buildOriginalProgram" specification="_pzpZMWRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELvkWRZEe6bAesDIgR3sg" name="waitInstruction" specification="_pzqAQGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELvkmRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvk2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELvlGRZEe6bAesDIgR3sg" name="elseWaitInstruction" specification="_pzqAQ2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELvlWRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvlmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELvl2RZEe6bAesDIgR3sg" name="elsePullClause" specification="_pzqARmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELvmGRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvmWRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvmmRZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvm2RZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvnGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELvnWRZEe6bAesDIgR3sg" name="hasPushInstruction" specification="_pzqnUGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELvnmRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvn2RZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvoGRZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvoWRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvomRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELvo2RZEe6bAesDIgR3sg" name="pushInstruction" specification="_pzqnVmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELvpGRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvpWRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvpmRZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvp2RZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvqGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELvqWRZEe6bAesDIgR3sg" name="getFirstChannelInInstruction" specification="_pzrOYGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELvqmRZEe6bAesDIgR3sg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvq2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qELvrGRZEe6bAesDIgR3sg" name="findNextAvailableInstructionTimeSlot" specification="_qAzrcGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qELvrWRZEe6bAesDIgR3sg" name="schedule" type="_pywoZWRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qELvrmRZEe6bAesDIgR3sg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvr2RZEe6bAesDIgR3sg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvsGRZEe6bAesDIgR3sg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvsWRZEe6bAesDIgR3sg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvsmRZEe6bAesDIgR3sg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qELvs2RZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvtGRZEe6bAesDIgR3sg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qELvtWRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvtmRZEe6bAesDIgR3sg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvt2RZEe6bAesDIgR3sg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvuGRZEe6bAesDIgR3sg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvuWRZEe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvumRZEe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qELvu2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWoGRZEe6bAesDIgR3sg" name="slotIsAvailable" specification="_qA05kGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEMWoWRZEe6bAesDIgR3sg" name="currentInstructionTimeSlot" type="_pySHQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEMWomRZEe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEMWo2RZEe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEMWpGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWpWRZEe6bAesDIgR3sg" name="findNextAvailableChannel" specification="_qA05lWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEMWpmRZEe6bAesDIgR3sg" name="schedule" type="_pywoZWRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEMWp2RZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEMWqGRZEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEMWqWRZEe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEMWqmRZEe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEMWq2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWrGRZEe6bAesDIgR3sg" name="selectPriority" specification="_pzr1cGRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWrWRZEe6bAesDIgR3sg" name="selectRM" specification="_pzr1cWRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWrmRZEe6bAesDIgR3sg" name="selectDM" specification="_pzr1cmRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWr2RZEe6bAesDIgR3sg" name="selectRtHART" specification="_pzr1c2RZEe6bAesDIgR3sg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWsGRZEe6bAesDIgR3sg" name="setScheduleSelected" specification="_qCefZWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEMWsWRZEe6bAesDIgR3sg" name="choice" type="_qCdRQGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWsmRZEe6bAesDIgR3sg" name="setSchedule" specification="_qA1goGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEMWs2RZEe6bAesDIgR3sg" name="schedule" type="_pywoZWRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWtGRZEe6bAesDIgR3sg" name="getSchedule" specification="_pzr1dGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEMWtWRZEe6bAesDIgR3sg" type="_pywoZWRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWtmRZEe6bAesDIgR3sg" name="getSchedulerName" specification="_pzr1dWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEMWt2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWuGRZEe6bAesDIgR3sg" name="getSchChoice" specification="_pzscg2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEMWuWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWumRZEe6bAesDIgR3sg" name="getNumChannels" specification="_pzschWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEMWu2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWvGRZEe6bAesDIgR3sg" name="getNumTransmissions" specification="_pzscimRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEMWvWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWvmRZEe6bAesDIgR3sg" name="getRealTimeHartFlag" specification="_pztDlGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEMWv2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEMWwGRZEe6bAesDIgR3sg" name="setRealTimeHartFlag" specification="_pztDlmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEMWwWRZEe6bAesDIgR3sg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEM9sGRZEe6bAesDIgR3sg" name="getMinPacketReceptionRate" specification="_pztqoGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEM9sWRZEe6bAesDIgR3sg" type="_qCQc8GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEM9smRZEe6bAesDIgR3sg" name="getE2e" specification="_pzuRs2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEM9s2RZEe6bAesDIgR3sg" type="_qCQc8GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEM9tGRZEe6bAesDIgR3sg" name="getName" specification="_pzu4wmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEM9tWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEM9tmRZEe6bAesDIgR3sg" name="getOptimizationFlag" specification="_pzu4x2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEM9t2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEM9uGRZEe6bAesDIgR3sg" name="deadlineMisses" specification="_pzvf02RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEM9uWRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEM9umRZEe6bAesDIgR3sg" name="getNumFaults" specification="_pzvf1GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEM9u2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEM9vGRZEe6bAesDIgR3sg" name="getNodeMapIndex" specification="_pzwG4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEM9vWRZEe6bAesDIgR3sg" type="_p_bLYGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pzpZMGRZEe6bAesDIgR3sg" name="toWorkLoad" method="_qELInWRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEi78WRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * @return workLoad</body>
                </ownedComment>
                <ownedParameter xmi:id="_qAzEZWRZEe6bAesDIgR3sg" type="_p0mbcGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzpZMWRZEe6bAesDIgR3sg" name="buildOriginalProgram" method="_qELvkGRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pzqAQGRZEe6bAesDIgR3sg" name="waitInstruction" visibility="private" method="_qELvkWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzqAQWRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqAQmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzqAQ2RZEe6bAesDIgR3sg" name="elseWaitInstruction" visibility="private" method="_qELvlGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzqARGRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqARWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzqARmRZEe6bAesDIgR3sg" name="elsePullClause" visibility="private" method="_qELvl2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzqAR2RZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqASGRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqASWRZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqASmRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqAS2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzqnUGRZEe6bAesDIgR3sg" name="hasPushInstruction" visibility="private" method="_qELvnWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzqnUWRZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqnUmRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqnU2RZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqnVGRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqnVWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzqnVmRZEe6bAesDIgR3sg" name="pushInstruction" visibility="private" method="_qELvo2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzqnV2RZEe6bAesDIgR3sg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqnWGRZEe6bAesDIgR3sg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqnWWRZEe6bAesDIgR3sg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqnWmRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzqnW2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzrOYGRZEe6bAesDIgR3sg" name="getFirstChannelInInstruction" visibility="private" method="_qELvqWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzrOYWRZEe6bAesDIgR3sg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pzrOYmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzr1cGRZEe6bAesDIgR3sg" name="selectPriority" method="_qEMWrGRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pzr1cWRZEe6bAesDIgR3sg" name="selectRM" method="_qEMWrWRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pzr1cmRZEe6bAesDIgR3sg" name="selectDM" method="_qEMWrmRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pzr1c2RZEe6bAesDIgR3sg" name="selectRtHART" method="_qEMWr2RZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pzr1dGRZEe6bAesDIgR3sg" name="getSchedule" method="_qEMWtGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEi78mRZEe6bAesDIgR3sg">
                  <body>Returns the program schedule of the flows.&#xD;
   * @return scheduleBuilt</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA1gomRZEe6bAesDIgR3sg" type="_pywoZWRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzr1dWRZEe6bAesDIgR3sg" name="getSchedulerName" method="_qEMWtmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzr1dmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzscg2RZEe6bAesDIgR3sg" name="getSchChoice" method="_qEMWuGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzschGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzschWRZEe6bAesDIgR3sg" name="getNumChannels" method="_qEMWumRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzschmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzscimRZEe6bAesDIgR3sg" name="getNumTransmissions" method="_qEMWvGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pztDkGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pztDlGRZEe6bAesDIgR3sg" name="getRealTimeHartFlag" visibility="private" method="_qEMWvmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pztDlWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pztDlmRZEe6bAesDIgR3sg" name="setRealTimeHartFlag" visibility="private" method="_qEMWwGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pztDl2RZEe6bAesDIgR3sg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pztqoGRZEe6bAesDIgR3sg" name="getMinPacketReceptionRate" method="_qEM9sGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCfGcGRZEe6bAesDIgR3sg" type="_qCQc8GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzuRs2RZEe6bAesDIgR3sg" name="getE2e" method="_qEM9smRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCfGcWRZEe6bAesDIgR3sg" type="_qCQc8GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzu4wmRZEe6bAesDIgR3sg" name="getName" method="_qEM9tGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzu4w2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzu4x2RZEe6bAesDIgR3sg" name="getOptimizationFlag" method="_qEM9tmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzu4yGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzvf02RZEe6bAesDIgR3sg" name="deadlineMisses" method="_qEM9uGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qA2HsGRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pzvf1GRZEe6bAesDIgR3sg" name="getNumFaults" method="_qEM9umRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pzvf1WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pzwG4GRZEe6bAesDIgR3sg" name="getNodeMapIndex" method="_qEM9vGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEi782RZEe6bAesDIgR3sg">
                  <body>Maps the names of the nodes to the respective indicies.&#xD;
   * @return A HashMap -> Keys = NODE NAMES // Values = Indicies in Schedule Table</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCfGcmRZEe6bAesDIgR3sg" type="_p_bLYGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qAzEYGRZEe6bAesDIgR3sg" name="setDefaultParameters" visibility="private" method="_qELImGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAzEYWRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAzEYmRZEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAzEY2RZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAzEZGRZEe6bAesDIgR3sg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qAzrcGRZEe6bAesDIgR3sg" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_qELvrGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qAzrcWRZEe6bAesDIgR3sg" name="schedule" type="_pywoZWRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qAzrcmRZEe6bAesDIgR3sg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAzrc2RZEe6bAesDIgR3sg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAzrdGRZEe6bAesDIgR3sg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAzrdWRZEe6bAesDIgR3sg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAzrdmRZEe6bAesDIgR3sg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qA0SgWRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAzrd2RZEe6bAesDIgR3sg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qA0SgmRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAzreGRZEe6bAesDIgR3sg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAzreWRZEe6bAesDIgR3sg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAzremRZEe6bAesDIgR3sg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAzre2RZEe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qAzrfGRZEe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA0SgGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qA05kGRZEe6bAesDIgR3sg" name="slotIsAvailable" visibility="private" method="_qEMWoGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qA05kWRZEe6bAesDIgR3sg" name="currentInstructionTimeSlot" type="_pySHQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA05kmRZEe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA05k2RZEe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA05lGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qA05lWRZEe6bAesDIgR3sg" name="findNextAvailableChannel" visibility="private" method="_qEMWpWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qA05lmRZEe6bAesDIgR3sg" name="schedule" type="_pywoZWRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA05l2RZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA05mGRZEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA05mWRZEe6bAesDIgR3sg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA05mmRZEe6bAesDIgR3sg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA05m2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qA1goGRZEe6bAesDIgR3sg" name="setSchedule" visibility="private" method="_qEMWsmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qA1goWRZEe6bAesDIgR3sg" name="schedule" type="_pywoZWRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCd4UGRZEe6bAesDIgR3sg" name="Program" visibility="package" method="_qELIjGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qCd4VmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qCd4V2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qCd4UWRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCd4UmRZEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCd4U2RZEe6bAesDIgR3sg" name="choice" type="_qCdRQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCd4VGRZEe6bAesDIgR3sg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCd4VWRZEe6bAesDIgR3sg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCd4WGRZEe6bAesDIgR3sg" type="_pzoLEGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCd4WWRZEe6bAesDIgR3sg" name="Program" visibility="package" method="_qELIk2RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qCefYGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qCefYWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qCd4WmRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCd4W2RZEe6bAesDIgR3sg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCd4XGRZEe6bAesDIgR3sg" name="choice" type="_qCdRQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCefYmRZEe6bAesDIgR3sg" type="_pzoLEGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCefY2RZEe6bAesDIgR3sg" name="buildProgram" method="_qELIn2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCefZGRZEe6bAesDIgR3sg" name="choice" type="_qCdRQGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCefZWRZEe6bAesDIgR3sg" name="setScheduleSelected" visibility="private" method="_qEMWsGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCefZmRZEe6bAesDIgR3sg" name="choice" type="_qCdRQGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pzzxQGRZEe6bAesDIgR3sg" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_qEi79GRZEe6bAesDIgR3sg">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qDcIsGRZEe6bAesDIgR3sg" name="activations" visibility="private" type="_pxmKwGRZEe6bAesDIgR3sg" association="_qFEgYGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDcvwWRZEe6bAesDIgR3sg" name="workload" visibility="private" type="_p0mbcGRZEe6bAesDIgR3sg" association="_qFEgY2RZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDcvw2RZEe6bAesDIgR3sg" name="flows" visibility="protected" type="_p0V8wGRZEe6bAesDIgR3sg" association="_qFEgZmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qDcvxWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qDdW0GRZEe6bAesDIgR3sg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qDcvxGRZEe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDdW0mRZEe6bAesDIgR3sg" name="nodes" visibility="private" type="_pyeUgGRZEe6bAesDIgR3sg" association="_qFFHcWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qDdW1GRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qDdW1WRZEe6bAesDIgR3sg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qDdW02RZEe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDdW12RZEe6bAesDIgR3sg" name="nodeMap" visibility="private" type="_pyj0EGRZEe6bAesDIgR3sg" association="_qFFHdGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDdW2WRZEe6bAesDIgR3sg" name="priorityQueue" visibility="private" type="_py39IGRZEe6bAesDIgR3sg" association="_qFFHd2RZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDd94mRZEe6bAesDIgR3sg" name="nodeConnectivityMap" visibility="protected" type="_p_bLYGRZEe6bAesDIgR3sg" association="_qFFugWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDek8WRZEe6bAesDIgR3sg" name="activationMap" visibility="package" type="_pyDdwGRZEe6bAesDIgR3sg" association="_qFFuhGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENkwGRZEe6bAesDIgR3sg" name="Poset" specification="_qA4j8GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qENkwWRZEe6bAesDIgR3sg" name="workload" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qENkwmRZEe6bAesDIgR3sg" type="_pzzxQGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENkw2RZEe6bAesDIgR3sg" name="getNodeConnectivity" specification="_pz0_YGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qENkxGRZEe6bAesDIgR3sg" type="_p_bLYGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENkxWRZEe6bAesDIgR3sg" name="getNodeNames" specification="_pz1mcGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qENkxmRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENkx2RZEe6bAesDIgR3sg" name="getNodesNamesOrderedAlphabetically" specification="_pz2NgGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qENkyGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qENkyWRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENkymRZEe6bAesDIgR3sg" name="buildPosetOfActivations" specification="_pz2NhGRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENky2RZEe6bAesDIgR3sg" name="createEdgeLists" specification="_pz2NhWRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENkzGRZEe6bAesDIgR3sg" name="createConflictLists" specification="_pz20kGRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENkzWRZEe6bAesDIgR3sg" name="createGlobalConflictLists" specification="_pz20kWRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENkzmRZEe6bAesDIgR3sg" name="createLocalConflictLists" specification="_pz20kmRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENkz2RZEe6bAesDIgR3sg" name="findCoordinator" specification="_qCgUkmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qENk0GRZEe6bAesDIgR3sg" name="nodesInFlow" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qENk0WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENk0mRZEe6bAesDIgR3sg" name="buildTxArray" specification="_qCg7oWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qENk02RZEe6bAesDIgR3sg" name="nodesInFlow" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qENk1GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qENk1WRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENk1mRZEe6bAesDIgR3sg" name="createInitialActivations" specification="_pz3boGRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENk12RZEe6bAesDIgR3sg" name="getMaxTx" specification="_qA5LBGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qENk2GRZEe6bAesDIgR3sg" name="node" type="_pyeUgGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qENk2WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qENk2mRZEe6bAesDIgR3sg" name="getActivation" specification="_qA5LB2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOL0GRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEOL0WRZEe6bAesDIgR3sg" name="node" type="_pyeUgGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEOL0mRZEe6bAesDIgR3sg" type="_p1H_4GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOL02RZEe6bAesDIgR3sg" name="getHyperPeriod" specification="_pz3boWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOL1GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOL1WRZEe6bAesDIgR3sg" name="getMaxPhase" specification="_pz4CsWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOL1mRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOL12RZEe6bAesDIgR3sg" name="orderActivations" specification="_pz4Cs2RZEe6bAesDIgR3sg">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOL2GRZEe6bAesDIgR3sg" name="getNextActivation" specification="_pz4pwGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOL2WRZEe6bAesDIgR3sg" type="_p1H_4GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOL2mRZEe6bAesDIgR3sg" name="addActivation" specification="_qA5yEmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOL22RZEe6bAesDIgR3sg" name="activation" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOL3GRZEe6bAesDIgR3sg" name="findBaseStation" specification="_pz4pwWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOL3WRZEe6bAesDIgR3sg" type="_pyeUgGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pz0_YGRZEe6bAesDIgR3sg" name="getNodeConnectivity" visibility="private" method="_qENkw2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCgUkGRZEe6bAesDIgR3sg" type="_p_bLYGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pz1mcGRZEe6bAesDIgR3sg" name="getNodeNames" method="_qENkxWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCgUkWRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pz2NgGRZEe6bAesDIgR3sg" name="getNodesNamesOrderedAlphabetically" method="_qENkx2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pz2NgWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pz2NgmRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pz2NhGRZEe6bAesDIgR3sg" name="buildPosetOfActivations" method="_qENkymRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pz2NhWRZEe6bAesDIgR3sg" name="createEdgeLists" visibility="private" method="_qENky2RZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pz20kGRZEe6bAesDIgR3sg" name="createConflictLists" visibility="private" method="_qENkzGRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pz20kWRZEe6bAesDIgR3sg" name="createGlobalConflictLists" visibility="private" method="_qENkzWRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pz20kmRZEe6bAesDIgR3sg" name="createLocalConflictLists" visibility="private" method="_qENkzmRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pz3boGRZEe6bAesDIgR3sg" name="createInitialActivations" visibility="private" method="_qENk1mRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pz3boWRZEe6bAesDIgR3sg" name="getHyperPeriod" method="_qEOL02RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pz4CsGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pz4CsWRZEe6bAesDIgR3sg" name="getMaxPhase" method="_qEOL1WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pz4CsmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pz4Cs2RZEe6bAesDIgR3sg" name="orderActivations" method="_qEOL12RZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pz4pwGRZEe6bAesDIgR3sg" name="getNextActivation" method="_qEOL2GRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEi792RZEe6bAesDIgR3sg">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA5yEWRZEe6bAesDIgR3sg" type="_p1H_4GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_pz4pwWRZEe6bAesDIgR3sg" name="findBaseStation" visibility="protected" method="_qEOL3GRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjAGRZEe6bAesDIgR3sg">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA5yFGRZEe6bAesDIgR3sg" type="_pyeUgGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qA4j8GRZEe6bAesDIgR3sg" name="Poset" visibility="package" method="_qENkwGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qA5LAWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qA5LAmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEi79WRZEe6bAesDIgR3sg">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA5LAGRZEe6bAesDIgR3sg" name="workload" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA5LA2RZEe6bAesDIgR3sg" type="_pzzxQGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qA5LBGRZEe6bAesDIgR3sg" name="getMaxTx" visibility="private" method="_qENk12RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qA5LBWRZEe6bAesDIgR3sg" name="node" type="_pyeUgGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA5LBmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qA5LB2RZEe6bAesDIgR3sg" name="getActivation" visibility="private" method="_qENk2mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qA5LCGRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA5LCWRZEe6bAesDIgR3sg" name="node" type="_pyeUgGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA5yEGRZEe6bAesDIgR3sg" type="_p1H_4GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qA5yEmRZEe6bAesDIgR3sg" name="addActivation" method="_qEOL2mRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEi7-GRZEe6bAesDIgR3sg">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA5yE2RZEe6bAesDIgR3sg" name="activation" type="_p1H_4GRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCgUkmRZEe6bAesDIgR3sg" name="findCoordinator" visibility="protected" method="_qENkz2RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEi79mRZEe6bAesDIgR3sg">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCgUk2RZEe6bAesDIgR3sg" name="nodesInFlow" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCgUlGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qCg7oWRZEe6bAesDIgR3sg" name="buildTxArray" visibility="private" method="_qENk0mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCg7omRZEe6bAesDIgR3sg" name="nodesInFlow" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCg7o2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qCg7pGRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_pz7GAGRZEe6bAesDIgR3sg" name="VisualizationImplementation">
              <ownedComment xmi:id="_qEjjAWRZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@author Frank Forliano (for java doc comments)&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qDek82RZEe6bAesDIgR3sg" name="visualization" visibility="private" type="_px4eoGRZEe6bAesDIgR3sg" association="_qFFuh2RZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDfMAGRZEe6bAesDIgR3sg" name="fileContent" visibility="private" type="_px4eoGRZEe6bAesDIgR3sg" association="_qFGVkWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDfMAmRZEe6bAesDIgR3sg" name="window" visibility="private" type="_pyKygGRZEe6bAesDIgR3sg" association="_qFGVlGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDfMBGRZEe6bAesDIgR3sg" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDfMBmRZEe6bAesDIgR3sg" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDfMCGRZEe6bAesDIgR3sg" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDfzEWRZEe6bAesDIgR3sg" name="fm" visibility="private" type="_px_MUGRZEe6bAesDIgR3sg" association="_qFGVl2RZEe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDfzEmRZEe6bAesDIgR3sg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDfzFGRZEe6bAesDIgR3sg" name="warp" visibility="private" type="_p0S5cGRZEe6bAesDIgR3sg" association="_qFG8oWRZEe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDfzFWRZEe6bAesDIgR3sg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDfzF2RZEe6bAesDIgR3sg" name="workLoad" visibility="private" type="_p0mbcGRZEe6bAesDIgR3sg" association="_qFG8pGRZEe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDfzGGRZEe6bAesDIgR3sg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDgaIWRZEe6bAesDIgR3sg" name="visualizationObject" visibility="private" type="_p0AlkGRZEe6bAesDIgR3sg" association="_qFHjsWRZEe6bAesDIgR3sg"/>
              <interfaceRealization xmi:id="_qA6ZIGRZEe6bAesDIgR3sg" client="_pz7GAGRZEe6bAesDIgR3sg" supplier="_pyuzMGRZEe6bAesDIgR3sg" contract="_pyuzMGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOL3mRZEe6bAesDIgR3sg" name="VisualizationImplementation" specification="_qCiw0WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOL32RZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEOL4GRZEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEOL4WRZEe6bAesDIgR3sg" name="choice" type="_qCiJwGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEOL4mRZEe6bAesDIgR3sg" type="_pz7GAGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOL42RZEe6bAesDIgR3sg" name="VisualizationImplementation" specification="_qCjX4WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOL5GRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEOL5WRZEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEOL5mRZEe6bAesDIgR3sg" name="choice" type="_qCiw2GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEOL52RZEe6bAesDIgR3sg" type="_pz7GAGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOL6GRZEe6bAesDIgR3sg" name="toDisplay" specification="_pz8UIGRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOy4GRZEe6bAesDIgR3sg" name="toFile" specification="_pz8UJGRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOy4WRZEe6bAesDIgR3sg" name="toString" specification="_pz87MmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOy4mRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOy42RZEe6bAesDIgR3sg" name="createVisualization" specification="_qCjX6GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOy5GRZEe6bAesDIgR3sg" name="choice" type="_qCiJwGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOy5WRZEe6bAesDIgR3sg" name="createVisualization" specification="_qCj-8GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOy5mRZEe6bAesDIgR3sg" name="choice" type="_qCiw2GRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOy52RZEe6bAesDIgR3sg" name="createVisualization" specification="_qCj-8mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOy6GRZEe6bAesDIgR3sg" name="obj" type="_qB5QkGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOy6WRZEe6bAesDIgR3sg" name="createFileNameTemplate" specification="_pz9iQ2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOy6mRZEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEOy62RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_pz8UIGRZEe6bAesDIgR3sg" name="toDisplay" method="_qEOL6GRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pz8UJGRZEe6bAesDIgR3sg" name="toFile" method="_qEOy4GRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_pz87MmRZEe6bAesDIgR3sg" name="toString" method="_qEOy4WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_pz87M2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_pz9iQ2RZEe6bAesDIgR3sg" name="createFileNameTemplate" visibility="private" method="_qEOy6WRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjBmRZEe6bAesDIgR3sg">
                  <body>&#xD;
   * Creates a file name template based on the outputDirectory and FileName. &#xD;
   * @param outputDirectory&#xD;
   * @return fileNameTemplate</body>
                </ownedComment>
                <ownedParameter xmi:id="_pz9iRGRZEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_pz-JUGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qCiw0WRZEe6bAesDIgR3sg" name="VisualizationImplementation" method="_qEOL3mRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qCiw1WRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qCiw1mRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEjjAmRZEe6bAesDIgR3sg">
                  <body>@param warp&#xD;
@param outputDirectory&#xD;
@param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCiw0mRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCiw02RZEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCiw1GRZEe6bAesDIgR3sg" name="choice" type="_qCiJwGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCiw12RZEe6bAesDIgR3sg" type="_pz7GAGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCjX4WRZEe6bAesDIgR3sg" name="VisualizationImplementation" method="_qEOL42RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qCjX5WRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qCjX5mRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEjjA2RZEe6bAesDIgR3sg">
                  <body>@param WorkLoad&#xD;
@param outputDirectory&#xD;
@param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCjX4mRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCjX42RZEe6bAesDIgR3sg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCjX5GRZEe6bAesDIgR3sg" name="choice" type="_qCiw2GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCjX52RZEe6bAesDIgR3sg" type="_pz7GAGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCjX6GRZEe6bAesDIgR3sg" name="createVisualization" visibility="private" method="_qEOy42RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjBGRZEe6bAesDIgR3sg">
                  <body>Create visualizations based on SystemChoices.&#xD;
   * The visualization is created by enumerating the SystemChoices.&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCjX6WRZEe6bAesDIgR3sg" name="choice" type="_qCiJwGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCj-8GRZEe6bAesDIgR3sg" name="createVisualization" visibility="private" method="_qEOy5WRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjBWRZEe6bAesDIgR3sg">
                  <body>Create visualization based off WorkLoadChoices.&#xD;
  * &#xD;
  * @param The choice of the visualization for the workload.</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCj-8WRZEe6bAesDIgR3sg" name="choice" type="_qCiw2GRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCj-8mRZEe6bAesDIgR3sg" name="createVisualization" visibility="private" method="_qEOy52RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCj-82RZEe6bAesDIgR3sg" name="obj" type="_qB5QkGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_p0AlkGRZEe6bAesDIgR3sg" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_qEjjB2RZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@author srgoddard (for java doc comments)&#xD;
@version 1.5&#xD;
 *&#xD;
 *Visualizes the information of the node into a readable name with the needed information.&#xD;
 *Includes faults and schedule name.&#xD;
 *Contains:&#xD;
 *nameExtension()&#xD;
 *displayVisualization()&#xD;
 *fileVisualization()&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qDgaI2RZEe6bAesDIgR3sg" name="fm" visibility="private" type="_px_MUGRZEe6bAesDIgR3sg" association="_qFIKwWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDhBMGRZEe6bAesDIgR3sg" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDhBMmRZEe6bAesDIgR3sg" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDhBNGRZEe6bAesDIgR3sg" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDhBNWRZEe6bAesDIgR3sg" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDhBNmRZEe6bAesDIgR3sg" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qDhBN2RZEe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOy7GRZEe6bAesDIgR3sg" name="VisualizationObject" specification="_qA8OUGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOy7WRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEOy7mRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEOy72RZEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEOy8GRZEe6bAesDIgR3sg" type="_p0AlkGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOy8WRZEe6bAesDIgR3sg" name="VisualizationObject" specification="_qA8OV2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOy8mRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEOy82RZEe6bAesDIgR3sg" name="warp" type="_pzF_kGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEOy9GRZEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEOy9WRZEe6bAesDIgR3sg" type="_p0AlkGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOy9mRZEe6bAesDIgR3sg" name="VisualizationObject" specification="_qA81ZGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOy92RZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEOy-GRZEe6bAesDIgR3sg" name="warp" type="_pzF_kGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEOy-WRZEe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEOy-mRZEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEOy-2RZEe6bAesDIgR3sg" type="_p0AlkGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEOy_GRZEe6bAesDIgR3sg" name="VisualizationObject" specification="_qA81bGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEOy_WRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEOy_mRZEe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEOy_2RZEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEOzAGRZEe6bAesDIgR3sg" type="_p0AlkGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEPZ8GRZEe6bAesDIgR3sg" name="nameExtension" specification="_qCkmAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEPZ8WRZEe6bAesDIgR3sg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEPZ8mRZEe6bAesDIgR3sg" name="m" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEPZ82RZEe6bAesDIgR3sg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEPZ9GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEPZ9WRZEe6bAesDIgR3sg" name="nameExtension" specification="_p0BzsGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEPZ9mRZEe6bAesDIgR3sg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEPZ92RZEe6bAesDIgR3sg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEPZ-GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEPZ-WRZEe6bAesDIgR3sg" name="getFileManager" specification="_p0CawmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEPZ-mRZEe6bAesDIgR3sg" type="_px_MUGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEPZ-2RZEe6bAesDIgR3sg" name="visualization" specification="_p0Caw2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEPZ_GRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEPZ_WRZEe6bAesDIgR3sg" name="createFile" specification="_p0DB0GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEPZ_mRZEe6bAesDIgR3sg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEPZ_2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEPaAGRZEe6bAesDIgR3sg" name="fileVisualization" specification="_p0DB02RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEPaAWRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEPaAmRZEe6bAesDIgR3sg" name="displayVisualization" specification="_p0DB1GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEPaA2RZEe6bAesDIgR3sg" type="_pyKygGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEPaBGRZEe6bAesDIgR3sg" name="createHeader" specification="_p0DB1WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEPaBWRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEPaBmRZEe6bAesDIgR3sg" name="createFooter" specification="_p0Do4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEPaB2RZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEPaCGRZEe6bAesDIgR3sg" name="createColumnHeader" specification="_p0Do4WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEPaCWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qEPaCmRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEPaC2RZEe6bAesDIgR3sg" name="createVisualizationData" specification="_p0Do5WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEPaDGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qEPaDWRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p0BzsGRZEe6bAesDIgR3sg" name="nameExtension" visibility="private" method="_qEPZ9WRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjDWRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * This method is used to attach the faults of each node to the name of the same node.&#xD;
  * @param extension formats the input data into a readable format</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0BzsWRZEe6bAesDIgR3sg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0CawGRZEe6bAesDIgR3sg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0CawWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0CawmRZEe6bAesDIgR3sg" name="getFileManager" method="_qEPZ-WRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjDmRZEe6bAesDIgR3sg">
                  <body>&#xD;
   * @return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA9ccGRZEe6bAesDIgR3sg" type="_px_MUGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0Caw2RZEe6bAesDIgR3sg" name="visualization" method="_qEPZ-2RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjD2RZEe6bAesDIgR3sg">
                  <body>&#xD;
  * This method is the initial step to visualize the data in a readible format.&#xD;
  * @param content is created to be used as a description to hold the new ColumnHeader() and data&#xD;
  * @param data is used to hold NULL through the createVisualizationData() method which returns NULL&#xD;
  * @return content</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA9ccWRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0DB0GRZEe6bAesDIgR3sg" name="createFile" method="_qEPZ_WRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjEGRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * Method creates the file name by adding the extension and suffix.&#xD;
  * @return fm.createFile() which calls itself to create the file as a fileNameTemplate</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0DB0WRZEe6bAesDIgR3sg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0DB0mRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0DB02RZEe6bAesDIgR3sg" name="fileVisualization" method="_qEPaAGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjEWRZEe6bAesDIgR3sg">
                  <body>*&#xD;
  * Method is the final step to combine the header/data and footer together and returns fileContent.&#xD;
  * @param fileContent is created to contain all the data for nodes into a readible format</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA9ccmRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0DB1GRZEe6bAesDIgR3sg" name="displayVisualization" method="_qEPaAmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjEmRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * @return null</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA9cc2RZEe6bAesDIgR3sg" type="_pyKygGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0DB1WRZEe6bAesDIgR3sg" name="createHeader" visibility="protected" method="_qEPaBGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjE2RZEe6bAesDIgR3sg">
                  <body>&#xD;
  * @return new Description header</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA9cdGRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0Do4GRZEe6bAesDIgR3sg" name="createFooter" visibility="protected" method="_qEPaBmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjFGRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * @return new Description footer</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA9cdWRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0Do4WRZEe6bAesDIgR3sg" name="createColumnHeader" visibility="protected" method="_qEPaCGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjFWRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * @return NOT_IMPLEMENTED</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0Do4mRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_p0Do42RZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0Do5WRZEe6bAesDIgR3sg" name="createVisualizationData" visibility="protected" method="_qEPaC2RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjFmRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * @return visualizationData which is not implemented and returns null</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0EP8GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_p0EP8WRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qA8OUGRZEe6bAesDIgR3sg" name="VisualizationObject" visibility="package" method="_qEOy7GRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qA8OVGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qA8OVWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEjjCGRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * Class Object that links together the filemanager with the workload and suffix.&#xD;
  * @param nameExtension is the string variable to be added onto the name of the node&#xD;
  * @param suffix is the&#xD;
  *</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA8OUWRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA8OUmRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA8OU2RZEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA8OVmRZEe6bAesDIgR3sg" type="_p0AlkGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qA8OV2RZEe6bAesDIgR3sg" name="VisualizationObject" visibility="package" method="_qEOy8WRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qA81YWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qA81YmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEjjCWRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * Class object that links together the filemanager to the specific node warp attributes and suffix.</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA8OWGRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA8OWWRZEe6bAesDIgR3sg" name="warp" type="_pzF_kGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA81YGRZEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA81Y2RZEe6bAesDIgR3sg" type="_p0AlkGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qA81ZGRZEe6bAesDIgR3sg" name="VisualizationObject" visibility="package" method="_qEOy9mRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qA81aWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qA81amRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEjjCmRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * Class object to manage any faults that are attached to the nodes.</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA81ZWRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA81ZmRZEe6bAesDIgR3sg" name="warp" type="_pzF_kGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA81Z2RZEe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA81aGRZEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA81a2RZEe6bAesDIgR3sg" type="_p0AlkGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qA81bGRZEe6bAesDIgR3sg" name="VisualizationObject" visibility="package" method="_qEOy_GRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qA81cGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qA81cWRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEjjC2RZEe6bAesDIgR3sg">
                  <body>*&#xD;
  * Class object of managing the file for each node</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA81bWRZEe6bAesDIgR3sg" name="fm" type="_px_MUGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA81bmRZEe6bAesDIgR3sg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA81b2RZEe6bAesDIgR3sg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qA81cmRZEe6bAesDIgR3sg" type="_p0AlkGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCkmAGRZEe6bAesDIgR3sg" name="nameExtension" visibility="private" method="_qEPZ8GRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEjjDGRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * This method is used to attach the data of the node to the schedule name of the nodes.</body>
                </ownedComment>
                <ownedParameter xmi:id="_qClNEGRZEe6bAesDIgR3sg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qClNEWRZEe6bAesDIgR3sg" name="m" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qClNEmRZEe6bAesDIgR3sg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qClNE2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_p0GFIGRZEe6bAesDIgR3sg" name="Warp">
              <ownedComment xmi:id="_qEjjF2RZEe6bAesDIgR3sg">
                <body>&#xD;
@author Frank Forliano (of java doc comments)&#xD;
@author Steve Goddard&#xD;
@version 1.5&#xD;
&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qDhoQWRZEe6bAesDIgR3sg" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDhoQmRZEe6bAesDIgR3sg" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDhoQ2RZEe6bAesDIgR3sg" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_qCQc8GRZEe6bAesDIgR3sg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDhoRGRZEe6bAesDIgR3sg" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDhoRWRZEe6bAesDIgR3sg" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_qCQc8GRZEe6bAesDIgR3sg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDiPUGRZEe6bAesDIgR3sg" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDiPUWRZEe6bAesDIgR3sg" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDiPUmRZEe6bAesDIgR3sg" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDiPU2RZEe6bAesDIgR3sg" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_pzGmoGRZEe6bAesDIgR3sg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDiPVGRZEe6bAesDIgR3sg" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDiPVWRZEe6bAesDIgR3sg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDiPVmRZEe6bAesDIgR3sg" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDiPV2RZEe6bAesDIgR3sg" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDiPWWRZEe6bAesDIgR3sg" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDi2YWRZEe6bAesDIgR3sg" name="minLQ" visibility="private" isStatic="true" type="_qCQc8GRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDi2Y2RZEe6bAesDIgR3sg" name="e2e" visibility="private" isStatic="true" type="_qCQc8GRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDi2ZWRZEe6bAesDIgR3sg" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDi2Z2RZEe6bAesDIgR3sg" name="guiRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDjdcGRZEe6bAesDIgR3sg" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDjdcmRZEe6bAesDIgR3sg" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDjddGRZEe6bAesDIgR3sg" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDjddmRZEe6bAesDIgR3sg" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDkEgWRZEe6bAesDIgR3sg" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDkEg2RZEe6bAesDIgR3sg" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDkEhWRZEe6bAesDIgR3sg" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDkEh2RZEe6bAesDIgR3sg" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDkrkGRZEe6bAesDIgR3sg" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDkrkWRZEe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDkrk2RZEe6bAesDIgR3sg" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDkrlWRZEe6bAesDIgR3sg" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDlSoGRZEe6bAesDIgR3sg" name="schedulerSelected" visibility="private" isStatic="true" type="_pzGmoGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQBAGRZEe6bAesDIgR3sg" name="main" specification="_p0GsMGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEQBAWRZEe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qEQBAmRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQBA2RZEe6bAesDIgR3sg" name="visualize" specification="_qA_RoGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEQBBGRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEQBBWRZEe6bAesDIgR3sg" name="choice" type="_pywBU2RZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQBBmRZEe6bAesDIgR3sg" name="visualize" specification="_qA_4sGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEQBB2RZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEQBCGRZEe6bAesDIgR3sg" name="choice" type="_pyvaQGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQBCWRZEe6bAesDIgR3sg" name="verifyPerformanceRequirements" specification="_qA_4s2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEQBCmRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQBC2RZEe6bAesDIgR3sg" name="verifyReliabilities" specification="_qA_4tWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEQBDGRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQBDWRZEe6bAesDIgR3sg" name="verifyDeadlines" specification="_qA_4t2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEQBDmRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQBD2RZEe6bAesDIgR3sg" name="verifyNoChannelConflicts" specification="_qA_4uWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEQBEGRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQBEWRZEe6bAesDIgR3sg" name="setWarpParameters" specification="_p0HTQGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEQBEmRZEe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qEQBE2RZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQBFGRZEe6bAesDIgR3sg" name="printWarpParameters" specification="_p0H6UWRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p0GsMGRZEe6bAesDIgR3sg" name="main" isStatic="true" method="_qEQBAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0GsMWRZEe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_p0GsMmRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0HTQGRZEe6bAesDIgR3sg" name="setWarpParameters" visibility="private" isStatic="true" method="_qEQBEWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0HTQWRZEe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_p0HTQmRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0H6UWRZEe6bAesDIgR3sg" name="printWarpParameters" visibility="private" isStatic="true" method="_qEQBFGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkKFmRZEe6bAesDIgR3sg">
                  <body>Print parameters of the Warp System.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_qA_RoGRZEe6bAesDIgR3sg" name="visualize" visibility="private" isStatic="true" method="_qEQBA2RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkKEGRZEe6bAesDIgR3sg">
                  <body>Visualizes the given workload choice.&#xD;
   * &#xD;
   * @param workLoad The workload to visualize&#xD;
   * @param choice The choice of visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA_RoWRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA_RomRZEe6bAesDIgR3sg" name="choice" type="_pywBU2RZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qA_4sGRZEe6bAesDIgR3sg" name="visualize" visibility="private" isStatic="true" method="_qEQBBmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkKEWRZEe6bAesDIgR3sg">
                  <body>Visualizes the data from the warp network flow.&#xD;
   * @param warp&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA_4sWRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qA_4smRZEe6bAesDIgR3sg" name="choice" type="_pyvaQGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qA_4s2RZEe6bAesDIgR3sg" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_qEQBCWRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkKEmRZEe6bAesDIgR3sg">
                  <body>Verifies performance requirements of the warp system&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA_4tGRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qA_4tWRZEe6bAesDIgR3sg" name="verifyReliabilities" visibility="private" isStatic="true" method="_qEQBC2RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkKE2RZEe6bAesDIgR3sg">
                  <body>Verifies the reliabilities of the WARP module&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA_4tmRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qA_4t2RZEe6bAesDIgR3sg" name="verifyDeadlines" visibility="private" isStatic="true" method="_qEQBDWRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkKFGRZEe6bAesDIgR3sg">
                  <body>Verify the deadlines of the given warp system&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA_4uGRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qA_4uWRZEe6bAesDIgR3sg" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_qEQBD2RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkKFWRZEe6bAesDIgR3sg">
                  <body>Verify if there is not any channel conflicts&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_qA_4umRZEe6bAesDIgR3sg" name="warp" type="_p0S5cGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_p0K9oGRZEe6bAesDIgR3sg" name="WarpDSL">
              <ownedComment xmi:id="_qEkKF2RZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qDlSomRZEe6bAesDIgR3sg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDlSo2RZEe6bAesDIgR3sg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDl5sGRZEe6bAesDIgR3sg" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDl5sWRZEe6bAesDIgR3sg" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDl5smRZEe6bAesDIgR3sg" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDmgwGRZEe6bAesDIgR3sg" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQoIGRZEe6bAesDIgR3sg" name="getInstructionParameters" specification="_p0OoAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEQoIWRZEe6bAesDIgR3sg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEQoImRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p0OoAGRZEe6bAesDIgR3sg" name="getInstructionParameters" method="_qEQoIGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0OoAWRZEe6bAesDIgR3sg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCnCQGRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_p0LksGRZEe6bAesDIgR3sg" name="InstructionParameters">
                <ownedAttribute xmi:id="_qDmgwWRZEe6bAesDIgR3sg" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDmgwmRZEe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_qDnH0GRZEe6bAesDIgR3sg" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDnH0WRZEe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_qDnH0mRZEe6bAesDIgR3sg" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDnH02RZEe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_qDnH1GRZEe6bAesDIgR3sg" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDnu4GRZEe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_qDnu4WRZEe6bAesDIgR3sg" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDnu4mRZEe6bAesDIgR3sg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_qDnu42RZEe6bAesDIgR3sg" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDnu5GRZEe6bAesDIgR3sg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_qDnu5mRZEe6bAesDIgR3sg" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDnu52RZEe6bAesDIgR3sg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQoEGRZEe6bAesDIgR3sg" name="getCoordinator" specification="_p0MLwGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEQoEWRZEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQoEmRZEe6bAesDIgR3sg" name="setCoordinator" specification="_p0My0GRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEQoE2RZEe6bAesDIgR3sg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQoFGRZEe6bAesDIgR3sg" name="setName" specification="_p0My0mRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEQoFWRZEe6bAesDIgR3sg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQoFmRZEe6bAesDIgR3sg" name="setFlow" specification="_p0NZ4GRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEQoF2RZEe6bAesDIgR3sg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQoGGRZEe6bAesDIgR3sg" name="setSrc" specification="_p0NZ4mRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEQoGWRZEe6bAesDIgR3sg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQoGmRZEe6bAesDIgR3sg" name="setSnk" specification="_p0NZ5GRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEQoG2RZEe6bAesDIgR3sg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQoHGRZEe6bAesDIgR3sg" name="setChannel" specification="_p0NZ5mRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEQoHWRZEe6bAesDIgR3sg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQoHmRZEe6bAesDIgR3sg" name="unused" specification="_p0OA8GRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEQoH2RZEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_p0MLwGRZEe6bAesDIgR3sg" name="getCoordinator" method="_qEQoEGRZEe6bAesDIgR3sg">
                  <ownedComment xmi:id="_qEkKGGRZEe6bAesDIgR3sg">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_p0MLwWRZEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_p0My0GRZEe6bAesDIgR3sg" name="setCoordinator" method="_qEQoEmRZEe6bAesDIgR3sg">
                  <ownedComment xmi:id="_qEkKGWRZEe6bAesDIgR3sg">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_p0My0WRZEe6bAesDIgR3sg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_p0My0mRZEe6bAesDIgR3sg" name="setName" visibility="private" method="_qEQoFGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_p0My02RZEe6bAesDIgR3sg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_p0NZ4GRZEe6bAesDIgR3sg" name="setFlow" visibility="private" method="_qEQoFmRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_p0NZ4WRZEe6bAesDIgR3sg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_p0NZ4mRZEe6bAesDIgR3sg" name="setSrc" visibility="private" method="_qEQoGGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_p0NZ42RZEe6bAesDIgR3sg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_p0NZ5GRZEe6bAesDIgR3sg" name="setSnk" visibility="private" method="_qEQoGmRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_p0NZ5WRZEe6bAesDIgR3sg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_p0NZ5mRZEe6bAesDIgR3sg" name="setChannel" visibility="private" method="_qEQoHGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_p0NZ52RZEe6bAesDIgR3sg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_p0OA8GRZEe6bAesDIgR3sg" name="unused" method="_qEQoHmRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_p0OA8WRZEe6bAesDIgR3sg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_p0PPEGRZEe6bAesDIgR3sg" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_qCnpUWRZEe6bAesDIgR3sg" general="_qCnCQWRZEe6bAesDIgR3sg"/>
                <ownedAttribute xmi:id="_qDoV8GRZEe6bAesDIgR3sg" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_qDoV8mRZEe6bAesDIgR3sg" name="instructionParametersArrayList" visibility="package" type="_p_fc0GRZEe6bAesDIgR3sg" association="_qFIx0WRZEe6bAesDIgR3sg"/>
                <ownedAttribute xmi:id="_qDo9AWRZEe6bAesDIgR3sg" name="instructionParameters" visibility="package" type="_p0LksGRZEe6bAesDIgR3sg" association="_qFJY4GRZEe6bAesDIgR3sg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQoI2RZEe6bAesDIgR3sg" name="ListenerDsl" specification="_p0PPEWRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEQoJGRZEe6bAesDIgR3sg" type="_p0PPEGRZEe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEQoJWRZEe6bAesDIgR3sg" name="getInstructionParameters" specification="_p0P2IWRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qEQoJmRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qERPIGRZEe6bAesDIgR3sg" name="enterAction" specification="_qBDjEWRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qERPIWRZEe6bAesDIgR3sg" name="ctx" type="_qBC8AGRZEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qERPImRZEe6bAesDIgR3sg" name="exitAction" specification="_qBEKIGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qERPI2RZEe6bAesDIgR3sg" name="ctx" type="_qBC8AGRZEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qERPJGRZEe6bAesDIgR3sg" name="exitFlowName" specification="_qBEKJ2RZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qERPJWRZEe6bAesDIgR3sg" name="ctx" type="_qBEKJWRZEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qERPJmRZEe6bAesDIgR3sg" name="exitCmd" specification="_qBExNmRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qERPJ2RZEe6bAesDIgR3sg" name="ctx" type="_qBExNGRZEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qERPKGRZEe6bAesDIgR3sg" name="exitSrcNode" specification="_qBFYRWRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qERPKWRZEe6bAesDIgR3sg" name="ctx" type="_qBFYQ2RZEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qERPKmRZEe6bAesDIgR3sg" name="exitSnkNode" specification="_qBF_VGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qERPK2RZEe6bAesDIgR3sg" name="ctx" type="_qBF_UmRZEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qERPLGRZEe6bAesDIgR3sg" name="exitChannel" specification="_qBHNcWRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qERPLWRZEe6bAesDIgR3sg" name="ctx" type="_qBGmY2RZEe6bAesDIgR3sg"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_p0PPEWRZEe6bAesDIgR3sg" name="ListenerDsl" visibility="package" method="_qEQoI2RZEe6bAesDIgR3sg">
                  <eAnnotations xmi:id="_p0PPEmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_p0PPE2RZEe6bAesDIgR3sg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_p0P2IGRZEe6bAesDIgR3sg" type="_p0PPEGRZEe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_p0P2IWRZEe6bAesDIgR3sg" name="getInstructionParameters" method="_qEQoJWRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qCnpUGRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_qBDjEWRZEe6bAesDIgR3sg" name="enterAction" method="_qERPIGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qBDjEmRZEe6bAesDIgR3sg" name="ctx" type="_qBC8AGRZEe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_qBEKIGRZEe6bAesDIgR3sg" name="exitAction" method="_qERPImRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qBEKIWRZEe6bAesDIgR3sg" name="ctx" type="_qBC8AGRZEe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_qBEKJ2RZEe6bAesDIgR3sg" name="exitFlowName" method="_qERPJGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qBExMGRZEe6bAesDIgR3sg" name="ctx" type="_qBEKJWRZEe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_qBExNmRZEe6bAesDIgR3sg" name="exitCmd" method="_qERPJmRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qBExN2RZEe6bAesDIgR3sg" name="ctx" type="_qBExNGRZEe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_qBFYRWRZEe6bAesDIgR3sg" name="exitSrcNode" method="_qERPKGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qBFYRmRZEe6bAesDIgR3sg" name="ctx" type="_qBFYQ2RZEe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_qBF_VGRZEe6bAesDIgR3sg" name="exitSnkNode" method="_qERPKmRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qBF_VWRZEe6bAesDIgR3sg" name="ctx" type="_qBF_UmRZEe6bAesDIgR3sg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_qBHNcWRZEe6bAesDIgR3sg" name="exitChannel" method="_qERPLGRZEe6bAesDIgR3sg">
                  <ownedParameter xmi:id="_qBHNcmRZEe6bAesDIgR3sg" name="ctx" type="_qBGmY2RZEe6bAesDIgR3sg"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_p0S5cGRZEe6bAesDIgR3sg" name="WarpInterface">
              <ownedComment xmi:id="_qEkKGmRZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_qBIbkGRZEe6bAesDIgR3sg" general="_pzF_kGRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_p0TggGRZEe6bAesDIgR3sg" name="toWorkload">
                <ownedParameter xmi:id="_qBIbkWRZEe6bAesDIgR3sg" type="_p0mbcGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0TggWRZEe6bAesDIgR3sg" name="toProgram">
                <ownedParameter xmi:id="_qBIbkmRZEe6bAesDIgR3sg" type="_pzoLEGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0UHkGRZEe6bAesDIgR3sg" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_qBIbk2RZEe6bAesDIgR3sg" type="_py5LQGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0UHkWRZEe6bAesDIgR3sg" name="toSimulator">
                <ownedParameter xmi:id="_qBIblGRZEe6bAesDIgR3sg" type="_pzMtQGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0UHkmRZEe6bAesDIgR3sg" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_qBIblWRZEe6bAesDIgR3sg" type="_pyWYsGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0UuoGRZEe6bAesDIgR3sg" name="toChannelAnalysis">
                <ownedParameter xmi:id="_qBIblmRZEe6bAesDIgR3sg" type="_pxn_8GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0UuoWRZEe6bAesDIgR3sg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_p0UuomRZEe6bAesDIgR3sg" name="reliabilitiesMet">
                <ownedParameter xmi:id="_p0VVsGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0VVsWRZEe6bAesDIgR3sg" name="deadlinesMet">
                <ownedParameter xmi:id="_p0VVsmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_p0V8wGRZEe6bAesDIgR3sg" name="Flow">
              <ownedComment xmi:id="_qEkKG2RZEe6bAesDIgR3sg">
                <body>&lt;p> This class is for representing network flows.&#xD;
		Network flows are used to model the communication patterns between other flows within the network.&#xD;
		Each flow has the following properties: priority, index, and values that show if data has been transmitted reliably.&#xD;
		Flows are compared based off their priority and contain nodes and edges&#xD;
		&#xD;
&#xD;
@author sgoddard&#xD;
@author Frank Forliano (creating comments, for JavaDoc)</body>
              </ownedComment>
              <generalization xmi:id="_qBKQwmRZEe6bAesDIgR3sg" general="_pzY6gGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDpkEGRZEe6bAesDIgR3sg" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDpkEWRZEe6bAesDIgR3sg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDpkEmRZEe6bAesDIgR3sg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDpkE2RZEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDpkFGRZEe6bAesDIgR3sg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDpkFWRZEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDpkFmRZEe6bAesDIgR3sg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDqLIGRZEe6bAesDIgR3sg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDqLIWRZEe6bAesDIgR3sg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDqLImRZEe6bAesDIgR3sg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDqLI2RZEe6bAesDIgR3sg" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDqLJGRZEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDqLJWRZEe6bAesDIgR3sg" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDqLJmRZEe6bAesDIgR3sg" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDqLKGRZEe6bAesDIgR3sg" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDqyMWRZEe6bAesDIgR3sg" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDqyM2RZEe6bAesDIgR3sg" name="nodes" visibility="package" type="_p_fc0GRZEe6bAesDIgR3sg" association="_qFJY42RZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDqyNmRZEe6bAesDIgR3sg" name="linkTxAndTotalCost" visibility="package" type="_p_fc0GRZEe6bAesDIgR3sg" association="_qFJ_8GRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDrZQmRZEe6bAesDIgR3sg" name="edges" visibility="package" type="_p_fc0GRZEe6bAesDIgR3sg" association="_qFJ_82RZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDrZRWRZEe6bAesDIgR3sg" name="nodePredecessor" visibility="package" type="_pyeUgGRZEe6bAesDIgR3sg" association="_qFJ_9mRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDsAUWRZEe6bAesDIgR3sg" name="edgePredecessor" visibility="package" type="_px5swmRZEe6bAesDIgR3sg" association="_qFKnAWRZEe6bAesDIgR3sg"/>
              <interfaceRealization xmi:id="_qCoQYGRZEe6bAesDIgR3sg" client="_p0V8wGRZEe6bAesDIgR3sg" supplier="_qB20UGRZEe6bAesDIgR3sg" contract="_qB20UGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qERPLmRZEe6bAesDIgR3sg" name="Flow" specification="_p0Wj0GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qERPL2RZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qERPMGRZEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qERPMWRZEe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qERPMmRZEe6bAesDIgR3sg" type="_p0V8wGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2MGRZEe6bAesDIgR3sg" name="Flow" specification="_p0XK5WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2MWRZEe6bAesDIgR3sg" type="_p0V8wGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2MmRZEe6bAesDIgR3sg" name="getInitialPriority" specification="_p0XK6WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2M2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2NGRZEe6bAesDIgR3sg" name="getIndex" specification="_p0Xx8GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2NWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2NmRZEe6bAesDIgR3sg" name="getNumTxPerLink" specification="_p0Xx8mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2N2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2OGRZEe6bAesDIgR3sg" name="getNodes" specification="_p0YZAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2OWRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2OmRZEe6bAesDIgR3sg" name="getEdges" specification="_p0ZAEGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2O2RZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2PGRZEe6bAesDIgR3sg" name="addEdge" specification="_qBJCoGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2PWRZEe6bAesDIgR3sg" name="edge" type="_px5swmRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2PmRZEe6bAesDIgR3sg" name="addNode" specification="_qBJpsGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2P2RZEe6bAesDIgR3sg" name="node" type="_pyeUgGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2QGRZEe6bAesDIgR3sg" name="getLinkTxAndTotalCost" specification="_p0ZnIWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2QWRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2QmRZEe6bAesDIgR3sg" name="setInitialPriority" specification="_p0aOMWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2Q2RZEe6bAesDIgR3sg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2RGRZEe6bAesDIgR3sg" name="setIndex" specification="_p0a1QGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2RWRZEe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2RmRZEe6bAesDIgR3sg" name="setNumTxPerLink" specification="_p0bcUGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2R2RZEe6bAesDIgR3sg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2SGRZEe6bAesDIgR3sg" name="setNodes" specification="_qCpegmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2SWRZEe6bAesDIgR3sg" name="nodes" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qER2SmRZEe6bAesDIgR3sg" name="setLinkTxAndTotalCost" specification="_qCqFkGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qER2S2RZEe6bAesDIgR3sg" name="linkTxAndTotalCost" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qESdQGRZEe6bAesDIgR3sg" name="compareTo" specification="_qBJpsmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qESdQWRZEe6bAesDIgR3sg" name="flow" type="_p0V8wGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qESdQmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qESdQ2RZEe6bAesDIgR3sg" name="toString" specification="_p0cDYGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qESdRGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p0Wj0GRZEe6bAesDIgR3sg" name="Flow" visibility="package" method="_qERPLmRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p0XK4mRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p0XK42RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEkKHGRZEe6bAesDIgR3sg">
                  <body>Constructor that sets name, priority, and index&#xD;
     * @param name The name of the Flow&#xD;
     * @param priority The priority of the Flow	&#xD;
     * @param Integer The flow index number</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0Wj0WRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0XK4GRZEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0XK4WRZEe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0XK5GRZEe6bAesDIgR3sg" type="_p0V8wGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0XK5WRZEe6bAesDIgR3sg" name="Flow" visibility="package" method="_qER2MGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p0XK5mRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p0XK52RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qEkKHWRZEe6bAesDIgR3sg">
                  <body>The default constructor for Flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0XK6GRZEe6bAesDIgR3sg" type="_p0V8wGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0XK6WRZEe6bAesDIgR3sg" name="getInitialPriority" method="_qER2MmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkKHmRZEe6bAesDIgR3sg">
                  <body>Use this to see the flow priority)&#xD;
	 * @return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0XK6mRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0Xx8GRZEe6bAesDIgR3sg" name="getIndex" method="_qER2NGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkKH2RZEe6bAesDIgR3sg">
                  <body>Return the value of the index.&#xD;
	 * @param index&#xD;
	 * @return the index (use this to get the index of the list))</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0Xx8WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0Xx8mRZEe6bAesDIgR3sg" name="getNumTxPerLink" method="_qER2NmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkKIGRZEe6bAesDIgR3sg">
                  <body>Use to see flow transmissions.&#xD;
	 *  @param numTxPerLink&#xD;
	 * @return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0Xx82RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0YZAGRZEe6bAesDIgR3sg" name="getNodes" method="_qER2OGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkxIGRZEe6bAesDIgR3sg">
                  <body>Returns an ArrayList object of the nodes.&#xD;
	 * @return nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCo3cWRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0ZAEGRZEe6bAesDIgR3sg" name="getEdges" method="_qER2OmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkxIWRZEe6bAesDIgR3sg">
                  <body>Get the edges from the flow.&#xD;
	 * @param edges &#xD;
	 * @return the nodes (returns an ArrayList object of the edges)</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCpegGRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0ZnIWRZEe6bAesDIgR3sg" name="getLinkTxAndTotalCost" method="_qER2QGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkxJGRZEe6bAesDIgR3sg">
                  <body>Returns the link transmission and cost of the value.&#xD;
	 * @return An ArrayList that contains the link transmission and the cost of the value.</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCpegWRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0aOMWRZEe6bAesDIgR3sg" name="setInitialPriority" method="_qER2QmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkxJWRZEe6bAesDIgR3sg">
                  <body>The initialPriority to set.&#xD;
	 * @param initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0aOMmRZEe6bAesDIgR3sg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0a1QGRZEe6bAesDIgR3sg" name="setIndex" method="_qER2RGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkxJmRZEe6bAesDIgR3sg">
                  <body>The index value which needs to be set.&#xD;
	 * @param index</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0a1QWRZEe6bAesDIgR3sg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0bcUGRZEe6bAesDIgR3sg" name="setNumTxPerLink" method="_qER2RmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkxJ2RZEe6bAesDIgR3sg">
                  <body>The numTxPerLink to set.&#xD;
	 * @param numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0bcUWRZEe6bAesDIgR3sg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0cDYGRZEe6bAesDIgR3sg" name="toString" method="_qESdQ2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0cDYWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qBJCoGRZEe6bAesDIgR3sg" name="addEdge" method="_qER2PGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkxImRZEe6bAesDIgR3sg">
                  <body>Add an edge to the flow.&#xD;
	 * @param edge The edge which is added to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_qBJCoWRZEe6bAesDIgR3sg" name="edge" type="_px5swmRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBJpsGRZEe6bAesDIgR3sg" name="addNode" method="_qER2PmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkxI2RZEe6bAesDIgR3sg">
                  <body>Add a node to the flow.&#xD;
	 * @param node The node which is added to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_qBJpsWRZEe6bAesDIgR3sg" name="node" type="_pyeUgGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBJpsmRZEe6bAesDIgR3sg" name="compareTo" method="_qESdQGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBJps2RZEe6bAesDIgR3sg" name="flow" type="_p0V8wGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qBJptGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qCpegmRZEe6bAesDIgR3sg" name="setNodes" method="_qER2SGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkxKGRZEe6bAesDIgR3sg">
                  <body>The nodes to set.&#xD;
	 * @param nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCpeg2RZEe6bAesDIgR3sg" name="nodes" type="_p_fc0GRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCqFkGRZEe6bAesDIgR3sg" name="setLinkTxAndTotalCost" method="_qER2SmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEkxKWRZEe6bAesDIgR3sg">
                  <body>The linkTxAndTotalCost to set.&#xD;
	 * @param linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCqFkWRZEe6bAesDIgR3sg" name="linkTxAndTotalCost" type="_p_fc0GRZEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_p0fGsGRZEe6bAesDIgR3sg" name="WarpSystem">
              <ownedComment xmi:id="_qEkxKmRZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qDsAU2RZEe6bAesDIgR3sg" name="program" visibility="private" type="_pzoLEGRZEe6bAesDIgR3sg" association="_qFKnBGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDsnYWRZEe6bAesDIgR3sg" name="workLoad" visibility="private" type="_p0mbcGRZEe6bAesDIgR3sg" association="_qFKnB2RZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDsnY2RZEe6bAesDIgR3sg" name="ra" visibility="private" type="_py5LQGRZEe6bAesDIgR3sg" association="_qFLOEWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDsnZWRZEe6bAesDIgR3sg" name="la" visibility="private" type="_pyWYsGRZEe6bAesDIgR3sg" association="_qFLOFGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDsnZ2RZEe6bAesDIgR3sg" name="ca" visibility="private" type="_pxn_8GRZEe6bAesDIgR3sg" association="_qFL1IWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDtOcWRZEe6bAesDIgR3sg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDtOd2RZEe6bAesDIgR3sg" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDt1gGRZEe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDt1gmRZEe6bAesDIgR3sg" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDt1g2RZEe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_qBMF8GRZEe6bAesDIgR3sg" client="_p0fGsGRZEe6bAesDIgR3sg" supplier="_p0S5cGRZEe6bAesDIgR3sg" contract="_p0S5cGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qESdR2RZEe6bAesDIgR3sg" name="WarpSystem" specification="_qCrTsGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qESdSGRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qESdSWRZEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qESdSmRZEe6bAesDIgR3sg" name="choice" type="_qCdRQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qESdS2RZEe6bAesDIgR3sg" type="_p0fGsGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qESdTGRZEe6bAesDIgR3sg" name="toWorkload" specification="_p0ftwGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qESdTWRZEe6bAesDIgR3sg" type="_p0mbcGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qESdTmRZEe6bAesDIgR3sg" name="toProgram" specification="_p0gU0WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qESdT2RZEe6bAesDIgR3sg" type="_pzoLEGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEUGRZEe6bAesDIgR3sg" name="toReliabilityAnalysis" specification="_p0gU1WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEUWRZEe6bAesDIgR3sg" type="_py5LQGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEUmRZEe6bAesDIgR3sg" name="toSimulator" specification="_p0g74mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEU2RZEe6bAesDIgR3sg" type="_pzMtQGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEVGRZEe6bAesDIgR3sg" name="toLatencyAnalysis" specification="_p0g75mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEVWRZEe6bAesDIgR3sg" type="_pyWYsGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEVmRZEe6bAesDIgR3sg" name="toChannelAnalysis" specification="_p0hi8GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEV2RZEe6bAesDIgR3sg" type="_pxn_8GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEWGRZEe6bAesDIgR3sg" name="reliabilitiesMet" specification="_p0hi9GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEWWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEWmRZEe6bAesDIgR3sg" name="deadlinesMet" specification="_p0iKAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEW2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEXGRZEe6bAesDIgR3sg" name="createProgram" specification="_qCr6wmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEXWRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qETEXmRZEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qETEX2RZEe6bAesDIgR3sg" name="choice" type="_qCdRQGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEYGRZEe6bAesDIgR3sg" name="getNumFaults" specification="_p0iKBWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEYWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEYmRZEe6bAesDIgR3sg" name="getMinPacketReceptionRate" specification="_p0ixEmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEY2RZEe6bAesDIgR3sg" type="_qCQc8GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEZGRZEe6bAesDIgR3sg" name="getE2e" specification="_p0ixFmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEZWRZEe6bAesDIgR3sg" type="_qCQc8GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEZmRZEe6bAesDIgR3sg" name="getName" specification="_p0jYIGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEZ2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEaGRZEe6bAesDIgR3sg" name="getSchedulerName" specification="_p0jYJWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEaWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEamRZEe6bAesDIgR3sg" name="getNumTransmissions" specification="_p0j_MGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEa2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETEbGRZEe6bAesDIgR3sg" name="getOptimizationFlag" specification="_p0j_NWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETEbWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p0ftwGRZEe6bAesDIgR3sg" name="toWorkload" method="_qESdTGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBMtAGRZEe6bAesDIgR3sg" type="_p0mbcGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0gU0WRZEe6bAesDIgR3sg" name="toProgram" method="_qESdTmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBMtAWRZEe6bAesDIgR3sg" type="_pzoLEGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0gU1WRZEe6bAesDIgR3sg" name="toReliabilityAnalysis" method="_qETEUGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBMtAmRZEe6bAesDIgR3sg" type="_py5LQGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0g74mRZEe6bAesDIgR3sg" name="toSimulator" method="_qETEUmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBNUEGRZEe6bAesDIgR3sg" type="_pzMtQGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0g75mRZEe6bAesDIgR3sg" name="toLatencyAnalysis" method="_qETEVGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBNUEWRZEe6bAesDIgR3sg" type="_pyWYsGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0hi8GRZEe6bAesDIgR3sg" name="toChannelAnalysis" method="_qETEVmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBNUEmRZEe6bAesDIgR3sg" type="_pxn_8GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0hi9GRZEe6bAesDIgR3sg" name="reliabilitiesMet" method="_qETEWGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0hi9WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0iKAGRZEe6bAesDIgR3sg" name="deadlinesMet" method="_qETEWmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0iKAWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0iKBWRZEe6bAesDIgR3sg" name="getNumFaults" method="_qETEYGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0iKBmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0ixEmRZEe6bAesDIgR3sg" name="getMinPacketReceptionRate" method="_qETEYmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCsh0WRZEe6bAesDIgR3sg" type="_qCQc8GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0ixFmRZEe6bAesDIgR3sg" name="getE2e" method="_qETEZGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCsh0mRZEe6bAesDIgR3sg" type="_qCQc8GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0jYIGRZEe6bAesDIgR3sg" name="getName" method="_qETEZmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0jYIWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0jYJWRZEe6bAesDIgR3sg" name="getSchedulerName" method="_qETEaGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0jYJmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0j_MGRZEe6bAesDIgR3sg" name="getNumTransmissions" method="_qETEamRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0j_MWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0j_NWRZEe6bAesDIgR3sg" name="getOptimizationFlag" method="_qETEbGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0j_NmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0j_OmRZEe6bAesDIgR3sg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_qCrTsGRZEe6bAesDIgR3sg" name="WarpSystem" method="_qESdR2RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qCrTtGRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qCr6wGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qCrTsWRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCrTsmRZEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCrTs2RZEe6bAesDIgR3sg" name="choice" type="_qCdRQGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCr6wWRZEe6bAesDIgR3sg" type="_p0fGsGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCr6wmRZEe6bAesDIgR3sg" name="createProgram" visibility="private" method="_qETEXGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCr6w2RZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCr6xGRZEe6bAesDIgR3sg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCsh0GRZEe6bAesDIgR3sg" name="choice" type="_qCdRQGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_p0mbcGRZEe6bAesDIgR3sg" name="WorkLoad">
              <ownedComment xmi:id="_qEkxK2RZEe6bAesDIgR3sg">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@author Frank Forliano (for java doc comments)&#xD;
@author srgoddard (for java doc comments)&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_qBRlgGRZEe6bAesDIgR3sg" general="_p0-18GRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDuckGRZEe6bAesDIgR3sg" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDuckWRZEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDuckmRZEe6bAesDIgR3sg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDuck2RZEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDuclGRZEe6bAesDIgR3sg" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDuclWRZEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDuclmRZEe6bAesDIgR3sg" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDucl2RZEe6bAesDIgR3sg" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDucmGRZEe6bAesDIgR3sg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDvDoGRZEe6bAesDIgR3sg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDvDoWRZEe6bAesDIgR3sg" name="minPacketReceptionRate" type="_qCQc8GRZEe6bAesDIgR3sg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDvDomRZEe6bAesDIgR3sg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDvDo2RZEe6bAesDIgR3sg" name="e2e" visibility="private" type="_qCQc8GRZEe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDvDpGRZEe6bAesDIgR3sg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDvDpmRZEe6bAesDIgR3sg" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDvDp2RZEe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDvDqGRZEe6bAesDIgR3sg" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDvDqWRZEe6bAesDIgR3sg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDvqsGRZEe6bAesDIgR3sg" name="flows" type="_pyC2sGRZEe6bAesDIgR3sg" association="_qElYMGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDvqsWRZEe6bAesDIgR3sg" name="nodes" type="_pyj0EGRZEe6bAesDIgR3sg" association="_qElYMmRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDvqsmRZEe6bAesDIgR3sg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDwRwWRZEe6bAesDIgR3sg" name="flowNamesInOriginalOrder" type="_p_fc0GRZEe6bAesDIgR3sg" association="_qFL1JGRZEe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDw40WRZEe6bAesDIgR3sg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDw40mRZEe6bAesDIgR3sg" name="flowNamesInPriorityOrder" type="_p_fc0GRZEe6bAesDIgR3sg" association="_qFMcMGRZEe6bAesDIgR3sg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDw41GRZEe6bAesDIgR3sg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_qBPwUGRZEe6bAesDIgR3sg" client="_p0mbcGRZEe6bAesDIgR3sg" supplier="_py5yUmRZEe6bAesDIgR3sg" contract="_py5yUmRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETrYGRZEe6bAesDIgR3sg" name="WorkLoad" specification="_qCtv8GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETrYWRZEe6bAesDIgR3sg" name="m" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qETrYmRZEe6bAesDIgR3sg" name="e2e" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qETrY2RZEe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qETrZGRZEe6bAesDIgR3sg" type="_p0mbcGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETrZWRZEe6bAesDIgR3sg" name="WorkLoad" specification="_qCuXBGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETrZmRZEe6bAesDIgR3sg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qETrZ2RZEe6bAesDIgR3sg" name="m" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qETraGRZEe6bAesDIgR3sg" name="e2e" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qETraWRZEe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qETramRZEe6bAesDIgR3sg" type="_p0mbcGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETra2RZEe6bAesDIgR3sg" name="setDefaultParameters" specification="_p0oQoGRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETrbGRZEe6bAesDIgR3sg" name="getE2e" specification="_p0o3sGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETrbWRZEe6bAesDIgR3sg" type="_qCQc8GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETrbmRZEe6bAesDIgR3sg" name="getIntForFlowNames" specification="_p0o3sWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETrb2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETrcGRZEe6bAesDIgR3sg" name="getName" specification="_p0pewWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETrcWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETrcmRZEe6bAesDIgR3sg" name="setMinPacketReceptionRate" specification="_qCu-EWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETrc2RZEe6bAesDIgR3sg" name="minPacketReceptionRate" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETrdGRZEe6bAesDIgR3sg" name="getMaxPhase" specification="_p0qF0WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETrdWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETrdmRZEe6bAesDIgR3sg" name="getMinPeriod" specification="_p0qs4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETrd2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qETreGRZEe6bAesDIgR3sg" name="setE2e" specification="_qCu-E2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qETreWRZEe6bAesDIgR3sg" name="e2e" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEUScGRZEe6bAesDIgR3sg" name="setIntForFlowNames" specification="_p0qs4mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEUScWRZEe6bAesDIgR3sg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEUScmRZEe6bAesDIgR3sg" name="setName" specification="_p0rT8WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEUSc2RZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEUSdGRZEe6bAesDIgR3sg" name="setNodeChannel" specification="_p0r7AGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEUSdWRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEUSdmRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEUSd2RZEe6bAesDIgR3sg" name="getNodeChannel" specification="_p0r7A2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEUSeGRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEUSeWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEUSemRZEe6bAesDIgR3sg" name="addFlow" specification="_p0siEGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEUSe2RZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEUSfGRZEe6bAesDIgR3sg" name="isIntForNodeNames" specification="_p0siEmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEUSfWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEUSfmRZEe6bAesDIgR3sg" name="isIntForFlowNames" specification="_p0siFGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEUSf2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEUSgGRZEe6bAesDIgR3sg" name="addNodeToFlow" specification="_p0tJIWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEUSgWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEUSgmRZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEUSg2RZEe6bAesDIgR3sg" name="getFlowPriority" specification="_p0twMGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEUShGRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEUShWRZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEUShmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEUSh2RZEe6bAesDIgR3sg" name="setFlowPriority" specification="_p0uXQGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEUSiGRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEUSiWRZEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEUSimRZEe6bAesDIgR3sg" name="setFlowPeriod" specification="_p0uXQ2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEUSi2RZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEUSjGRZEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEUSjWRZEe6bAesDIgR3sg" name="setFlowDeadline" specification="_p0u-UWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEUSjmRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEUSj2RZEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEUSkGRZEe6bAesDIgR3sg" name="setFlowPhase" specification="_p0u-VGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEUSkWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEUSkmRZEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5gGRZEe6bAesDIgR3sg" name="getFlowIndex" specification="_p0vlYGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEU5gWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEU5gmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5g2RZEe6bAesDIgR3sg" name="getFlowPriority" specification="_p0wMcGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEU5hGRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEU5hWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5hmRZEe6bAesDIgR3sg" name="getFlowPeriod" specification="_p0wMc2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEU5h2RZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEU5iGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5iWRZEe6bAesDIgR3sg" name="getFlowDeadline" specification="_p0wzgGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEU5imRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEU5i2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5jGRZEe6bAesDIgR3sg" name="getFlowPhase" specification="_p0wzg2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEU5jWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEU5jmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5j2RZEe6bAesDIgR3sg" name="getFlowTxAttemptsPerLink" specification="_p0wzhmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEU5kGRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEU5kWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5kmRZEe6bAesDIgR3sg" name="setFlowsInPriorityOrder" specification="_p0xakWRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5k2RZEe6bAesDIgR3sg" name="setFlowsInDMorder" specification="_p0xakmRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5lGRZEe6bAesDIgR3sg" name="setFlowsInRMorder" specification="_p0xak2RZEe6bAesDIgR3sg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5lWRZEe6bAesDIgR3sg" name="setFlowsInRealTimeHARTorder" specification="_p0xalGRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5lmRZEe6bAesDIgR3sg" name="finalizeCurrentFlow" specification="_p0xalWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEU5l2RZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5mGRZEe6bAesDIgR3sg" name="nextReleaseTime" specification="_p0yBoGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEU5mWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEU5mmRZEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEU5m2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5nGRZEe6bAesDIgR3sg" name="nextAbsoluteDeadline" specification="_p0yosGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEU5nWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEU5nmRZEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEU5n2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEU5oGRZEe6bAesDIgR3sg" name="finalizeFlowWithE2eParameters" specification="_p0yotGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEVgkGRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEVgkWRZEe6bAesDIgR3sg" name="finalizeFlowWithFixedFaultTolerance" specification="_p0zPwGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEVgkmRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEVgk2RZEe6bAesDIgR3sg" name="getFixedTxPerLinkAndTotalTxCost" specification="_qBQXYGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEVglGRZEe6bAesDIgR3sg" name="flow" type="_p0V8wGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEVglWRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEVglmRZEe6bAesDIgR3sg" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_qCvlIWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEVgl2RZEe6bAesDIgR3sg" name="flow" type="_p0V8wGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEVgmGRZEe6bAesDIgR3sg" name="e2e" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEVgmWRZEe6bAesDIgR3sg" name="M" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEVgmmRZEe6bAesDIgR3sg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEVgm2RZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
                                                                                       // to&#xD;
                                                                                       // handle&#xD;
                                                                                       // rounding&#xD;
                                                                                       // error&#xD;
                                                                                       // when&#xD;
                                                                                       // e2e ==&#xD;
                                                                                       // 1.0&#xD;
 // Now compute reliability of packet reaching each node in the given time slot&#xD;
 // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
 // each row is a time slot, stating at time 0&#xD;
 // each column represents the reliability of the packet reaching that node at the&#xD;
 // current time slot (i.e., the row it is in)&#xD;
 // will add rows as we compute reliabilities until the final reliability is reached&#xD;
 // for all nodes.&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end&#xD;
                                                                       // when the 2e2&#xD;
                                                                       // reliability metrix is&#xD;
                                                                       // met, initially the&#xD;
                                                                       // state is not met and&#xD;
                                                                       // will be 0 with this&#xD;
                                                                       // statement&#xD;
 var timeSlot = 0; // start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
                                     // we don't know how long this schedule window will last&#xD;
   var prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would&#xD;
                                                                                            // be&#xD;
                                                                                            // reliabilityWindow[timeSlot]&#xD;
                                                                                            // if&#xD;
                                                                                            // working&#xD;
                                                                                            // through&#xD;
                                                                                            // a&#xD;
                                                                                            // schedule&#xD;
   // Now use each flow:src->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
                                                                          // node in the flow and&#xD;
                                                                          // update the sates for&#xD;
                                                                          // each link (i.e.,&#xD;
                                                                          // sink->src pair)&#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
                                                                                // until PrevSnk&#xD;
                                                                                // state > e2e to&#xD;
                                                                                // ensure next&#xD;
                                                                                // node reaches&#xD;
                                                                                // target E2E BUT&#xD;
                                                                                // skip if no&#xD;
                                                                                // chance of&#xD;
                                                                                // success (i.e.,&#xD;
                                                                                // source doesn't&#xD;
                                                                                // have packet)&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
                                                                               // continue&#xD;
                                                                               // attempting to&#xD;
                                                                               // Tx, so update&#xD;
                                                                               // current state&#xD;
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
                                        // next node and record the reliability met&#xD;
     }&#xD;
&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities&#xD;
                                                                                           // are&#xD;
                                                                                           // non-decreasing&#xD;
                                                                                           // so&#xD;
                                                                                           // update&#xD;
                                                                                           // if&#xD;
                                                                                           // we&#xD;
                                                                                           // were&#xD;
                                                                                           // higher&#xD;
                                                                                           // by&#xD;
                                                                                           // carring&#xD;
                                                                                           // old&#xD;
                                                                                           // value&#xD;
                                                                                           // forward&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry&#xD;
                                                                                       // forward&#xD;
                                                                                       // the&#xD;
                                                                                       // previous&#xD;
                                                                                       // state&#xD;
                                                                                       // for the&#xD;
                                                                                       // src&#xD;
                                                                                       // node,&#xD;
                                                                                       // which&#xD;
                                                                                       // may get&#xD;
                                                                                       // over&#xD;
                                                                                       // written&#xD;
                                                                                       // later&#xD;
                                                                                       // by&#xD;
                                                                                       // another&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in this&#xD;
                                                                                       // slot&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEVgnGRZEe6bAesDIgR3sg" name="getNodeNamesOrderedAlphabetically" specification="_p0zPwmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEVgnWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qEVgnmRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEVgn2RZEe6bAesDIgR3sg" name="getFlow" specification="_p00d4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEVgoGRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEVgoWRZEe6bAesDIgR3sg" type="_p0V8wGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEVgomRZEe6bAesDIgR3sg" name="getFlowNames" specification="_p00d4mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEVgo2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qEVgpGRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEVgpWRZEe6bAesDIgR3sg" name="getNodeIndex" specification="_p01E8WRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEVgpmRZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEVgp2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEVgqGRZEe6bAesDIgR3sg" name="getNodesInFlow" specification="_p01sAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEVgqWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEVgqmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qEVgq2RZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEVgrGRZEe6bAesDIgR3sg" name="getHyperPeriod" specification="_p02TEWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEVgrWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEVgrmRZEe6bAesDIgR3sg" name="getTotalTxAttemptsInFlow" specification="_p02TE2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEVgr2RZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEVgsGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEVgsWRZEe6bAesDIgR3sg" name="getNumTxAttemptsPerLink" specification="_p026IGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEVgsmRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEVgs2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qEVgtGRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEWHoGRZEe6bAesDIgR3sg" name="addEdge" specification="_qBQ-cmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEWHoWRZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEWHomRZEe6bAesDIgR3sg" name="edge" type="_px5swmRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEWHo2RZEe6bAesDIgR3sg" name="maxFlowLength" specification="_p03hMWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEWHpGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p0oQoGRZEe6bAesDIgR3sg" name="setDefaultParameters" visibility="private" method="_qETra2RZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_p0o3sGRZEe6bAesDIgR3sg" name="getE2e" method="_qETrbGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qElYNmRZEe6bAesDIgR3sg">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCu-EGRZEe6bAesDIgR3sg" type="_qCQc8GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p0o3sWRZEe6bAesDIgR3sg" name="getIntForFlowNames" method="_qETrbmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qElYN2RZEe6bAesDIgR3sg">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0pewGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0pewWRZEe6bAesDIgR3sg" name="getName" method="_qETrcGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qElYOGRZEe6bAesDIgR3sg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0qF0GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0qF0WRZEe6bAesDIgR3sg" name="getMaxPhase" method="_qETrdGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qElYOmRZEe6bAesDIgR3sg">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0qF0mRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0qs4GRZEe6bAesDIgR3sg" name="getMinPeriod" method="_qETrdmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qElYO2RZEe6bAesDIgR3sg">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0qs4WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0qs4mRZEe6bAesDIgR3sg" name="setIntForFlowNames" method="_qEUScGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEl_QWRZEe6bAesDIgR3sg">
                  <body>The intForFlowNames to set.&#xD;
   * @param intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0rT8GRZEe6bAesDIgR3sg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0rT8WRZEe6bAesDIgR3sg" name="setName" method="_qEUScmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEl_QmRZEe6bAesDIgR3sg">
                  <body>The name to set.&#xD;
   * @param name</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0rT8mRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0r7AGRZEe6bAesDIgR3sg" name="setNodeChannel" method="_qEUSdGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEl_Q2RZEe6bAesDIgR3sg">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0r7AWRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0r7AmRZEe6bAesDIgR3sg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0r7A2RZEe6bAesDIgR3sg" name="getNodeChannel" method="_qEUSd2RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEl_RGRZEe6bAesDIgR3sg">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0r7BGRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0r7BWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0siEGRZEe6bAesDIgR3sg" name="addFlow" method="_qEUSemRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0siEWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0siEmRZEe6bAesDIgR3sg" name="isIntForNodeNames" method="_qEUSfGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0siE2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0siFGRZEe6bAesDIgR3sg" name="isIntForFlowNames" method="_qEUSfmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0tJIGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0tJIWRZEe6bAesDIgR3sg" name="addNodeToFlow" method="_qEUSgGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0tJImRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0tJI2RZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0twMGRZEe6bAesDIgR3sg" name="getFlowPriority" method="_qEUSg2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0twMWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0twMmRZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0twM2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0uXQGRZEe6bAesDIgR3sg" name="setFlowPriority" method="_qEUSh2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0uXQWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0uXQmRZEe6bAesDIgR3sg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0uXQ2RZEe6bAesDIgR3sg" name="setFlowPeriod" method="_qEUSimRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0uXRGRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0u-UGRZEe6bAesDIgR3sg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0u-UWRZEe6bAesDIgR3sg" name="setFlowDeadline" method="_qEUSjWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0u-UmRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0u-U2RZEe6bAesDIgR3sg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0u-VGRZEe6bAesDIgR3sg" name="setFlowPhase" method="_qEUSkGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0u-VWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0u-VmRZEe6bAesDIgR3sg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0vlYGRZEe6bAesDIgR3sg" name="getFlowIndex" method="_qEU5gGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0vlYWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0vlYmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0wMcGRZEe6bAesDIgR3sg" name="getFlowPriority" method="_qEU5g2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0wMcWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0wMcmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0wMc2RZEe6bAesDIgR3sg" name="getFlowPeriod" method="_qEU5hmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0wMdGRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0wMdWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0wzgGRZEe6bAesDIgR3sg" name="getFlowDeadline" method="_qEU5iWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0wzgWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0wzgmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0wzg2RZEe6bAesDIgR3sg" name="getFlowPhase" method="_qEU5jGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0wzhGRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0wzhWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0wzhmRZEe6bAesDIgR3sg" name="getFlowTxAttemptsPerLink" method="_qEU5j2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0wzh2RZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0xakGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0xakWRZEe6bAesDIgR3sg" name="setFlowsInPriorityOrder" method="_qEU5kmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEl_RWRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * This collects the Flows in a list format from the FlowMap,&#xD;
  * then sorts by a secondary key via index,&#xD;
  * then sorts by priority order.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_p0xakmRZEe6bAesDIgR3sg" name="setFlowsInDMorder" method="_qEU5k2RZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_p0xak2RZEe6bAesDIgR3sg" name="setFlowsInRMorder" method="_qEU5lGRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_p0xalGRZEe6bAesDIgR3sg" name="setFlowsInRealTimeHARTorder" method="_qEU5lWRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_p0xalWRZEe6bAesDIgR3sg" name="finalizeCurrentFlow" method="_qEU5lmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0xalmRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0yBoGRZEe6bAesDIgR3sg" name="nextReleaseTime" method="_qEU5mGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEl_RmRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * Updates the LastUpdateTime and NextReleaseTime. Returns the next release Time at&#xD;
  * or after currentTime.&#xD;
  * @param flowName&#xD;
  * @param currentTime&#xD;
  * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0yBoWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0yBomRZEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0yBo2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0yosGRZEe6bAesDIgR3sg" name="nextAbsoluteDeadline" method="_qEU5nGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEl_R2RZEe6bAesDIgR3sg">
                  <body>&#xD;
  * Combines the release time for the schedule and the next deadline after currentTime&#xD;
  * @param flowName is past to var flow&#xD;
  * @param flow is used to hold getFlow(flowName)&#xD;
  * @param currentTime is used to set the LastUpdateTime and NextReleaseTime&#xD;
  * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_p0yosWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0yosmRZEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p0yos2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0yotGRZEe6bAesDIgR3sg" name="finalizeFlowWithE2eParameters" visibility="private" method="_qEU5oGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0yotWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0zPwGRZEe6bAesDIgR3sg" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_qEVgkWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0zPwWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p0zPwmRZEe6bAesDIgR3sg" name="getNodeNamesOrderedAlphabetically" method="_qEVgnGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p0z20GRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_p0z20WRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p00d4GRZEe6bAesDIgR3sg" name="getFlow" visibility="private" method="_qEVgn2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p00d4WRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qBQ-cWRZEe6bAesDIgR3sg" type="_p0V8wGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p00d4mRZEe6bAesDIgR3sg" name="getFlowNames" method="_qEVgomRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p00d42RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_p00d5GRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p01E8WRZEe6bAesDIgR3sg" name="getNodeIndex" method="_qEVgpWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p01E8mRZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p01E82RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p01sAGRZEe6bAesDIgR3sg" name="getNodesInFlow" method="_qEVgqGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEl_SGRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * get the flow node for requested Flow and then loop through the&#xD;
  * nodes in the flow to create an array of the node names in&#xD;
  * the same order as they exist in the flow specification (i.e., Graph file)&#xD;
  * @param flowName used to pass the node list to flow&#xD;
  * @param flow used to continue along the node list&#xD;
  * @return nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_p01sAWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p01sAmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_p01sA2RZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p02TEWRZEe6bAesDIgR3sg" name="getHyperPeriod" method="_qEVgrGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEl_SWRZEe6bAesDIgR3sg">
                  <body>*Calculates the HyperPeriod which is the LCM of all flows.&#xD;
   * &#xD;
   * @return hyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_p02TEmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p02TE2RZEe6bAesDIgR3sg" name="getTotalTxAttemptsInFlow" method="_qEVgrmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p02TFGRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p02TFWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p026IGRZEe6bAesDIgR3sg" name="getNumTxAttemptsPerLink" method="_qEVgsWRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEl_SmRZEe6bAesDIgR3sg">
                  <body>&#xD;
   * @param flowName&#xD;
   * @return Array of integers that represents the transmission attempts</body>
                </ownedComment>
                <ownedParameter xmi:id="_p026IWRZEe6bAesDIgR3sg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p026ImRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_p026I2RZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p03hMWRZEe6bAesDIgR3sg" name="maxFlowLength" method="_qEWHo2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p03hMmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qBQXYGRZEe6bAesDIgR3sg" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_qEVgk2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBQXYWRZEe6bAesDIgR3sg" name="flow" type="_p0V8wGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCvlIGRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBQ-cmRZEe6bAesDIgR3sg" name="addEdge" method="_qEWHoGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBQ-c2RZEe6bAesDIgR3sg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qBQ-dGRZEe6bAesDIgR3sg" name="edge" type="_px5swmRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCtv8GRZEe6bAesDIgR3sg" name="WorkLoad" visibility="package" method="_qETrYGRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qCuXAWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qCuXAmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qElYNGRZEe6bAesDIgR3sg">
                  <body>&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  *</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCtv8WRZEe6bAesDIgR3sg" name="m" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCtv8mRZEe6bAesDIgR3sg" name="e2e" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCuXAGRZEe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCuXA2RZEe6bAesDIgR3sg" type="_p0mbcGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCuXBGRZEe6bAesDIgR3sg" name="WorkLoad" visibility="package" method="_qETrZWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qCuXCWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qCuXCmRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_qElYNWRZEe6bAesDIgR3sg">
                  <body>*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCuXBWRZEe6bAesDIgR3sg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCuXBmRZEe6bAesDIgR3sg" name="m" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCuXB2RZEe6bAesDIgR3sg" name="e2e" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCuXCGRZEe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCuXC2RZEe6bAesDIgR3sg" type="_p0mbcGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCu-EWRZEe6bAesDIgR3sg" name="setMinPacketReceptionRate" method="_qETrcmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qElYOWRZEe6bAesDIgR3sg">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCu-EmRZEe6bAesDIgR3sg" name="minPacketReceptionRate" type="_qCQc8GRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCu-E2RZEe6bAesDIgR3sg" name="setE2e" method="_qETreGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEl_QGRZEe6bAesDIgR3sg">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCu-FGRZEe6bAesDIgR3sg" name="e2e" type="_qCQc8GRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCvlIWRZEe6bAesDIgR3sg" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_qEVglmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCvlImRZEe6bAesDIgR3sg" name="flow" type="_p0V8wGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCvlI2RZEe6bAesDIgR3sg" name="e2e" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCvlJGRZEe6bAesDIgR3sg" name="M" type="_qCQc8GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qCvlJWRZEe6bAesDIgR3sg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qCwMMWRZEe6bAesDIgR3sg" type="_p_fc0GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_p0-18GRZEe6bAesDIgR3sg" name="WorkLoadDescription">
              <ownedComment xmi:id="_qEl_S2RZEe6bAesDIgR3sg">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
Modified by srgoddard&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_qBUo0GRZEe6bAesDIgR3sg" general="_p0AlkGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDyG8GRZEe6bAesDIgR3sg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDyG8WRZEe6bAesDIgR3sg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDyG8mRZEe6bAesDIgR3sg" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_qDyG82RZEe6bAesDIgR3sg" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDyG9GRZEe6bAesDIgR3sg" name="description" visibility="private" type="_px4eoGRZEe6bAesDIgR3sg" association="_qFMcM2RZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDyuAGRZEe6bAesDIgR3sg" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qDyuAmRZEe6bAesDIgR3sg" name="fm" visibility="private" type="_px_MUGRZEe6bAesDIgR3sg" association="_qFNDQWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDyuBGRZEe6bAesDIgR3sg" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEWHpWRZEe6bAesDIgR3sg" name="WorkLoadDescription" specification="_p1AEEGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEWHpmRZEe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEWHp2RZEe6bAesDIgR3sg" type="_p0-18GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEWHqGRZEe6bAesDIgR3sg" name="visualization" specification="_p1AEFWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEWHqWRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEWHqmRZEe6bAesDIgR3sg" name="fileVisualization" specification="_p1ArI2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEWHq2RZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEWHrGRZEe6bAesDIgR3sg" name="toString" specification="_p1BSM2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEWHrWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEWusGRZEe6bAesDIgR3sg" name="initialize" specification="_p1B5Q2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEWusWRZEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEWusmRZEe6bAesDIgR3sg" name="main" specification="_p1CgUGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEWus2RZEe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qEWutGRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoadDescription test = new WorkLoadDescription(&quot;stresstest.txt&quot;);&#xD;
	String [] arr = new String [20];//Primary storage of information&#xD;
	String temp = new String(); //A temporary string to use for information transfer&#xD;
	int trackArraySize = 0; //Used to track the positions in an Array that has information stored.&#xD;
	//This is where the information is put into an array.&#xD;
	Scanner input = new Scanner(test.toString());//Used to process information from test to arr&#xD;
	while (input.hasNextLine()) {&#xD;
		temp = input.nextLine();&#xD;
		temp = temp.replace(&quot;}&quot;, &quot; &quot;);&#xD;
		temp = temp.replace(&quot;{&quot;, &quot; &quot;);&#xD;
		arr[trackArraySize]= temp;&#xD;
		trackArraySize++;&#xD;
	}&#xD;
	input.close();&#xD;
	//The following is where the information is sorted reverse alphabetically.&#xD;
	for(int i=1; i&lt;trackArraySize;i++) {&#xD;
		for(int j=i+1; j&lt;trackArraySize; j++) {&#xD;
			if(arr[j].compareTo(arr[i]) > 0) {&#xD;
				temp = arr[i];&#xD;
				arr[i] = arr[j];&#xD;
				arr[j] = temp;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
	//The following is to print out the sorted array&#xD;
	System.out.println(arr[0]);&#xD;
	for(int i=1; i&lt;trackArraySize-1; i++) {&#xD;
		System.out.println(&quot;Flow &quot; + i + &quot;: &quot; + arr[i]);&#xD;
	}&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p1AEEGRZEe6bAesDIgR3sg" name="WorkLoadDescription" visibility="package" method="_qEWHpWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p1AEEmRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p1AEE2RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p1AEEWRZEe6bAesDIgR3sg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p1AEFGRZEe6bAesDIgR3sg" type="_p0-18GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p1AEFWRZEe6bAesDIgR3sg" name="visualization" method="_qEWHqGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBUBwWRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p1ArI2RZEe6bAesDIgR3sg" name="fileVisualization" method="_qEWHqmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBUBwmRZEe6bAesDIgR3sg" type="_px4eoGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p1BSM2RZEe6bAesDIgR3sg" name="toString" method="_qEWHrGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p1BSNGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p1B5Q2RZEe6bAesDIgR3sg" name="initialize" visibility="private" method="_qEWusGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p1B5RGRZEe6bAesDIgR3sg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p1CgUGRZEe6bAesDIgR3sg" name="main" isStatic="true" method="_qEWusmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p1CgUWRZEe6bAesDIgR3sg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_p1CgUmRZEe6bAesDIgR3sg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_p1DucGRZEe6bAesDIgR3sg" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_qEmmUGRZEe6bAesDIgR3sg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_qCxaUGRZEe6bAesDIgR3sg" general="_p_6Tk2RZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDyuBWRZEe6bAesDIgR3sg" name="workLoad" visibility="package" type="_p0mbcGRZEe6bAesDIgR3sg" association="_qFNDRGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDzVEWRZEe6bAesDIgR3sg" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEWutWRZEe6bAesDIgR3sg" name="WorkLoadListener" specification="_qBVP4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEWutmRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEWut2RZEe6bAesDIgR3sg" type="_p1DucGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEXVwGRZEe6bAesDIgR3sg" name="buildNodesAndFlows" specification="_qBV28GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEXVwWRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEXVwmRZEe6bAesDIgR3sg" name="testPrintStdOut" specification="_p1E8kGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEXVw2RZEe6bAesDIgR3sg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEXVxGRZEe6bAesDIgR3sg" name="enterWarpName" specification="_qBV28mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEXVxWRZEe6bAesDIgR3sg" name="ctx" type="_p_7hsGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEX80GRZEe6bAesDIgR3sg" name="enterFlowName" specification="_qBWeAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEX80WRZEe6bAesDIgR3sg" name="ctx" type="_p_-lAWRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEX80mRZEe6bAesDIgR3sg" name="exitPriority" specification="_qBWeB2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEX802RZEe6bAesDIgR3sg" name="ctx" type="_qBWeBWRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEX81GRZEe6bAesDIgR3sg" name="exitPeriod" specification="_qBXFFmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEX81WRZEe6bAesDIgR3sg" name="ctx" type="_qBXFFGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEX81mRZEe6bAesDIgR3sg" name="exitDeadline" specification="_qBXsJWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEX812RZEe6bAesDIgR3sg" name="ctx" type="_qBXsI2RZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEYj4GRZEe6bAesDIgR3sg" name="exitPhase" specification="_qBYTMmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEYj4WRZEe6bAesDIgR3sg" name="ctx" type="_qBYTMGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEYj4mRZEe6bAesDIgR3sg" name="exitSrcNode" specification="_qBYTN2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEYj42RZEe6bAesDIgR3sg" name="ctx" type="_p__MFWRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEYj5GRZEe6bAesDIgR3sg" name="exitSnkNode" specification="_qBY6Q2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEYj5WRZEe6bAesDIgR3sg" name="ctx" type="_p__zJmRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEYj5mRZEe6bAesDIgR3sg" name="exitFlow" specification="_qBY6SGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEYj52RZEe6bAesDIgR3sg" name="ctx" type="_qAAaNWRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p1E8kGRZEe6bAesDIgR3sg" name="testPrintStdOut" method="_qEXVwmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p1E8kWRZEe6bAesDIgR3sg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qBVP4GRZEe6bAesDIgR3sg" name="WorkLoadListener" visibility="private" method="_qEWutWRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qBVP4mRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qBVP42RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qBVP4WRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qBVP5GRZEe6bAesDIgR3sg" type="_p1DucGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBV28GRZEe6bAesDIgR3sg" name="buildNodesAndFlows" isStatic="true" method="_qEXVwGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBV28WRZEe6bAesDIgR3sg" name="workLoad" type="_p0mbcGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBV28mRZEe6bAesDIgR3sg" name="enterWarpName" method="_qEXVxGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBV282RZEe6bAesDIgR3sg" name="ctx" type="_p_7hsGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBWeAGRZEe6bAesDIgR3sg" name="enterFlowName" method="_qEX80GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBWeAWRZEe6bAesDIgR3sg" name="ctx" type="_p_-lAWRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBWeB2RZEe6bAesDIgR3sg" name="exitPriority" method="_qEX80mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBXFEGRZEe6bAesDIgR3sg" name="ctx" type="_qBWeBWRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBXFFmRZEe6bAesDIgR3sg" name="exitPeriod" method="_qEX81GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBXFF2RZEe6bAesDIgR3sg" name="ctx" type="_qBXFFGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBXsJWRZEe6bAesDIgR3sg" name="exitDeadline" method="_qEX81mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBXsJmRZEe6bAesDIgR3sg" name="ctx" type="_qBXsI2RZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBYTMmRZEe6bAesDIgR3sg" name="exitPhase" method="_qEYj4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBYTM2RZEe6bAesDIgR3sg" name="ctx" type="_qBYTMGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBYTN2RZEe6bAesDIgR3sg" name="exitSrcNode" method="_qEYj4mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBYTOGRZEe6bAesDIgR3sg" name="ctx" type="_p__MFWRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBY6Q2RZEe6bAesDIgR3sg" name="exitSnkNode" method="_qEYj5GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBY6RGRZEe6bAesDIgR3sg" name="ctx" type="_p__zJmRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBY6SGRZEe6bAesDIgR3sg" name="exitFlow" method="_qEYj5mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBY6SWRZEe6bAesDIgR3sg" name="ctx" type="_qAAaNWRZEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_p1H_4GRZEe6bAesDIgR3sg" name="Activation">
              <generalization xmi:id="_qBdLsWRZEe6bAesDIgR3sg" general="_pzY6gGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDzVE2RZEe6bAesDIgR3sg" name="coordinators" type="_p_fc0GRZEe6bAesDIgR3sg" isReadOnly="true" association="_qFNqUWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDz8IWRZEe6bAesDIgR3sg" name="edges" type="_p_fc0GRZEe6bAesDIgR3sg" isReadOnly="true" association="_qFNqVGRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qDz8I2RZEe6bAesDIgR3sg" name="additionalScheduleTimes" type="_p_fc0GRZEe6bAesDIgR3sg" isReadOnly="true" association="_qFORYWRZEe6bAesDIgR3sg"/>
              <ownedAttribute xmi:id="_qD0jMWRZEe6bAesDIgR3sg" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qD0jMmRZEe6bAesDIgR3sg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_qCyBYGRZEe6bAesDIgR3sg" client="_p1H_4GRZEe6bAesDIgR3sg" supplier="_qB20UGRZEe6bAesDIgR3sg" contract="_qB20UGRZEe6bAesDIgR3sg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEYj6GRZEe6bAesDIgR3sg" name="Activation" specification="_p1Im8GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEYj6WRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEYj6mRZEe6bAesDIgR3sg" type="_p1H_4GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEYj62RZEe6bAesDIgR3sg" name="Activation" specification="_qBaIYGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEYj7GRZEe6bAesDIgR3sg" name="elem" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEYj7WRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEYj7mRZEe6bAesDIgR3sg" type="_p1H_4GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEYj72RZEe6bAesDIgR3sg" name="clone" specification="_p1JOAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEYj8GRZEe6bAesDIgR3sg" type="_p1H_4GRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEYj8WRZEe6bAesDIgR3sg" name="getEdgesByReleaseTime" specification="_p1JOBGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEYj8mRZEe6bAesDIgR3sg" type="_py39IGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZK8GRZEe6bAesDIgR3sg" name="getEdgesByLatestReleaseTime" specification="_p1KcIGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZK8WRZEe6bAesDIgR3sg" type="_py39IGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZK8mRZEe6bAesDIgR3sg" name="getEdgesByPeriod" specification="_p1LDMGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZK82RZEe6bAesDIgR3sg" type="_py39IGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZK9GRZEe6bAesDIgR3sg" name="getEdgesByDeadline" specification="_p1LqQWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZK9WRZEe6bAesDIgR3sg" type="_py39IGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZK9mRZEe6bAesDIgR3sg" name="getEdgesByPriority" specification="_p1MRUGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZK92RZEe6bAesDIgR3sg" type="_py39IGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZK-GRZEe6bAesDIgR3sg" name="addEdges" specification="_qCyocGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZK-WRZEe6bAesDIgR3sg" name="edges" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZK-mRZEe6bAesDIgR3sg" name="addEdge" specification="_qBavd2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZK-2RZEe6bAesDIgR3sg" name="edge" type="_px5swmRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZK_GRZEe6bAesDIgR3sg" name="increaseEdgePhases" specification="_p1M4YGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZK_WRZEe6bAesDIgR3sg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZK_mRZEe6bAesDIgR3sg" name="updatePriorityAndRelease" specification="_p1NfcGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZK_2RZEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZLAGRZEe6bAesDIgR3sg" name="addConflict" specification="_p1NfcmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZLAWRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZLAmRZEe6bAesDIgR3sg" name="addConflicts" specification="_qCzPgWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZLA2RZEe6bAesDIgR3sg" name="conflicts" type="_qBOiNGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZLBGRZEe6bAesDIgR3sg" name="addCoordinator" specification="_p1OGgGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZLBWRZEe6bAesDIgR3sg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZLBmRZEe6bAesDIgR3sg" name="addCoordinators" specification="_qCz2kGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZLB2RZEe6bAesDIgR3sg" name="coordinators" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZLCGRZEe6bAesDIgR3sg" name="addScheduleTimes" specification="_qCz2k2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZLCWRZEe6bAesDIgR3sg" name="scheduleTime" type="_p_fc0GRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZLCmRZEe6bAesDIgR3sg" name="getNextScheduleTime" specification="_p1OGgmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZLC2RZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEZLDGRZEe6bAesDIgR3sg" type="_pzLfIGRZEe6bAesDIgR3sg" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyAGRZEe6bAesDIgR3sg" name="getMatchingEndTime" specification="_p1OtkGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZyAWRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEZyAmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyA2RZEe6bAesDIgR3sg" name="getNextStartTime" specification="_p1Otk2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZyBGRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEZyBWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyBmRZEe6bAesDIgR3sg" name="getNextEndTime" specification="_p1P7sWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZyB2RZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEZyCGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyCWRZEe6bAesDIgR3sg" name="getNumEdges" specification="_p1QiwGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZyCmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyC2RZEe6bAesDIgR3sg" name="compareTo" specification="_qBbWgGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZyDGRZEe6bAesDIgR3sg" name="obj" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEZyDWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyDmRZEe6bAesDIgR3sg" name="conflictExists" specification="_qBbWhmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZyD2RZEe6bAesDIgR3sg" name="obj" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEZyEGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyEWRZEe6bAesDIgR3sg" name="canCombine" specification="_qBb9kGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZyEmRZEe6bAesDIgR3sg" name="a2" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEZyE2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyFGRZEe6bAesDIgR3sg" name="getDelta" specification="_p1RJ0GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZyFWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyFmRZEe6bAesDIgR3sg" name="getExecutionDuration" specification="_p1RJ0mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZyF2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyGGRZEe6bAesDIgR3sg" name="getCombinedExecutionDuration" specification="_qBb9k2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZyGWRZEe6bAesDIgR3sg" name="a2" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qEZyGmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyG2RZEe6bAesDIgR3sg" name="printAll" specification="_p1Rw4GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZyHGRZEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyHWRZEe6bAesDIgR3sg" name="printAll" specification="_p1Rw4mRZEe6bAesDIgR3sg">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyHmRZEe6bAesDIgR3sg" name="printEdges" specification="_qBb9lmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZyH2RZEe6bAesDIgR3sg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qEZyIGRZEe6bAesDIgR3sg" name="edges" type="_py2vAGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qEZyIWRZEe6bAesDIgR3sg" name="printEdges" specification="_qBckoWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qEZyImRZEe6bAesDIgR3sg" name="edges" type="_py2vAGRZEe6bAesDIgR3sg"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_p1Im8GRZEe6bAesDIgR3sg" name="Activation" visibility="package" method="_qEYj6GRZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_p1Im8mRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_p1Im82RZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_p1Im8WRZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p1Im9GRZEe6bAesDIgR3sg" type="_p1H_4GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p1JOAGRZEe6bAesDIgR3sg" name="clone" method="_qEYj72RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBavcWRZEe6bAesDIgR3sg" type="_p1H_4GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p1JOBGRZEe6bAesDIgR3sg" name="getEdgesByReleaseTime" method="_qEYj8WRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEmmUWRZEe6bAesDIgR3sg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_qBavcmRZEe6bAesDIgR3sg" type="_py39IGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p1KcIGRZEe6bAesDIgR3sg" name="getEdgesByLatestReleaseTime" method="_qEZK8GRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEmmUmRZEe6bAesDIgR3sg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_qBavc2RZEe6bAesDIgR3sg" type="_py39IGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p1LDMGRZEe6bAesDIgR3sg" name="getEdgesByPeriod" method="_qEZK8mRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEmmU2RZEe6bAesDIgR3sg">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_qBavdGRZEe6bAesDIgR3sg" type="_py39IGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p1LqQWRZEe6bAesDIgR3sg" name="getEdgesByDeadline" method="_qEZK9GRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEmmVGRZEe6bAesDIgR3sg">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_qBavdWRZEe6bAesDIgR3sg" type="_py39IGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p1MRUGRZEe6bAesDIgR3sg" name="getEdgesByPriority" method="_qEZK9mRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEmmVWRZEe6bAesDIgR3sg">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_qBavdmRZEe6bAesDIgR3sg" type="_py39IGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p1M4YGRZEe6bAesDIgR3sg" name="increaseEdgePhases" method="_qEZK_GRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEmmVmRZEe6bAesDIgR3sg">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_p1M4YWRZEe6bAesDIgR3sg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p1NfcGRZEe6bAesDIgR3sg" name="updatePriorityAndRelease" method="_qEZK_mRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEmmV2RZEe6bAesDIgR3sg">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_p1NfcWRZEe6bAesDIgR3sg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p1NfcmRZEe6bAesDIgR3sg" name="addConflict" method="_qEZLAGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p1Nfc2RZEe6bAesDIgR3sg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p1OGgGRZEe6bAesDIgR3sg" name="addCoordinator" method="_qEZLBGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p1OGgWRZEe6bAesDIgR3sg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p1OGgmRZEe6bAesDIgR3sg" name="getNextScheduleTime" method="_qEZLCmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEmmWWRZEe6bAesDIgR3sg">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_p1OGg2RZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qBaveWRZEe6bAesDIgR3sg" type="_pzLfIGRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_p1OtkGRZEe6bAesDIgR3sg" name="getMatchingEndTime" method="_qEZyAGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEmmWmRZEe6bAesDIgR3sg">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_p1OtkWRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p1OtkmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p1Otk2RZEe6bAesDIgR3sg" name="getNextStartTime" method="_qEZyA2RZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEmmW2RZEe6bAesDIgR3sg">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_p1OtlGRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p1P7sGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p1P7sWRZEe6bAesDIgR3sg" name="getNextEndTime" method="_qEZyBmRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEmmXGRZEe6bAesDIgR3sg">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_p1P7smRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_p1P7s2RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p1QiwGRZEe6bAesDIgR3sg" name="getNumEdges" method="_qEZyCWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p1QiwWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p1RJ0GRZEe6bAesDIgR3sg" name="getDelta" method="_qEZyFGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEmmXWRZEe6bAesDIgR3sg">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_p1RJ0WRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p1RJ0mRZEe6bAesDIgR3sg" name="getExecutionDuration" method="_qEZyFmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p1RJ02RZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p1Rw4GRZEe6bAesDIgR3sg" name="printAll" method="_qEZyG2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_p1Rw4WRZEe6bAesDIgR3sg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_p1Rw4mRZEe6bAesDIgR3sg" name="printAll" method="_qEZyHWRZEe6bAesDIgR3sg"/>
              <ownedOperation xmi:id="_qBaIYGRZEe6bAesDIgR3sg" name="Activation" visibility="package" method="_qEYj62RZEe6bAesDIgR3sg">
                <eAnnotations xmi:id="_qBaIY2RZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qBaIZGRZEe6bAesDIgR3sg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qBaIYWRZEe6bAesDIgR3sg" name="elem" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qBaIYmRZEe6bAesDIgR3sg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qBavcGRZEe6bAesDIgR3sg" type="_p1H_4GRZEe6bAesDIgR3sg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBavd2RZEe6bAesDIgR3sg" name="addEdge" method="_qEZK-mRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBaveGRZEe6bAesDIgR3sg" name="edge" type="_px5swmRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBbWgGRZEe6bAesDIgR3sg" name="compareTo" method="_qEZyC2RZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBbWgWRZEe6bAesDIgR3sg" name="obj" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qBbWgmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qBbWhmRZEe6bAesDIgR3sg" name="conflictExists" method="_qEZyDmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBbWh2RZEe6bAesDIgR3sg" name="obj" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qBbWiGRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qBb9kGRZEe6bAesDIgR3sg" name="canCombine" method="_qEZyEWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBb9kWRZEe6bAesDIgR3sg" name="a2" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qBb9kmRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qBb9k2RZEe6bAesDIgR3sg" name="getCombinedExecutionDuration" method="_qEZyGGRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBb9lGRZEe6bAesDIgR3sg" name="a2" type="_p1H_4GRZEe6bAesDIgR3sg"/>
                <ownedParameter xmi:id="_qBb9lWRZEe6bAesDIgR3sg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qBb9lmRZEe6bAesDIgR3sg" name="printEdges" visibility="private" method="_qEZyHmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBb9l2RZEe6bAesDIgR3sg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qBb9mGRZEe6bAesDIgR3sg" name="edges" type="_py2vAGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qBckoWRZEe6bAesDIgR3sg" name="printEdges" visibility="private" method="_qEZyIWRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qBckomRZEe6bAesDIgR3sg" name="edges" type="_py2vAGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCyocGRZEe6bAesDIgR3sg" name="addEdges" method="_qEZK-GRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCyocWRZEe6bAesDIgR3sg" name="edges" type="_p_fc0GRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCzPgWRZEe6bAesDIgR3sg" name="addConflicts" method="_qEZLAmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCzPgmRZEe6bAesDIgR3sg" name="conflicts" type="_qBOiNGRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCz2kGRZEe6bAesDIgR3sg" name="addCoordinators" method="_qEZLBmRZEe6bAesDIgR3sg">
                <ownedParameter xmi:id="_qCz2kWRZEe6bAesDIgR3sg" name="coordinators" type="_p_fc0GRZEe6bAesDIgR3sg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qCz2k2RZEe6bAesDIgR3sg" name="addScheduleTimes" method="_qEZLCGRZEe6bAesDIgR3sg">
                <ownedComment xmi:id="_qEmmWGRZEe6bAesDIgR3sg">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_qCz2lGRZEe6bAesDIgR3sg" name="scheduleTime" type="_p_fc0GRZEe6bAesDIgR3sg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qB5QkGRZEe6bAesDIgR3sg" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_qCKWUmRZEe6bAesDIgR3sg" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_qCdRQGRZEe6bAesDIgR3sg" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_qCiJwGRZEe6bAesDIgR3sg" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_qCiw2GRZEe6bAesDIgR3sg" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_qEeDcGRZEe6bAesDIgR3sg" name="" memberEnd="_qDGKcWRZEe6bAesDIgR3sg _qEeDcWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qEeDcWRZEe6bAesDIgR3sg" name="" type="_px5swmRZEe6bAesDIgR3sg" association="_qEeDcGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qEhGwGRZEe6bAesDIgR3sg" name="" memberEnd="_qDXQNWRZEe6bAesDIgR3sg _qEhGwWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qEhGwWRZEe6bAesDIgR3sg" name="" type="_pzY6gGRZEe6bAesDIgR3sg" association="_qEhGwGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qElYMGRZEe6bAesDIgR3sg" name="" memberEnd="_qDvqsGRZEe6bAesDIgR3sg _qElYMWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qElYMWRZEe6bAesDIgR3sg" name="" type="_p0mbcGRZEe6bAesDIgR3sg" association="_qElYMGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qElYMmRZEe6bAesDIgR3sg" name="" memberEnd="_qDvqsWRZEe6bAesDIgR3sg _qElYM2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qElYM2RZEe6bAesDIgR3sg" name="" type="_p0mbcGRZEe6bAesDIgR3sg" association="_qElYMmRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE3FAGRZEe6bAesDIgR3sg" name="" memberEnd="_qE3FAWRZEe6bAesDIgR3sg _qC9AhGRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE3FAWRZEe6bAesDIgR3sg" name="" type="_pxn_8GRZEe6bAesDIgR3sg" association="_qE3FAGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE3sEWRZEe6bAesDIgR3sg" name="" memberEnd="_qE3sEmRZEe6bAesDIgR3sg _qC9nkWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE3sEmRZEe6bAesDIgR3sg" name="" type="_pxn_8GRZEe6bAesDIgR3sg" association="_qE3sEWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE3sFGRZEe6bAesDIgR3sg" name="" memberEnd="_qE3sFWRZEe6bAesDIgR3sg _qC-OpWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE3sFWRZEe6bAesDIgR3sg" name="" type="_pxonAGRZEe6bAesDIgR3sg" association="_qE3sFGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE4TIWRZEe6bAesDIgR3sg" name="" memberEnd="_qE4TImRZEe6bAesDIgR3sg _qC-Op2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE4TImRZEe6bAesDIgR3sg" name="" type="_pxonAGRZEe6bAesDIgR3sg" association="_qE4TIWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE4TJGRZEe6bAesDIgR3sg" name="" memberEnd="_qE4TJWRZEe6bAesDIgR3sg _qDBR8GRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE4TJWRZEe6bAesDIgR3sg" name="" type="_pxp1IGRZEe6bAesDIgR3sg" association="_qE4TJGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE46MWRZEe6bAesDIgR3sg" name="" memberEnd="_qE46MmRZEe6bAesDIgR3sg _qDB5AmRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE46MmRZEe6bAesDIgR3sg" name="" type="_pxtfgGRZEe6bAesDIgR3sg" association="_qE46MWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE5hQGRZEe6bAesDIgR3sg" name="" memberEnd="_qE5hQWRZEe6bAesDIgR3sg _qDCgFGRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE5hQWRZEe6bAesDIgR3sg" name="" type="_pxtfgGRZEe6bAesDIgR3sg" association="_qE5hQGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE7WcGRZEe6bAesDIgR3sg" name="" memberEnd="_qE7WcWRZEe6bAesDIgR3sg _qDDuMGRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE7WcWRZEe6bAesDIgR3sg" name="" type="_px00QGRZEe6bAesDIgR3sg" association="_qE7WcGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE79gWRZEe6bAesDIgR3sg" name="" memberEnd="_qE79gmRZEe6bAesDIgR3sg _qDEVQ2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE79gmRZEe6bAesDIgR3sg" name="" type="_px00QGRZEe6bAesDIgR3sg" association="_qE79gWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE8kkWRZEe6bAesDIgR3sg" name="" memberEnd="_qE8kkmRZEe6bAesDIgR3sg _qDH_oWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE8kkmRZEe6bAesDIgR3sg" name="" type="_pyDdwWRZEe6bAesDIgR3sg" association="_qE8kkWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE8klGRZEe6bAesDIgR3sg" name="" memberEnd="_qE8klWRZEe6bAesDIgR3sg _qDImsWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE8klWRZEe6bAesDIgR3sg" name="" type="_pyDdwWRZEe6bAesDIgR3sg" association="_qE8klGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE9LoGRZEe6bAesDIgR3sg" name="" memberEnd="_qE9LoWRZEe6bAesDIgR3sg _qDJ00GRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE9LoWRZEe6bAesDIgR3sg" name="" type="_pyI9UGRZEe6bAesDIgR3sg" association="_qE9LoGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE9Lo2RZEe6bAesDIgR3sg" name="" memberEnd="_qE9LpGRZEe6bAesDIgR3sg _qDJ00mRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE9LpGRZEe6bAesDIgR3sg" name="" type="_pyKygGRZEe6bAesDIgR3sg" association="_qE9Lo2RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE9LpmRZEe6bAesDIgR3sg" name="" memberEnd="_qE9Lp2RZEe6bAesDIgR3sg _qDKb4WRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE9Lp2RZEe6bAesDIgR3sg" name="" type="_pyKygGRZEe6bAesDIgR3sg" association="_qE9LpmRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE9ysWRZEe6bAesDIgR3sg" name="" memberEnd="_qE9ysmRZEe6bAesDIgR3sg _qDKb5WRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE9ysmRZEe6bAesDIgR3sg" name="" type="_pyNOwGRZEe6bAesDIgR3sg" association="_qE9ysWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE_A0GRZEe6bAesDIgR3sg" name="" memberEnd="_qE_A0WRZEe6bAesDIgR3sg _qDMREGRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE_A0WRZEe6bAesDIgR3sg" name="" type="_pyWYsGRZEe6bAesDIgR3sg" association="_qE_A0GRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE_n4WRZEe6bAesDIgR3sg" name="" memberEnd="_qE_n4mRZEe6bAesDIgR3sg _qDMREmRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE_n4mRZEe6bAesDIgR3sg" name="" type="_pyWYsGRZEe6bAesDIgR3sg" association="_qE_n4WRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qE_n5GRZEe6bAesDIgR3sg" name="" memberEnd="_qE_n5WRZEe6bAesDIgR3sg _qDMRFGRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qE_n5WRZEe6bAesDIgR3sg" name="" type="_pyWYsGRZEe6bAesDIgR3sg" association="_qE_n5GRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFAO8GRZEe6bAesDIgR3sg" name="" memberEnd="_qFAO8WRZEe6bAesDIgR3sg _qDMRFmRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFAO8WRZEe6bAesDIgR3sg" name="" type="_pyWYsGRZEe6bAesDIgR3sg" association="_qFAO8GRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFAO82RZEe6bAesDIgR3sg" name="" memberEnd="_qFAO9GRZEe6bAesDIgR3sg _qDM4IWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFAO9GRZEe6bAesDIgR3sg" name="" type="_pyWYsGRZEe6bAesDIgR3sg" association="_qFAO82RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFAO9mRZEe6bAesDIgR3sg" name="" memberEnd="_qFAO92RZEe6bAesDIgR3sg _qDNfM2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFAO92RZEe6bAesDIgR3sg" name="" type="_pyaqIGRZEe6bAesDIgR3sg" association="_qFAO9mRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFA2AWRZEe6bAesDIgR3sg" name="" memberEnd="_qFA2AmRZEe6bAesDIgR3sg _qDNfNWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFA2AmRZEe6bAesDIgR3sg" name="" type="_pyaqIGRZEe6bAesDIgR3sg" association="_qFA2AWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFA2BGRZEe6bAesDIgR3sg" name="" memberEnd="_qFA2BWRZEe6bAesDIgR3sg _qDOGQ2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFA2BWRZEe6bAesDIgR3sg" name="" type="_pyeUgGRZEe6bAesDIgR3sg" association="_qFA2BGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFA2B2RZEe6bAesDIgR3sg" name="" memberEnd="_qFA2CGRZEe6bAesDIgR3sg _qDPUZmRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFA2CGRZEe6bAesDIgR3sg" name="" type="_pyydkGRZEe6bAesDIgR3sg" association="_qFA2B2RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFBdEWRZEe6bAesDIgR3sg" name="" memberEnd="_qFBdEmRZEe6bAesDIgR3sg _qDP7cWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFBdEmRZEe6bAesDIgR3sg" name="" type="_pyydkGRZEe6bAesDIgR3sg" association="_qFBdEWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFBdFGRZEe6bAesDIgR3sg" name="" memberEnd="_qFBdFWRZEe6bAesDIgR3sg _qDRJkGRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFBdFWRZEe6bAesDIgR3sg" name="" type="_py81oGRZEe6bAesDIgR3sg" association="_qFBdFGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFBdF2RZEe6bAesDIgR3sg" name="" memberEnd="_qFBdGGRZEe6bAesDIgR3sg _qDRJkmRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFBdGGRZEe6bAesDIgR3sg" name="" type="_py81oGRZEe6bAesDIgR3sg" association="_qFBdF2RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFCEIWRZEe6bAesDIgR3sg" name="" memberEnd="_qFCEImRZEe6bAesDIgR3sg _qDRJlmRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFCEImRZEe6bAesDIgR3sg" name="" type="_py9csGRZEe6bAesDIgR3sg" association="_qFCEIWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFCEJGRZEe6bAesDIgR3sg" name="" memberEnd="_qFCEJWRZEe6bAesDIgR3sg _qDUz8GRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFCEJWRZEe6bAesDIgR3sg" name="" type="_pzPJgWRZEe6bAesDIgR3sg" association="_qFCEJGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFCrMWRZEe6bAesDIgR3sg" name="" memberEnd="_qFCrMmRZEe6bAesDIgR3sg _qDUz8mRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFCrMmRZEe6bAesDIgR3sg" name="" type="_pzPJgWRZEe6bAesDIgR3sg" association="_qFCrMWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFCrNGRZEe6bAesDIgR3sg" name="" memberEnd="_qFCrNWRZEe6bAesDIgR3sg _qDXQNmRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFCrNWRZEe6bAesDIgR3sg" name="" type="_pzY6gGRZEe6bAesDIgR3sg" association="_qFCrNGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFCrN2RZEe6bAesDIgR3sg" name="" memberEnd="_qFCrOGRZEe6bAesDIgR3sg _qDX3QmRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFCrOGRZEe6bAesDIgR3sg" name="" type="_pzY6gGRZEe6bAesDIgR3sg" association="_qFCrN2RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFDSQWRZEe6bAesDIgR3sg" name="" memberEnd="_qFDSQmRZEe6bAesDIgR3sg _qDZscWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFDSQmRZEe6bAesDIgR3sg" name="" type="_pzoLEGRZEe6bAesDIgR3sg" association="_qFDSQWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFDSRGRZEe6bAesDIgR3sg" name="" memberEnd="_qFDSRWRZEe6bAesDIgR3sg _qDZsc2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFDSRWRZEe6bAesDIgR3sg" name="" type="_pzoLEGRZEe6bAesDIgR3sg" association="_qFDSRGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFDSR2RZEe6bAesDIgR3sg" name="" memberEnd="_qFDSSGRZEe6bAesDIgR3sg _qDZsdWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFDSSGRZEe6bAesDIgR3sg" name="" type="_pzoLEGRZEe6bAesDIgR3sg" association="_qFDSR2RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFD5UWRZEe6bAesDIgR3sg" name="" memberEnd="_qFD5UmRZEe6bAesDIgR3sg _qDa6kGRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFD5UmRZEe6bAesDIgR3sg" name="" type="_pzoLEGRZEe6bAesDIgR3sg" association="_qFD5UWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFD5VGRZEe6bAesDIgR3sg" name="" memberEnd="_qFD5VWRZEe6bAesDIgR3sg _qDbhoGRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFD5VWRZEe6bAesDIgR3sg" name="" type="_pzoLEGRZEe6bAesDIgR3sg" association="_qFD5VGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFEgYGRZEe6bAesDIgR3sg" name="" memberEnd="_qFEgYWRZEe6bAesDIgR3sg _qDcIsGRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFEgYWRZEe6bAesDIgR3sg" name="" type="_pzzxQGRZEe6bAesDIgR3sg" association="_qFEgYGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFEgY2RZEe6bAesDIgR3sg" name="" memberEnd="_qFEgZGRZEe6bAesDIgR3sg _qDcvwWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFEgZGRZEe6bAesDIgR3sg" name="" type="_pzzxQGRZEe6bAesDIgR3sg" association="_qFEgY2RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFEgZmRZEe6bAesDIgR3sg" name="" memberEnd="_qFEgZ2RZEe6bAesDIgR3sg _qDcvw2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFEgZ2RZEe6bAesDIgR3sg" name="" type="_pzzxQGRZEe6bAesDIgR3sg" association="_qFEgZmRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFFHcWRZEe6bAesDIgR3sg" name="" memberEnd="_qFFHcmRZEe6bAesDIgR3sg _qDdW0mRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFFHcmRZEe6bAesDIgR3sg" name="" type="_pzzxQGRZEe6bAesDIgR3sg" association="_qFFHcWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFFHdGRZEe6bAesDIgR3sg" name="" memberEnd="_qFFHdWRZEe6bAesDIgR3sg _qDdW12RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFFHdWRZEe6bAesDIgR3sg" name="" type="_pzzxQGRZEe6bAesDIgR3sg" association="_qFFHdGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFFHd2RZEe6bAesDIgR3sg" name="" memberEnd="_qFFHeGRZEe6bAesDIgR3sg _qDdW2WRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFFHeGRZEe6bAesDIgR3sg" name="" type="_pzzxQGRZEe6bAesDIgR3sg" association="_qFFHd2RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFFugWRZEe6bAesDIgR3sg" name="" memberEnd="_qFFugmRZEe6bAesDIgR3sg _qDd94mRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFFugmRZEe6bAesDIgR3sg" name="" type="_pzzxQGRZEe6bAesDIgR3sg" association="_qFFugWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFFuhGRZEe6bAesDIgR3sg" name="" memberEnd="_qFFuhWRZEe6bAesDIgR3sg _qDek8WRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFFuhWRZEe6bAesDIgR3sg" name="" type="_pzzxQGRZEe6bAesDIgR3sg" association="_qFFuhGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFFuh2RZEe6bAesDIgR3sg" name="" memberEnd="_qFFuiGRZEe6bAesDIgR3sg _qDek82RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFFuiGRZEe6bAesDIgR3sg" name="" type="_pz7GAGRZEe6bAesDIgR3sg" association="_qFFuh2RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFGVkWRZEe6bAesDIgR3sg" name="" memberEnd="_qFGVkmRZEe6bAesDIgR3sg _qDfMAGRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFGVkmRZEe6bAesDIgR3sg" name="" type="_pz7GAGRZEe6bAesDIgR3sg" association="_qFGVkWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFGVlGRZEe6bAesDIgR3sg" name="" memberEnd="_qFGVlWRZEe6bAesDIgR3sg _qDfMAmRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFGVlWRZEe6bAesDIgR3sg" name="" type="_pz7GAGRZEe6bAesDIgR3sg" association="_qFGVlGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFGVl2RZEe6bAesDIgR3sg" name="" memberEnd="_qFGVmGRZEe6bAesDIgR3sg _qDfzEWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFGVmGRZEe6bAesDIgR3sg" name="" type="_pz7GAGRZEe6bAesDIgR3sg" association="_qFGVl2RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFG8oWRZEe6bAesDIgR3sg" name="" memberEnd="_qFG8omRZEe6bAesDIgR3sg _qDfzFGRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFG8omRZEe6bAesDIgR3sg" name="" type="_pz7GAGRZEe6bAesDIgR3sg" association="_qFG8oWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFG8pGRZEe6bAesDIgR3sg" name="" memberEnd="_qFG8pWRZEe6bAesDIgR3sg _qDfzF2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFG8pWRZEe6bAesDIgR3sg" name="" type="_pz7GAGRZEe6bAesDIgR3sg" association="_qFG8pGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFHjsWRZEe6bAesDIgR3sg" name="" memberEnd="_qFHjsmRZEe6bAesDIgR3sg _qDgaIWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFHjsmRZEe6bAesDIgR3sg" name="" type="_pz7GAGRZEe6bAesDIgR3sg" association="_qFHjsWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFIKwWRZEe6bAesDIgR3sg" name="" memberEnd="_qFIKwmRZEe6bAesDIgR3sg _qDgaI2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFIKwmRZEe6bAesDIgR3sg" name="" type="_p0AlkGRZEe6bAesDIgR3sg" association="_qFIKwWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFIx0WRZEe6bAesDIgR3sg" name="" memberEnd="_qFIx0mRZEe6bAesDIgR3sg _qDoV8mRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFIx0mRZEe6bAesDIgR3sg" name="" type="_p0PPEGRZEe6bAesDIgR3sg" association="_qFIx0WRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFJY4GRZEe6bAesDIgR3sg" name="" memberEnd="_qFJY4WRZEe6bAesDIgR3sg _qDo9AWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFJY4WRZEe6bAesDIgR3sg" name="" type="_p0PPEGRZEe6bAesDIgR3sg" association="_qFJY4GRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFJY42RZEe6bAesDIgR3sg" name="" memberEnd="_qFJY5GRZEe6bAesDIgR3sg _qDqyM2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFJY5GRZEe6bAesDIgR3sg" name="" type="_p0V8wGRZEe6bAesDIgR3sg" association="_qFJY42RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFJ_8GRZEe6bAesDIgR3sg" name="" memberEnd="_qFJ_8WRZEe6bAesDIgR3sg _qDqyNmRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFJ_8WRZEe6bAesDIgR3sg" name="" type="_p0V8wGRZEe6bAesDIgR3sg" association="_qFJ_8GRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFJ_82RZEe6bAesDIgR3sg" name="" memberEnd="_qFJ_9GRZEe6bAesDIgR3sg _qDrZQmRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFJ_9GRZEe6bAesDIgR3sg" name="" type="_p0V8wGRZEe6bAesDIgR3sg" association="_qFJ_82RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFJ_9mRZEe6bAesDIgR3sg" name="" memberEnd="_qFJ_92RZEe6bAesDIgR3sg _qDrZRWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFJ_92RZEe6bAesDIgR3sg" name="" type="_p0V8wGRZEe6bAesDIgR3sg" association="_qFJ_9mRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFKnAWRZEe6bAesDIgR3sg" name="" memberEnd="_qFKnAmRZEe6bAesDIgR3sg _qDsAUWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFKnAmRZEe6bAesDIgR3sg" name="" type="_p0V8wGRZEe6bAesDIgR3sg" association="_qFKnAWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFKnBGRZEe6bAesDIgR3sg" name="" memberEnd="_qFKnBWRZEe6bAesDIgR3sg _qDsAU2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFKnBWRZEe6bAesDIgR3sg" name="" type="_p0fGsGRZEe6bAesDIgR3sg" association="_qFKnBGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFKnB2RZEe6bAesDIgR3sg" name="" memberEnd="_qFKnCGRZEe6bAesDIgR3sg _qDsnYWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFKnCGRZEe6bAesDIgR3sg" name="" type="_p0fGsGRZEe6bAesDIgR3sg" association="_qFKnB2RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFLOEWRZEe6bAesDIgR3sg" name="" memberEnd="_qFLOEmRZEe6bAesDIgR3sg _qDsnY2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFLOEmRZEe6bAesDIgR3sg" name="" type="_p0fGsGRZEe6bAesDIgR3sg" association="_qFLOEWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFLOFGRZEe6bAesDIgR3sg" name="" memberEnd="_qFLOFWRZEe6bAesDIgR3sg _qDsnZWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFLOFWRZEe6bAesDIgR3sg" name="" type="_p0fGsGRZEe6bAesDIgR3sg" association="_qFLOFGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFL1IWRZEe6bAesDIgR3sg" name="" memberEnd="_qFL1ImRZEe6bAesDIgR3sg _qDsnZ2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFL1ImRZEe6bAesDIgR3sg" name="" type="_p0fGsGRZEe6bAesDIgR3sg" association="_qFL1IWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFL1JGRZEe6bAesDIgR3sg" name="" memberEnd="_qFL1JWRZEe6bAesDIgR3sg _qDwRwWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFL1JWRZEe6bAesDIgR3sg" name="" type="_p0mbcGRZEe6bAesDIgR3sg" association="_qFL1JGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFMcMGRZEe6bAesDIgR3sg" name="" memberEnd="_qFMcMWRZEe6bAesDIgR3sg _qDw40mRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFMcMWRZEe6bAesDIgR3sg" name="" type="_p0mbcGRZEe6bAesDIgR3sg" association="_qFMcMGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFMcM2RZEe6bAesDIgR3sg" name="" memberEnd="_qFMcNGRZEe6bAesDIgR3sg _qDyG9GRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFMcNGRZEe6bAesDIgR3sg" name="" type="_p0-18GRZEe6bAesDIgR3sg" association="_qFMcM2RZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFNDQWRZEe6bAesDIgR3sg" name="" memberEnd="_qFNDQmRZEe6bAesDIgR3sg _qDyuAmRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFNDQmRZEe6bAesDIgR3sg" name="" type="_p0-18GRZEe6bAesDIgR3sg" association="_qFNDQWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFNDRGRZEe6bAesDIgR3sg" name="" memberEnd="_qFNDRWRZEe6bAesDIgR3sg _qDyuBWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFNDRWRZEe6bAesDIgR3sg" name="" type="_p1DucGRZEe6bAesDIgR3sg" association="_qFNDRGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFNqUWRZEe6bAesDIgR3sg" name="" memberEnd="_qFNqUmRZEe6bAesDIgR3sg _qDzVE2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFNqUmRZEe6bAesDIgR3sg" name="" type="_p1H_4GRZEe6bAesDIgR3sg" association="_qFNqUWRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFNqVGRZEe6bAesDIgR3sg" name="" memberEnd="_qFNqVWRZEe6bAesDIgR3sg _qDz8IWRZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFNqVWRZEe6bAesDIgR3sg" name="" type="_p1H_4GRZEe6bAesDIgR3sg" association="_qFNqVGRZEe6bAesDIgR3sg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_qFORYWRZEe6bAesDIgR3sg" name="" memberEnd="_qFORYmRZEe6bAesDIgR3sg _qDz8I2RZEe6bAesDIgR3sg">
              <ownedEnd xmi:id="_qFORYmRZEe6bAesDIgR3sg" name="" type="_p1H_4GRZEe6bAesDIgR3sg" association="_qFORYWRZEe6bAesDIgR3sg"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_pvf5BWRZEe6bAesDIgR3sg" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_p_6Tk2RZEe6bAesDIgR3sg" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_p_6TlWRZEe6bAesDIgR3sg" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_p_66oGRZEe6bAesDIgR3sg" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_qCnCQWRZEe6bAesDIgR3sg" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_pv6vwGRZEe6bAesDIgR3sg" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_qAwBEGRZEe6bAesDIgR3sg" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_pvSdomRZEe6bAesDIgR3sg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_pvSdo2RZEe6bAesDIgR3sg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_pvU54GRZEe6bAesDIgR3sg" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_p_igIWRZEe6bAesDIgR3sg" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_pwR8IGRZEe6bAesDIgR3sg" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_qBPJQ2RZEe6bAesDIgR3sg" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_py39IGRZEe6bAesDIgR3sg" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_p_bLYGRZEe6bAesDIgR3sg" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_p_fc0GRZEe6bAesDIgR3sg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_p_fc0mRZEe6bAesDIgR3sg" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_p_h5EGRZEe6bAesDIgR3sg" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_p_p04GRZEe6bAesDIgR3sg" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_qAUjQGRZEe6bAesDIgR3sg" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qAm3IGRZEe6bAesDIgR3sg" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_qAneMWRZEe6bAesDIgR3sg" name="Queue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qAwoIWRZEe6bAesDIgR3sg" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qBOiMGRZEe6bAesDIgR3sg" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_qBOiMmRZEe6bAesDIgR3sg" name="List"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_qBOiNGRZEe6bAesDIgR3sg" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qBPJQWRZEe6bAesDIgR3sg" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qBTasGRZEe6bAesDIgR3sg" name="Scanner"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_pvcOo2RZEe6bAesDIgR3sg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_p_v7gGRZEe6bAesDIgR3sg" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_p_v7gmRZEe6bAesDIgR3sg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qADdgGRZEe6bAesDIgR3sg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qADdgmRZEe6bAesDIgR3sg" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_pvcOpGRZEe6bAesDIgR3sg" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_pvcOpWRZEe6bAesDIgR3sg" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_p_wikWRZEe6bAesDIgR3sg" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_p_xJoWRZEe6bAesDIgR3sg" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_p_xwsWRZEe6bAesDIgR3sg" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_pvhuMGRZEe6bAesDIgR3sg" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_qABoUmRZEe6bAesDIgR3sg" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qB2NQWRZEe6bAesDIgR3sg" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_qB20UGRZEe6bAesDIgR3sg" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qCAlUGRZEe6bAesDIgR3sg" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_qCQc8GRZEe6bAesDIgR3sg" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_pvcOoGRZEe6bAesDIgR3sg" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_pvcOoWRZEe6bAesDIgR3sg" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_pvcOomRZEe6bAesDIgR3sg" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_p_vUcGRZEe6bAesDIgR3sg" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_pvcOpmRZEe6bAesDIgR3sg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_pvcOp2RZEe6bAesDIgR3sg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_pviVQGRZEe6bAesDIgR3sg" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_qAC2cWRZEe6bAesDIgR3sg" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_qAC2c2RZEe6bAesDIgR3sg" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_p_yXwWRZEe6bAesDIgR3sg" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qACPYWRZEe6bAesDIgR3sg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qACPY2RZEe6bAesDIgR3sg" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qACPZWRZEe6bAesDIgR3sg" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_pvf5AGRZEe6bAesDIgR3sg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_pvf5AWRZEe6bAesDIgR3sg" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_pvf5AmRZEe6bAesDIgR3sg" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_pvf5A2RZEe6bAesDIgR3sg" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_pvf5BGRZEe6bAesDIgR3sg" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_p_5sg2RZEe6bAesDIgR3sg" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_p_6TkWRZEe6bAesDIgR3sg" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_p_4eYGRZEe6bAesDIgR3sg" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_p_5FcWRZEe6bAesDIgR3sg" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_p_5sgWRZEe6bAesDIgR3sg" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_pvhHIGRZEe6bAesDIgR3sg" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_p_7hsGRZEe6bAesDIgR3sg" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_p_8Iw2RZEe6bAesDIgR3sg" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_p_-lAWRZEe6bAesDIgR3sg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_p__MFWRZEe6bAesDIgR3sg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_p__zJmRZEe6bAesDIgR3sg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qAAaNWRZEe6bAesDIgR3sg" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qBWeBWRZEe6bAesDIgR3sg" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qBXFFGRZEe6bAesDIgR3sg" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qBXsI2RZEe6bAesDIgR3sg" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qBYTMGRZEe6bAesDIgR3sg" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_pwFH0GRZEe6bAesDIgR3sg" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_qA-DgGRZEe6bAesDIgR3sg" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qA-DgmRZEe6bAesDIgR3sg" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qA-DhGRZEe6bAesDIgR3sg" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qA-qkWRZEe6bAesDIgR3sg" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qA-qk2RZEe6bAesDIgR3sg" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_pwKAUGRZEe6bAesDIgR3sg" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_qBC8AGRZEe6bAesDIgR3sg" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qBEKJWRZEe6bAesDIgR3sg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qBExNGRZEe6bAesDIgR3sg" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qBFYQ2RZEe6bAesDIgR3sg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qBF_UmRZEe6bAesDIgR3sg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_qBGmY2RZEe6bAesDIgR3sg" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="_pSWqAGRZEe6bAesDIgR3sg">
      <eAnnotations xmi:id="_pSWqAWRZEe6bAesDIgR3sg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_pSXREGRZEe6bAesDIgR3sg" base_Package="_pN5n0GRZEe6bAesDIgR3sg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_pxkVkGRZEe6bAesDIgR3sg" genericsValue="T,E" base_Element="_pxjugGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_pxsRYGRZEe6bAesDIgR3sg" genericsValue="String" base_Element="_pxrqU2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_pxvUsGRZEe6bAesDIgR3sg" genericsValue="String" base_Element="_pxutomRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_px1bUWRZEe6bAesDIgR3sg" base_Element="_px1bUGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_px1bUmRZEe6bAesDIgR3sg" base_Element="_px1bUGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_px1bU2RZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_px2CYWRZEe6bAesDIgR3sg" base_Element="_px2CYGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_px2CYmRZEe6bAesDIgR3sg" base_Element="_px2CYGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_px2CY2RZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_px2CZWRZEe6bAesDIgR3sg" base_Element="_px2CZGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_px2pcGRZEe6bAesDIgR3sg" base_Element="_px2CZGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_px2pcWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_px33kWRZEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_px33kGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_px5Fu2RZEe6bAesDIgR3sg" base_Element="_px5FuWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_px5swGRZEe6bAesDIgR3sg" base_Element="_px5FuWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_px5swWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_px664WRZEe6bAesDIgR3sg" base_Element="_px664GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_px8wEmRZEe6bAesDIgR3sg" base_Element="_px8wEGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_px8wE2RZEe6bAesDIgR3sg" base_Element="_px8wEGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_px8wFGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_px9XImRZEe6bAesDIgR3sg" base_Element="_px9XIGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_px9XI2RZEe6bAesDIgR3sg" base_Element="_px9XIGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_px9XJGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_px9-MGRZEe6bAesDIgR3sg" base_Element="_px9XJWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_px9-MWRZEe6bAesDIgR3sg" base_Element="_px9XJWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_px9-MmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pyFS8GRZEe6bAesDIgR3sg" base_Element="_pyEr4GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pyFS8WRZEe6bAesDIgR3sg" base_Element="_pyEr4GRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pyFS8mRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_pyMnsGRZEe6bAesDIgR3sg" dimensions="2" base_Element="_pyMAoGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_pycfUGRZEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_pybRMGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_pydtcGRZEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_pydGYGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pyfiomRZEe6bAesDIgR3sg" base_Element="_pyfioGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pygJsGRZEe6bAesDIgR3sg" base_Element="_pyfioGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pygJsWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pygww2RZEe6bAesDIgR3sg" base_Element="_pygwwWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pyhX0GRZEe6bAesDIgR3sg" base_Element="_pygwwWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pyhX0WRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pyh-4GRZEe6bAesDIgR3sg" base_Element="_pyhX0mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pyh-4WRZEe6bAesDIgR3sg" base_Element="_pyhX0mRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pyh-4mRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pymQUGRZEe6bAesDIgR3sg" base_Element="_pylpSWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pymQUWRZEe6bAesDIgR3sg" base_Element="_pylpSWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pymQUmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_pynecGRZEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_pym3YGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pyp6sGRZEe6bAesDIgR3sg" base_Element="_pypToGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pyp6sWRZEe6bAesDIgR3sg" base_Element="_pypToGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pyqhwGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_pyuMIGRZEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_pytlEGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pyvaQWRZEe6bAesDIgR3sg" base_Element="_pyvaQGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pywBVGRZEe6bAesDIgR3sg" base_Element="_pywBU2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pyzEoGRZEe6bAesDIgR3sg" base_Element="_pyydkWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pyzEoWRZEe6bAesDIgR3sg" base_Element="_pyydkWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pyzEomRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pyzEpGRZEe6bAesDIgR3sg" base_Element="_pyzEo2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pyzEpWRZEe6bAesDIgR3sg" base_Element="_pyzEo2RZEe6bAesDIgR3sg">
    <annotations xmi:id="_pyzrsGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pyzrsmRZEe6bAesDIgR3sg" base_Element="_pyzrsWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pyzrs2RZEe6bAesDIgR3sg" base_Element="_pyzrsWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pyzrtGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_pyzruGRZEe6bAesDIgR3sg" base_Element="_pyzrtWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_py0SwGRZEe6bAesDIgR3sg" base_Element="_pyzrtWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_py0SwWRZEe6bAesDIgR3sg" base_Element="_pyzrtWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_py0SwmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_py0SxmRZEe6bAesDIgR3sg" dimensions="2" base_Element="_py0Sw2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_py0Sx2RZEe6bAesDIgR3sg" base_Element="_py0Sw2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_py0SyGRZEe6bAesDIgR3sg" base_Element="_py0Sw2RZEe6bAesDIgR3sg">
    <annotations xmi:id="_py0SyWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_py2H8GRZEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_py1g4GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_py3WEGRZEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_py2vAGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_py39IWRZEe6bAesDIgR3sg" base_Element="_py39IGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_py4kMGRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_py39ImRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_py_R4GRZEe6bAesDIgR3sg" base_Element="_py-q0GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_py_R4WRZEe6bAesDIgR3sg" base_Element="_py-q0GRZEe6bAesDIgR3sg">
    <annotations xmi:id="_py_R4mRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_pzAgAWRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_pzAgAGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_pzDjUGRZEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_pzC8QGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_pzFYgGRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_pzExcGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pzGmoWRZEe6bAesDIgR3sg" base_Element="_pzGmoGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_pzN7YGRZEe6bAesDIgR3sg" genericsValue="T extends SchedulableObject" base_Element="_pzNUUGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_pzPJgGRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_pzOidGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_pzb90GRZEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_pzbWymRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_pzlu0GRZEe6bAesDIgR3sg" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_pzlHwGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pzscgGRZEe6bAesDIgR3sg" base_Element="_pzr1dWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pzscgWRZEe6bAesDIgR3sg" base_Element="_pzr1dWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pzscgmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pzsch2RZEe6bAesDIgR3sg" base_Element="_pzschWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pzsciGRZEe6bAesDIgR3sg" base_Element="_pzschWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pzsciWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pztDkWRZEe6bAesDIgR3sg" base_Element="_pzscimRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pztDkmRZEe6bAesDIgR3sg" base_Element="_pzscimRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pztDk2RZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pzuRsGRZEe6bAesDIgR3sg" base_Element="_pztqoGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pzuRsWRZEe6bAesDIgR3sg" base_Element="_pztqoGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pzuRsmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pzuRtGRZEe6bAesDIgR3sg" base_Element="_pzuRs2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pzu4wGRZEe6bAesDIgR3sg" base_Element="_pzuRs2RZEe6bAesDIgR3sg">
    <annotations xmi:id="_pzu4wWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pzu4xGRZEe6bAesDIgR3sg" base_Element="_pzu4wmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pzu4xWRZEe6bAesDIgR3sg" base_Element="_pzu4wmRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pzu4xmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pzvf0GRZEe6bAesDIgR3sg" base_Element="_pzu4x2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pzvf0WRZEe6bAesDIgR3sg" base_Element="_pzu4x2RZEe6bAesDIgR3sg">
    <annotations xmi:id="_pzvf0mRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pzvf1mRZEe6bAesDIgR3sg" base_Element="_pzvf1GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pzvf12RZEe6bAesDIgR3sg" base_Element="_pzvf1GRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pzvf2GRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_pzwG4WRZEe6bAesDIgR3sg" genericsValue="String, Integer" base_Element="_pzwG4GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_pz0_YWRZEe6bAesDIgR3sg" genericsValue="String, Integer" base_Element="_pz0_YGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_pz1mcWRZEe6bAesDIgR3sg" genericsValue="String" base_Element="_pz1mcGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_pz2Ng2RZEe6bAesDIgR3sg" base_Element="_pz2NgGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pz8UIWRZEe6bAesDIgR3sg" base_Element="_pz8UIGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pz8UImRZEe6bAesDIgR3sg" base_Element="_pz8UIGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pz8UI2RZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pz8UJWRZEe6bAesDIgR3sg" base_Element="_pz8UJGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pz87MGRZEe6bAesDIgR3sg" base_Element="_pz8UJGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pz87MWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pz9iQGRZEe6bAesDIgR3sg" base_Element="_pz87MmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_pz9iQWRZEe6bAesDIgR3sg" base_Element="_pz87MmRZEe6bAesDIgR3sg">
    <annotations xmi:id="_pz9iQmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_p0Do5GRZEe6bAesDIgR3sg" base_Element="_p0Do4WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_p0EP8mRZEe6bAesDIgR3sg" dimensions="2" base_Element="_p0Do5WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_p0H6UGRZEe6bAesDIgR3sg" base_Element="_p0HTQWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_p0OoAmRZEe6bAesDIgR3sg" genericsValue="InstructionParameters" base_Element="_p0OoAGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_p0P2ImRZEe6bAesDIgR3sg" genericsValue="InstructionParameters" base_Element="_p0P2IWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_p0YZAWRZEe6bAesDIgR3sg" genericsValue="Node" base_Element="_p0YZAGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_p0ZnIGRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_p0ZAEGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_p0aOMGRZEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_p0ZnIWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0cDYmRZEe6bAesDIgR3sg" base_Element="_p0cDYGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0cqcGRZEe6bAesDIgR3sg" base_Element="_p0cDYGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0cqcWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0ftwWRZEe6bAesDIgR3sg" base_Element="_p0ftwGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0ftwmRZEe6bAesDIgR3sg" base_Element="_p0ftwGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0gU0GRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0gU0mRZEe6bAesDIgR3sg" base_Element="_p0gU0WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0gU02RZEe6bAesDIgR3sg" base_Element="_p0gU0WRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0gU1GRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0gU1mRZEe6bAesDIgR3sg" base_Element="_p0gU1WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0g74GRZEe6bAesDIgR3sg" base_Element="_p0gU1WRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0g74WRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0g742RZEe6bAesDIgR3sg" base_Element="_p0g74mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0g75GRZEe6bAesDIgR3sg" base_Element="_p0g74mRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0g75WRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0g752RZEe6bAesDIgR3sg" base_Element="_p0g75mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0g76GRZEe6bAesDIgR3sg" base_Element="_p0g75mRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0g76WRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0hi8WRZEe6bAesDIgR3sg" base_Element="_p0hi8GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0hi8mRZEe6bAesDIgR3sg" base_Element="_p0hi8GRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0hi82RZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0hi9mRZEe6bAesDIgR3sg" base_Element="_p0hi9GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0hi92RZEe6bAesDIgR3sg" base_Element="_p0hi9GRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0hi-GRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0iKAmRZEe6bAesDIgR3sg" base_Element="_p0iKAGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0iKA2RZEe6bAesDIgR3sg" base_Element="_p0iKAGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0iKBGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0iKB2RZEe6bAesDIgR3sg" base_Element="_p0iKBWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0ixEGRZEe6bAesDIgR3sg" base_Element="_p0iKBWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0ixEWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0ixE2RZEe6bAesDIgR3sg" base_Element="_p0ixEmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0ixFGRZEe6bAesDIgR3sg" base_Element="_p0ixEmRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0ixFWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0ixF2RZEe6bAesDIgR3sg" base_Element="_p0ixFmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0ixGGRZEe6bAesDIgR3sg" base_Element="_p0ixFmRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0ixGWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0jYImRZEe6bAesDIgR3sg" base_Element="_p0jYIGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0jYI2RZEe6bAesDIgR3sg" base_Element="_p0jYIGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0jYJGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0jYJ2RZEe6bAesDIgR3sg" base_Element="_p0jYJWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0jYKGRZEe6bAesDIgR3sg" base_Element="_p0jYJWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0jYKWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0j_MmRZEe6bAesDIgR3sg" base_Element="_p0j_MGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0j_M2RZEe6bAesDIgR3sg" base_Element="_p0j_MGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0j_NGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0j_N2RZEe6bAesDIgR3sg" base_Element="_p0j_NWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0j_OGRZEe6bAesDIgR3sg" base_Element="_p0j_NWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0j_OWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p0kmQGRZEe6bAesDIgR3sg" base_Element="_p0j_OmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p0kmQWRZEe6bAesDIgR3sg" base_Element="_p0j_OmRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p0kmQmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_p0z20mRZEe6bAesDIgR3sg" base_Element="_p0zPwmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_p01E8GRZEe6bAesDIgR3sg" base_Element="_p00d4mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_p02TEGRZEe6bAesDIgR3sg" base_Element="_p01sAGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_p03hMGRZEe6bAesDIgR3sg" base_Element="_p026IGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p1ArIGRZEe6bAesDIgR3sg" base_Element="_p1AEFWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p1ArIWRZEe6bAesDIgR3sg" base_Element="_p1AEFWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p1ArImRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p1BSMGRZEe6bAesDIgR3sg" base_Element="_p1ArI2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p1BSMWRZEe6bAesDIgR3sg" base_Element="_p1ArI2RZEe6bAesDIgR3sg">
    <annotations xmi:id="_p1BSMmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p1B5QGRZEe6bAesDIgR3sg" base_Element="_p1BSM2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p1B5QWRZEe6bAesDIgR3sg" base_Element="_p1BSM2RZEe6bAesDIgR3sg">
    <annotations xmi:id="_p1B5QmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p1JOAWRZEe6bAesDIgR3sg" base_Element="_p1JOAGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p1JOAmRZEe6bAesDIgR3sg" base_Element="_p1JOAGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p1JOA2RZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_p1J1EGRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_p1JOBGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_p1KcIWRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_p1KcIGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_p1LqQGRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_p1LDMGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_p1LqQmRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_p1LqQWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_p1MRUWRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_p1MRUGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_cZgGRZEe6bAesDIgR3sg" base_Element="_p_bLYGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_p_dAkWRZEe6bAesDIgR3sg" genericsValue="String, Activation" base_Element="_p_dAkGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_fc0WRZEe6bAesDIgR3sg" base_Element="_p_fc0GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_gD4GRZEe6bAesDIgR3sg" base_Element="_p_fc0mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_igIGRZEe6bAesDIgR3sg" base_Element="_p_h5EGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_igImRZEe6bAesDIgR3sg" base_Element="_p_igIWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p_mxk2RZEe6bAesDIgR3sg" base_Element="_p_mxkGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p_mxlGRZEe6bAesDIgR3sg" base_Element="_p_mxkGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p_nYoGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_p_qb8GRZEe6bAesDIgR3sg" base_Element="_p_p04GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p_tfQGRZEe6bAesDIgR3sg" base_Element="_p_s4MGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p_tfQWRZEe6bAesDIgR3sg" base_Element="_p_s4MGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p_tfQmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_p_vUcWRZEe6bAesDIgR3sg" base_Element="_p_vUcGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_v7gWRZEe6bAesDIgR3sg" base_Element="_p_v7gGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_wikGRZEe6bAesDIgR3sg" base_Element="_p_v7gmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_xJoGRZEe6bAesDIgR3sg" base_Element="_p_wikWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_xwsGRZEe6bAesDIgR3sg" base_Element="_p_xJoWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_yXwGRZEe6bAesDIgR3sg" base_Element="_p_xwsWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_yXwmRZEe6bAesDIgR3sg" base_Element="_p_yXwWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_p_2CIGRZEe6bAesDIgR3sg" genericsValue="String, Flow" base_Element="_p_1bEGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_p_2pMWRZEe6bAesDIgR3sg" genericsValue="Node, Activation" base_Element="_p_2pMGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_5FcGRZEe6bAesDIgR3sg" base_Element="_p_4eYGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_5sgGRZEe6bAesDIgR3sg" base_Element="_p_5FcWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_5sgmRZEe6bAesDIgR3sg" base_Element="_p_5sgWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_6TkGRZEe6bAesDIgR3sg" base_Element="_p_5sg2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_6TkmRZEe6bAesDIgR3sg" base_Element="_p_6TkWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_6TlGRZEe6bAesDIgR3sg" base_Element="_p_6Tk2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_6TlmRZEe6bAesDIgR3sg" base_Element="_p_6TlWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_66oWRZEe6bAesDIgR3sg" base_Element="_p_66oGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_p_7hsWRZEe6bAesDIgR3sg" base_Element="_p_7hsGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p_8IwGRZEe6bAesDIgR3sg" base_Element="_p_7hsmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p_8IwWRZEe6bAesDIgR3sg" base_Element="_p_7hsmRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p_8IwmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_p_8v0GRZEe6bAesDIgR3sg" base_Element="_p_8Iw2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p_998GRZEe6bAesDIgR3sg" base_Element="_p_8v0WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p_998WRZEe6bAesDIgR3sg" base_Element="_p_8v0WRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p_-lAGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_p_-lAmRZEe6bAesDIgR3sg" base_Element="_p_-lAWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p__MEmRZEe6bAesDIgR3sg" base_Element="_p__MEGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p__ME2RZEe6bAesDIgR3sg" base_Element="_p__MEGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p__MFGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_p__zIGRZEe6bAesDIgR3sg" base_Element="_p__MFWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_p__zI2RZEe6bAesDIgR3sg" base_Element="_p__zIWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_p__zJGRZEe6bAesDIgR3sg" base_Element="_p__zIWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_p__zJWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_p__zJ2RZEe6bAesDIgR3sg" base_Element="_p__zJmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qAAaMmRZEe6bAesDIgR3sg" base_Element="_qAAaMGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qAAaM2RZEe6bAesDIgR3sg" base_Element="_qAAaMGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qAAaNGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qABBQGRZEe6bAesDIgR3sg" base_Element="_qAAaNWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qABBQ2RZEe6bAesDIgR3sg" base_Element="_qABBQWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qABoUGRZEe6bAesDIgR3sg" base_Element="_qABBQWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qABoUWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qACPYGRZEe6bAesDIgR3sg" base_Element="_qABoUmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qACPYmRZEe6bAesDIgR3sg" base_Element="_qACPYWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qACPZGRZEe6bAesDIgR3sg" base_Element="_qACPY2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qAC2cGRZEe6bAesDIgR3sg" base_Element="_qACPZWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qAC2cmRZEe6bAesDIgR3sg" base_Element="_qAC2cWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qAC2dGRZEe6bAesDIgR3sg" base_Element="_qAC2c2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qADdgWRZEe6bAesDIgR3sg" base_Element="_qADdgGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qAEEkGRZEe6bAesDIgR3sg" base_Element="_qADdgmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qAFSsWRZEe6bAesDIgR3sg" genericsValue="String" base_Element="_qAFSsGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qAF5wGRZEe6bAesDIgR3sg" base_Element="_qAFSsmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qAJkI2RZEe6bAesDIgR3sg" base_Element="_qAJkIGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qAJkJGRZEe6bAesDIgR3sg" base_Element="_qAJkIGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qAJkJWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qALZUGRZEe6bAesDIgR3sg" genericsValue="String, Node" base_Element="_qAKyQGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qAMncWRZEe6bAesDIgR3sg" base_Element="_qAMncGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qANOgGRZEe6bAesDIgR3sg" base_Element="_qAMncmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qAPDsGRZEe6bAesDIgR3sg" base_Element="_qAOcpGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qAPDsWRZEe6bAesDIgR3sg" base_Element="_qAOcpGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qAPDsmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qAPqxWRZEe6bAesDIgR3sg" genericsValue="ScheduleTime" base_Element="_qAPqwGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qASHAGRZEe6bAesDIgR3sg" base_Element="_qARf82RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qASHAWRZEe6bAesDIgR3sg" base_Element="_qARf82RZEe6bAesDIgR3sg">
    <annotations xmi:id="_qASHAmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qATVIGRZEe6bAesDIgR3sg" genericsValue="String,InstructionTimeSlot" base_Element="_qASuEGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qAVKUGRZEe6bAesDIgR3sg" base_Element="_qAUjQGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qAVKVmRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_qAVKUmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qAW_gGRZEe6bAesDIgR3sg" genericsValue="Double" base_Element="_qAWYcGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qAYNoGRZEe6bAesDIgR3sg" genericsValue="Double,ReliabilityRow" base_Element="_qAXmkGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qAb4AGRZEe6bAesDIgR3sg" base_Element="_qAbQ8GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qAdtMGRZEe6bAesDIgR3sg" genericsValue="Activation,Row&lt;Activation>" base_Element="_qAdGIWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qAeUQGRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_qAdtMmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qAneMGRZEe6bAesDIgR3sg" base_Element="_qAm3IGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qAoFQGRZEe6bAesDIgR3sg" base_Element="_qAneMWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qAwoIGRZEe6bAesDIgR3sg" base_Element="_qAwBEGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qAwoImRZEe6bAesDIgR3sg" base_Element="_qAwoIWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qA-DgWRZEe6bAesDIgR3sg" base_Element="_qA-DgGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qA-Dg2RZEe6bAesDIgR3sg" base_Element="_qA-DgmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qA-qkGRZEe6bAesDIgR3sg" base_Element="_qA-DhGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qA-qkmRZEe6bAesDIgR3sg" base_Element="_qA-qkWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qA-qlGRZEe6bAesDIgR3sg" base_Element="_qA-qk2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qBDjEGRZEe6bAesDIgR3sg" base_Element="_qBC8AGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBDjE2RZEe6bAesDIgR3sg" base_Element="_qBDjEWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBDjFGRZEe6bAesDIgR3sg" base_Element="_qBDjEWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBDjFWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBEKImRZEe6bAesDIgR3sg" base_Element="_qBEKIGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBEKI2RZEe6bAesDIgR3sg" base_Element="_qBEKIGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBEKJGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qBEKJmRZEe6bAesDIgR3sg" base_Element="_qBEKJWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBExMWRZEe6bAesDIgR3sg" base_Element="_qBEKJ2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBExMmRZEe6bAesDIgR3sg" base_Element="_qBEKJ2RZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBExM2RZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qBExNWRZEe6bAesDIgR3sg" base_Element="_qBExNGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBFYQGRZEe6bAesDIgR3sg" base_Element="_qBExNmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBFYQWRZEe6bAesDIgR3sg" base_Element="_qBExNmRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBFYQmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qBFYRGRZEe6bAesDIgR3sg" base_Element="_qBFYQ2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBFYR2RZEe6bAesDIgR3sg" base_Element="_qBFYRWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBF_UGRZEe6bAesDIgR3sg" base_Element="_qBFYRWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBF_UWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qBF_U2RZEe6bAesDIgR3sg" base_Element="_qBF_UmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBGmYGRZEe6bAesDIgR3sg" base_Element="_qBF_VGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBGmYWRZEe6bAesDIgR3sg" base_Element="_qBF_VGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBGmYmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qBHNcGRZEe6bAesDIgR3sg" base_Element="_qBGmY2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBHNc2RZEe6bAesDIgR3sg" base_Element="_qBHNcWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBHNdGRZEe6bAesDIgR3sg" base_Element="_qBHNcWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBHNdWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBJptWRZEe6bAesDIgR3sg" base_Element="_qBJpsmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBKQwGRZEe6bAesDIgR3sg" base_Element="_qBJpsmRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBKQwWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qBOiMWRZEe6bAesDIgR3sg" base_Element="_qBOiMGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qBOiM2RZEe6bAesDIgR3sg" base_Element="_qBOiMmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qBPJQGRZEe6bAesDIgR3sg" base_Element="_qBOiNGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qBPJQmRZEe6bAesDIgR3sg" base_Element="_qBPJQWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qBPJRGRZEe6bAesDIgR3sg" base_Element="_qBPJQ2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qBQ-cGRZEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_qBQXYGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qBUBwGRZEe6bAesDIgR3sg" base_Element="_qBTasGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBV29GRZEe6bAesDIgR3sg" base_Element="_qBV28mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBV29WRZEe6bAesDIgR3sg" base_Element="_qBV28mRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBV29mRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBWeAmRZEe6bAesDIgR3sg" base_Element="_qBWeAGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBWeA2RZEe6bAesDIgR3sg" base_Element="_qBWeAGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBWeBGRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qBWeBmRZEe6bAesDIgR3sg" base_Element="_qBWeBWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBXFEWRZEe6bAesDIgR3sg" base_Element="_qBWeB2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBXFEmRZEe6bAesDIgR3sg" base_Element="_qBWeB2RZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBXFE2RZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qBXFFWRZEe6bAesDIgR3sg" base_Element="_qBXFFGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBXsIGRZEe6bAesDIgR3sg" base_Element="_qBXFFmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBXsIWRZEe6bAesDIgR3sg" base_Element="_qBXFFmRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBXsImRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qBXsJGRZEe6bAesDIgR3sg" base_Element="_qBXsI2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBXsJ2RZEe6bAesDIgR3sg" base_Element="_qBXsJWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBXsKGRZEe6bAesDIgR3sg" base_Element="_qBXsJWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBXsKWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qBYTMWRZEe6bAesDIgR3sg" base_Element="_qBYTMGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBYTNGRZEe6bAesDIgR3sg" base_Element="_qBYTMmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBYTNWRZEe6bAesDIgR3sg" base_Element="_qBYTMmRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBYTNmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBY6QGRZEe6bAesDIgR3sg" base_Element="_qBYTN2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBY6QWRZEe6bAesDIgR3sg" base_Element="_qBYTN2RZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBY6QmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBY6RWRZEe6bAesDIgR3sg" base_Element="_qBY6Q2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBY6RmRZEe6bAesDIgR3sg" base_Element="_qBY6Q2RZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBY6R2RZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBZhUGRZEe6bAesDIgR3sg" base_Element="_qBY6SGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBZhUWRZEe6bAesDIgR3sg" base_Element="_qBY6SGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBZhUmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qBbWg2RZEe6bAesDIgR3sg" base_Element="_qBbWgGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qBbWhGRZEe6bAesDIgR3sg" base_Element="_qBbWgGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qBbWhWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qBckoGRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_qBb9mGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qBdLsGRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_qBckomRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qBu4gWRZEe6bAesDIgR3sg" genericsValue="T, E" base_Element="_qBu4gGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qBwGoGRZEe6bAesDIgR3sg" genericsValue="String" base_Element="_qBvfkGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qBzJ8GRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_qBx70WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qBzJ8WRZEe6bAesDIgR3sg" genericsValue="String" base_Element="_qBx70mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qB0_IGRZEe6bAesDIgR3sg" genericsValue="String" base_Element="_qB0YEWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qB2NQGRZEe6bAesDIgR3sg" genericsValue="String" base_Element="_qB1mMWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qB20UWRZEe6bAesDIgR3sg" base_Element="_qB20UGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qB20U2RZEe6bAesDIgR3sg" genericsValue="Activation" base_Element="_qB20UmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qB3bY2RZEe6bAesDIgR3sg" base_Element="_qB3bYGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qB4CcGRZEe6bAesDIgR3sg" genericsValue="Node" base_Element="_qB3bYWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qB4CcWRZEe6bAesDIgR3sg" base_Element="_qB3bYGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qB4CcmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qB4pgGRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_qB4Cc2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qB5QkWRZEe6bAesDIgR3sg" base_Element="_qB5QkGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qB53pGRZEe6bAesDIgR3sg" base_Element="_qB53oGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qB53pWRZEe6bAesDIgR3sg" base_Element="_qB53oGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qB53pmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qB6esGRZEe6bAesDIgR3sg" genericsValue="String" base_Element="_qB53p2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qB7FwGRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_qB6esWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qB868mRZEe6bAesDIgR3sg" base_Element="_qB8T4GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qB9iAGRZEe6bAesDIgR3sg" genericsValue="Node" base_Element="_qB868GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qB9iAWRZEe6bAesDIgR3sg" base_Element="_qB8T4GRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qB9iAmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qCAlUWRZEe6bAesDIgR3sg" base_Element="_qCAlUGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCCagGRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_qCBzcGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qCEPsWRZEe6bAesDIgR3sg" base_Element="_qCDBkGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qCEPsmRZEe6bAesDIgR3sg" base_Element="_qCDBkGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qCEPs2RZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qCE2wGRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_qCEPtGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qCGr8GRZEe6bAesDIgR3sg" base_Element="_qCFd0GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qCGr8WRZEe6bAesDIgR3sg" base_Element="_qCFd0GRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qCGr8mRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qCH6EGRZEe6bAesDIgR3sg" genericsValue="Node" base_Element="_qCHTAGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCJvQGRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_qCJIMGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qCJvRWRZEe6bAesDIgR3sg" base_Element="_qCJvQWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qCKWUGRZEe6bAesDIgR3sg" base_Element="_qCJvQWRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qCKWUWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qCKWU2RZEe6bAesDIgR3sg" base_Element="_qCKWUmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCLkcWRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_qCLkcGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qCMLhGRZEe6bAesDIgR3sg" base_Element="_qCMLgGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qCMykGRZEe6bAesDIgR3sg" base_Element="_qCMLgGRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qCMykWRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qCOAsGRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_qCNZoGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qCP14GRZEe6bAesDIgR3sg" base_Element="_qCPO0GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Annotations xmi:id="_qCP14WRZEe6bAesDIgR3sg" base_Element="_qCPO0GRZEe6bAesDIgR3sg">
    <annotations xmi:id="_qCP14mRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qCQc8WRZEe6bAesDIgR3sg" base_Element="_qCQc8GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCUuYGRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_qCUHVGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCXKoGRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_qCWjkWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCY_0GRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_qCXxsWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCZm4GRZEe6bAesDIgR3sg" genericsValue="T" base_Element="_qCXxsmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCcqMWRZEe6bAesDIgR3sg" genericsValue="E" base_Element="_qCcqMGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qCdRQWRZEe6bAesDIgR3sg" base_Element="_qCdRQGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCg7oGRZEe6bAesDIgR3sg" genericsValue="Node" base_Element="_qCgUk2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_qCg7pWRZEe6bAesDIgR3sg" base_Element="_qCg7oWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qChisGRZEe6bAesDIgR3sg" genericsValue="Node" base_Element="_qCg7omRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qCiw0GRZEe6bAesDIgR3sg" base_Element="_qCiJwGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qCjX4GRZEe6bAesDIgR3sg" base_Element="_qCiw2GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_qCj-9GRZEe6bAesDIgR3sg" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_qCj-8mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qCj-9WRZEe6bAesDIgR3sg" base_Element="_qCj-8mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qCnCQmRZEe6bAesDIgR3sg" base_Element="_qCnCQWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCo3cGRZEe6bAesDIgR3sg" genericsValue="Flow" base_Element="_qCoQYGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCpehGRZEe6bAesDIgR3sg" genericsValue="Node" base_Element="_qCpeg2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCqFkmRZEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_qCqFkWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCwMMGRZEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_qCvlIWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCyBYWRZEe6bAesDIgR3sg" genericsValue="Activation" base_Element="_qCyBYGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCzPgGRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_qCyocWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCzPg2RZEe6bAesDIgR3sg" genericsValue="String" base_Element="_qCzPgmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qCz2kmRZEe6bAesDIgR3sg" genericsValue="String" base_Element="_qCz2kWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qC0doGRZEe6bAesDIgR3sg" genericsValue="ScheduleTime" base_Element="_qCz2lGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qC9nkGRZEe6bAesDIgR3sg" base_Element="_qC9AhGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qC9nkmRZEe6bAesDIgR3sg" base_Element="_qC9nkWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qC-OoGRZEe6bAesDIgR3sg" base_Element="_qC9nk2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qC-OpmRZEe6bAesDIgR3sg" base_Element="_qC-OpWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qC-1sGRZEe6bAesDIgR3sg" base_Element="_qC-Op2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDAq4GRZEe6bAesDIgR3sg" base_Element="_qC_cwmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDAq4mRZEe6bAesDIgR3sg" base_Element="_qDAq4WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDBR8WRZEe6bAesDIgR3sg" genericsValue="ChannelSet" base_Element="_qDBR8GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDBR8mRZEe6bAesDIgR3sg" base_Element="_qDBR8GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDCgEGRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_qDB5AmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDCgEWRZEe6bAesDIgR3sg" base_Element="_qDB5AmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDCgE2RZEe6bAesDIgR3sg" base_Element="_qDCgEmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDDHIGRZEe6bAesDIgR3sg" genericsValue="String" base_Element="_qDCgFGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDDHIWRZEe6bAesDIgR3sg" base_Element="_qDCgFGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDDHI2RZEe6bAesDIgR3sg" base_Element="_qDDHImRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDDHJWRZEe6bAesDIgR3sg" base_Element="_qDDHJGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDDuMWRZEe6bAesDIgR3sg" base_Element="_qDDuMGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDEVQGRZEe6bAesDIgR3sg" base_Element="_qDDuMmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDEVQmRZEe6bAesDIgR3sg" base_Element="_qDEVQWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDE8UGRZEe6bAesDIgR3sg" base_Element="_qDEVQ2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDGxgWRZEe6bAesDIgR3sg" base_Element="_qDGxgGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDHYlWRZEe6bAesDIgR3sg" base_Element="_qDHYlGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDH_oGRZEe6bAesDIgR3sg" base_Element="_qDHYlmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDH_omRZEe6bAesDIgR3sg" base_Element="_qDH_oWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDH_pGRZEe6bAesDIgR3sg" base_Element="_qDH_o2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDImsGRZEe6bAesDIgR3sg" base_Element="_qDH_pWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDJNwGRZEe6bAesDIgR3sg" base_Element="_qDImsWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDJ00WRZEe6bAesDIgR3sg" base_Element="_qDJ00GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDKb4GRZEe6bAesDIgR3sg" base_Element="_qDJ00mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDKb4mRZEe6bAesDIgR3sg" base_Element="_qDKb4WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDKb5mRZEe6bAesDIgR3sg" base_Element="_qDKb5WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDLC8mRZEe6bAesDIgR3sg" base_Element="_qDLC8WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDLC9WRZEe6bAesDIgR3sg" base_Element="_qDLC82RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDLqAmRZEe6bAesDIgR3sg" base_Element="_qDLqAWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDLqBmRZEe6bAesDIgR3sg" base_Element="_qDLqBGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDMREWRZEe6bAesDIgR3sg" base_Element="_qDMREGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDMRE2RZEe6bAesDIgR3sg" base_Element="_qDMREmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDMRFWRZEe6bAesDIgR3sg" base_Element="_qDMRFGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDM4IGRZEe6bAesDIgR3sg" base_Element="_qDMRFmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDM4ImRZEe6bAesDIgR3sg" genericsValue="String, Integer" base_Element="_qDM4IWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDM4I2RZEe6bAesDIgR3sg" base_Element="_qDM4IWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDNfNGRZEe6bAesDIgR3sg" base_Element="_qDNfM2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDNfNmRZEe6bAesDIgR3sg" base_Element="_qDNfNWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDOGRGRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_qDOGQ2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDP7cGRZEe6bAesDIgR3sg" base_Element="_qDPUZmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDP7cmRZEe6bAesDIgR3sg" base_Element="_qDP7cWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDP7dGRZEe6bAesDIgR3sg" base_Element="_qDP7c2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDRJkWRZEe6bAesDIgR3sg" base_Element="_qDRJkGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDRJk2RZEe6bAesDIgR3sg" base_Element="_qDRJkmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDRJl2RZEe6bAesDIgR3sg" base_Element="_qDRJlmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDRwoWRZEe6bAesDIgR3sg" base_Element="_qDRwoGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDTl1GRZEe6bAesDIgR3sg" base_Element="_qDTl02RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDUM4WRZEe6bAesDIgR3sg" base_Element="_qDUM4GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDUM5GRZEe6bAesDIgR3sg" base_Element="_qDUM4mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDUM5mRZEe6bAesDIgR3sg" base_Element="_qDUM5WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDUz8WRZEe6bAesDIgR3sg" base_Element="_qDUz8GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDUz82RZEe6bAesDIgR3sg" base_Element="_qDUz8mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDUz9WRZEe6bAesDIgR3sg" base_Element="_qDUz9GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDVbAGRZEe6bAesDIgR3sg" base_Element="_qDUz9mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDWpIGRZEe6bAesDIgR3sg" base_Element="_qDWCGWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDWpJWRZEe6bAesDIgR3sg" base_Element="_qDWpJGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDWpJ2RZEe6bAesDIgR3sg" base_Element="_qDWpJmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDXQMWRZEe6bAesDIgR3sg" base_Element="_qDXQMGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDX3QGRZEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_qDXQNmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDX3QWRZEe6bAesDIgR3sg" base_Element="_qDXQNmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDX3Q2RZEe6bAesDIgR3sg" genericsValue="SchedulableObject" base_Element="_qDX3QmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDZscmRZEe6bAesDIgR3sg" base_Element="_qDZscWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDZsdGRZEe6bAesDIgR3sg" base_Element="_qDZsc2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDZsdmRZEe6bAesDIgR3sg" base_Element="_qDZsdWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDaTgGRZEe6bAesDIgR3sg" base_Element="_qDZsd2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDaTgmRZEe6bAesDIgR3sg" base_Element="_qDaTgWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDaThGRZEe6bAesDIgR3sg" base_Element="_qDaTg2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDaThmRZEe6bAesDIgR3sg" base_Element="_qDaThWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDaTiGRZEe6bAesDIgR3sg" base_Element="_qDaTh2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDa6kWRZEe6bAesDIgR3sg" base_Element="_qDa6kGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDa6k2RZEe6bAesDIgR3sg" base_Element="_qDa6kmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDa6lWRZEe6bAesDIgR3sg" base_Element="_qDa6lGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDa6l2RZEe6bAesDIgR3sg" base_Element="_qDa6lmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDbhoWRZEe6bAesDIgR3sg" base_Element="_qDbhoGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDcvwGRZEe6bAesDIgR3sg" base_Element="_qDcIsGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDcvwmRZEe6bAesDIgR3sg" base_Element="_qDcvwWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDdW0WRZEe6bAesDIgR3sg" base_Element="_qDcvw2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDdW1mRZEe6bAesDIgR3sg" base_Element="_qDdW0mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDdW2GRZEe6bAesDIgR3sg" base_Element="_qDdW12RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDd94GRZEe6bAesDIgR3sg" genericsValue="Activation" base_Element="_qDdW2WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDd94WRZEe6bAesDIgR3sg" base_Element="_qDdW2WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDd942RZEe6bAesDIgR3sg" genericsValue="String, Integer" base_Element="_qDd94mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDek8GRZEe6bAesDIgR3sg" base_Element="_qDd94mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDek8mRZEe6bAesDIgR3sg" base_Element="_qDek8WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDek9GRZEe6bAesDIgR3sg" base_Element="_qDek82RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDfMAWRZEe6bAesDIgR3sg" base_Element="_qDfMAGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDfMA2RZEe6bAesDIgR3sg" base_Element="_qDfMAmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDfMBWRZEe6bAesDIgR3sg" base_Element="_qDfMBGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDfMB2RZEe6bAesDIgR3sg" base_Element="_qDfMBmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDfzEGRZEe6bAesDIgR3sg" base_Element="_qDfMCGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDfzE2RZEe6bAesDIgR3sg" base_Element="_qDfzEWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDfzFmRZEe6bAesDIgR3sg" base_Element="_qDfzFGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDgaIGRZEe6bAesDIgR3sg" base_Element="_qDfzF2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDgaImRZEe6bAesDIgR3sg" base_Element="_qDgaIWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDgaJGRZEe6bAesDIgR3sg" base_Element="_qDgaI2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDhBMWRZEe6bAesDIgR3sg" base_Element="_qDhBMGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDhBM2RZEe6bAesDIgR3sg" base_Element="_qDhBMmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Array xmi:id="_qDhBOGRZEe6bAesDIgR3sg" dimensions="2" base_Element="_qDhBNmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDhoQGRZEe6bAesDIgR3sg" base_Element="_qDhBNmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDiPWGRZEe6bAesDIgR3sg" base_Element="_qDiPV2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDi2YGRZEe6bAesDIgR3sg" base_Element="_qDiPWWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDi2YmRZEe6bAesDIgR3sg" base_Element="_qDi2YWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDi2ZGRZEe6bAesDIgR3sg" base_Element="_qDi2Y2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDi2ZmRZEe6bAesDIgR3sg" base_Element="_qDi2ZWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDi2aGRZEe6bAesDIgR3sg" base_Element="_qDi2Z2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDjdcWRZEe6bAesDIgR3sg" base_Element="_qDjdcGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDjdc2RZEe6bAesDIgR3sg" base_Element="_qDjdcmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDjddWRZEe6bAesDIgR3sg" base_Element="_qDjddGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDkEgGRZEe6bAesDIgR3sg" base_Element="_qDjddmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDkEgmRZEe6bAesDIgR3sg" base_Element="_qDkEgWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDkEhGRZEe6bAesDIgR3sg" base_Element="_qDkEg2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDkEhmRZEe6bAesDIgR3sg" base_Element="_qDkEhWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDkEiGRZEe6bAesDIgR3sg" base_Element="_qDkEh2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDkrkmRZEe6bAesDIgR3sg" base_Element="_qDkrkGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDkrlGRZEe6bAesDIgR3sg" base_Element="_qDkrk2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDkrlmRZEe6bAesDIgR3sg" base_Element="_qDkrlWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDlSoWRZEe6bAesDIgR3sg" base_Element="_qDlSoGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDnu5WRZEe6bAesDIgR3sg" base_Element="_qDnu42RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDoV8WRZEe6bAesDIgR3sg" base_Element="_qDoV8GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDoV82RZEe6bAesDIgR3sg" genericsValue="InstructionParameters" base_Element="_qDoV8mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDo9AGRZEe6bAesDIgR3sg" base_Element="_qDoV8mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDo9AmRZEe6bAesDIgR3sg" base_Element="_qDo9AWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDqLJ2RZEe6bAesDIgR3sg" base_Element="_qDqLJWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDqyMGRZEe6bAesDIgR3sg" base_Element="_qDqLKGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDqyMmRZEe6bAesDIgR3sg" base_Element="_qDqyMWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDqyNGRZEe6bAesDIgR3sg" genericsValue="Node" base_Element="_qDqyM2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDqyNWRZEe6bAesDIgR3sg" base_Element="_qDqyM2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDrZQGRZEe6bAesDIgR3sg" genericsValue="Integer" base_Element="_qDqyNmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDrZQWRZEe6bAesDIgR3sg" base_Element="_qDqyNmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDrZQ2RZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_qDrZQmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDrZRGRZEe6bAesDIgR3sg" base_Element="_qDrZQmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDsAUGRZEe6bAesDIgR3sg" base_Element="_qDrZRWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDsAUmRZEe6bAesDIgR3sg" base_Element="_qDsAUWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDsnYGRZEe6bAesDIgR3sg" base_Element="_qDsAU2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDsnYmRZEe6bAesDIgR3sg" base_Element="_qDsnYWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDsnZGRZEe6bAesDIgR3sg" base_Element="_qDsnY2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDsnZmRZEe6bAesDIgR3sg" base_Element="_qDsnZWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDtOcGRZEe6bAesDIgR3sg" base_Element="_qDsnZ2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDtOcmRZEe6bAesDIgR3sg" base_Element="_qDtOcWRZEe6bAesDIgR3sg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_qDtOc2RZEe6bAesDIgR3sg" name="getNumChannels" method="_qESdRWRZEe6bAesDIgR3sg">
      <ownedParameter xmi:id="_qDtOdGRZEe6bAesDIgR3sg" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_qDtOdWRZEe6bAesDIgR3sg" base_Element="_qDtOc2RZEe6bAesDIgR3sg">
    <annotations xmi:id="_qDtOdmRZEe6bAesDIgR3sg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDt1gWRZEe6bAesDIgR3sg" base_Element="_qDtOd2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDt1hGRZEe6bAesDIgR3sg" base_Element="_qDt1gmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDvDpWRZEe6bAesDIgR3sg" base_Element="_qDvDo2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDvDqmRZEe6bAesDIgR3sg" base_Element="_qDvDqGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDwRwGRZEe6bAesDIgR3sg" base_Element="_qDvqsmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDw40GRZEe6bAesDIgR3sg" genericsValue="String" base_Element="_qDwRwWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDw402RZEe6bAesDIgR3sg" genericsValue="String" base_Element="_qDw40mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDyG9WRZEe6bAesDIgR3sg" base_Element="_qDyG9GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDyuAWRZEe6bAesDIgR3sg" base_Element="_qDyuAGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDyuA2RZEe6bAesDIgR3sg" base_Element="_qDyuAmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDzVEGRZEe6bAesDIgR3sg" base_Element="_qDyuBWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qDzVEmRZEe6bAesDIgR3sg" base_Element="_qDzVEWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDz8IGRZEe6bAesDIgR3sg" genericsValue="String" base_Element="_qDzVE2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qDz8ImRZEe6bAesDIgR3sg" genericsValue="Edge" base_Element="_qDz8IWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Generics xmi:id="_qD0jMGRZEe6bAesDIgR3sg" genericsValue="ScheduleTime" base_Element="_qDz8I2RZEe6bAesDIgR3sg"/>
  <uml:OpaqueBehavior xmi:id="_qESdRWRZEe6bAesDIgR3sg" name="getNumChannels" specification="_qDtOc2RZEe6bAesDIgR3sg">
    <ownedParameter xmi:id="_qESdRmRZEe6bAesDIgR3sg" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_qE3sEGRZEe6bAesDIgR3sg" base_Element="_qE3FAGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE3sE2RZEe6bAesDIgR3sg" base_Element="_qE3sEWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE4TIGRZEe6bAesDIgR3sg" base_Element="_qE3sFGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE4TI2RZEe6bAesDIgR3sg" base_Element="_qE4TIWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE46MGRZEe6bAesDIgR3sg" base_Element="_qE4TJGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE46M2RZEe6bAesDIgR3sg" base_Element="_qE46MWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE5hQmRZEe6bAesDIgR3sg" base_Element="_qE5hQGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE79gGRZEe6bAesDIgR3sg" base_Element="_qE7WcGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE8kkGRZEe6bAesDIgR3sg" base_Element="_qE79gWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE8kk2RZEe6bAesDIgR3sg" base_Element="_qE8kkWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE8klmRZEe6bAesDIgR3sg" base_Element="_qE8klGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE9LomRZEe6bAesDIgR3sg" base_Element="_qE9LoGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE9LpWRZEe6bAesDIgR3sg" base_Element="_qE9Lo2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE9ysGRZEe6bAesDIgR3sg" base_Element="_qE9LpmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE-ZwGRZEe6bAesDIgR3sg" base_Element="_qE9ysWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE_n4GRZEe6bAesDIgR3sg" base_Element="_qE_A0GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE_n42RZEe6bAesDIgR3sg" base_Element="_qE_n4WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qE_n5mRZEe6bAesDIgR3sg" base_Element="_qE_n5GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFAO8mRZEe6bAesDIgR3sg" base_Element="_qFAO8GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFAO9WRZEe6bAesDIgR3sg" base_Element="_qFAO82RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFA2AGRZEe6bAesDIgR3sg" base_Element="_qFAO9mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFA2A2RZEe6bAesDIgR3sg" base_Element="_qFA2AWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFA2BmRZEe6bAesDIgR3sg" base_Element="_qFA2BGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFBdEGRZEe6bAesDIgR3sg" base_Element="_qFA2B2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFBdE2RZEe6bAesDIgR3sg" base_Element="_qFBdEWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFBdFmRZEe6bAesDIgR3sg" base_Element="_qFBdFGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFCEIGRZEe6bAesDIgR3sg" base_Element="_qFBdF2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFCEI2RZEe6bAesDIgR3sg" base_Element="_qFCEIWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFCrMGRZEe6bAesDIgR3sg" base_Element="_qFCEJGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFCrM2RZEe6bAesDIgR3sg" base_Element="_qFCrMWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFCrNmRZEe6bAesDIgR3sg" base_Element="_qFCrNGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFDSQGRZEe6bAesDIgR3sg" base_Element="_qFCrN2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFDSQ2RZEe6bAesDIgR3sg" base_Element="_qFDSQWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFDSRmRZEe6bAesDIgR3sg" base_Element="_qFDSRGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFD5UGRZEe6bAesDIgR3sg" base_Element="_qFDSR2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFD5U2RZEe6bAesDIgR3sg" base_Element="_qFD5UWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFD5VmRZEe6bAesDIgR3sg" base_Element="_qFD5VGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFEgYmRZEe6bAesDIgR3sg" base_Element="_qFEgYGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFEgZWRZEe6bAesDIgR3sg" base_Element="_qFEgY2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFFHcGRZEe6bAesDIgR3sg" base_Element="_qFEgZmRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFFHc2RZEe6bAesDIgR3sg" base_Element="_qFFHcWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFFHdmRZEe6bAesDIgR3sg" base_Element="_qFFHdGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFFugGRZEe6bAesDIgR3sg" base_Element="_qFFHd2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFFug2RZEe6bAesDIgR3sg" base_Element="_qFFugWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFFuhmRZEe6bAesDIgR3sg" base_Element="_qFFuhGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFGVkGRZEe6bAesDIgR3sg" base_Element="_qFFuh2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFGVk2RZEe6bAesDIgR3sg" base_Element="_qFGVkWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFGVlmRZEe6bAesDIgR3sg" base_Element="_qFGVlGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFG8oGRZEe6bAesDIgR3sg" base_Element="_qFGVl2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFG8o2RZEe6bAesDIgR3sg" base_Element="_qFG8oWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFHjsGRZEe6bAesDIgR3sg" base_Element="_qFG8pGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFIKwGRZEe6bAesDIgR3sg" base_Element="_qFHjsWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFIx0GRZEe6bAesDIgR3sg" base_Element="_qFIKwWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFIx02RZEe6bAesDIgR3sg" base_Element="_qFIx0WRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFJY4mRZEe6bAesDIgR3sg" base_Element="_qFJY4GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFJY5WRZEe6bAesDIgR3sg" base_Element="_qFJY42RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFJ_8mRZEe6bAesDIgR3sg" base_Element="_qFJ_8GRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFJ_9WRZEe6bAesDIgR3sg" base_Element="_qFJ_82RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFKnAGRZEe6bAesDIgR3sg" base_Element="_qFJ_9mRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFKnA2RZEe6bAesDIgR3sg" base_Element="_qFKnAWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFKnBmRZEe6bAesDIgR3sg" base_Element="_qFKnBGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFLOEGRZEe6bAesDIgR3sg" base_Element="_qFKnB2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFLOE2RZEe6bAesDIgR3sg" base_Element="_qFLOEWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFL1IGRZEe6bAesDIgR3sg" base_Element="_qFLOFGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFL1I2RZEe6bAesDIgR3sg" base_Element="_qFL1IWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFL1JmRZEe6bAesDIgR3sg" base_Element="_qFL1JGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFMcMmRZEe6bAesDIgR3sg" base_Element="_qFMcMGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFNDQGRZEe6bAesDIgR3sg" base_Element="_qFMcM2RZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFNDQ2RZEe6bAesDIgR3sg" base_Element="_qFNDQWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFNqUGRZEe6bAesDIgR3sg" base_Element="_qFNDRGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFNqU2RZEe6bAesDIgR3sg" base_Element="_qFNqUWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFORYGRZEe6bAesDIgR3sg" base_Element="_qFNqVGRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Reference xmi:id="_qFORY2RZEe6bAesDIgR3sg" base_Element="_qFORYWRZEe6bAesDIgR3sg"/>
  <UMLLabProfile:Patch xmi:id="_q5PvUGRZEe6bAesDIgR3sg" base_Element="_px5swmRZEe6bAesDIgR3sg" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_q5Q9cWRZEe6bAesDIgR3sg" base_Element="_pyuzMGRZEe6bAesDIgR3sg" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_q5RkgGRZEe6bAesDIgR3sg" base_Element="_pzF_kGRZEe6bAesDIgR3sg" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_q5TZsGRZEe6bAesDIgR3sg" base_Element="_p0GFIGRZEe6bAesDIgR3sg" patchText="@@ -3770,22 +3770,25 @@&#xA; f, ra)%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_7Ma2QGUyEe6bAesDIgR3sg" base_Element="_pyWYsGRZEe6bAesDIgR3sg" patchText="@@ -704,16 +704,18 @@&#xA; MISS%22;%0D%0A&#xA;+  &#xA; private &#xA;" conflicting="false"/>
</xmi:XMI>
